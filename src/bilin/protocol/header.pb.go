// Code generated by protoc-gen-tars. DO NOT EDIT.
// source: header.proto

package bilin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Header_EXTENDKEY int32

const (
	Header_VERSION Header_EXTENDKEY = 0
)

var Header_EXTENDKEY_name = map[int32]string{
	0: "VERSION",
}
var Header_EXTENDKEY_value = map[string]int32{
	"VERSION": 0,
}

func (x Header_EXTENDKEY) String() string {
	return proto.EnumName(Header_EXTENDKEY_name, int32(x))
}
func (Header_EXTENDKEY) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{0, 0} }

type CommonRetInfo_RETCODE int32

const (
	CommonRetInfo_RETCODE_SUCCEED CommonRetInfo_RETCODE = 0
	CommonRetInfo_ILLEGAL_MESSAGE CommonRetInfo_RETCODE = 100
	// 进出直播间
	CommonRetInfo_ENTER_ROOM_FAILED          CommonRetInfo_RETCODE = 10001
	CommonRetInfo_ENTER_USER_NO_RIGHT        CommonRetInfo_RETCODE = 10002
	CommonRetInfo_ENTER_ROOM_NOT_START       CommonRetInfo_RETCODE = 10003
	CommonRetInfo_ENTER_BAD_NETWORK          CommonRetInfo_RETCODE = 10004
	CommonRetInfo_ENTER_ROOM_CLOSED          CommonRetInfo_RETCODE = 10005
	CommonRetInfo_ENTER_ROOM_LOCKED          CommonRetInfo_RETCODE = 10006
	CommonRetInfo_ENTER_ROOM_PWDERR          CommonRetInfo_RETCODE = 10007
	CommonRetInfo_ENTER_ROOM_ALREADY_IN_ROOM CommonRetInfo_RETCODE = 10008
	CommonRetInfo_ENTER_ROOM_FORBIDDEN       CommonRetInfo_RETCODE = 10009
	// link opreation
	CommonRetInfo_AUDIENCE_LINK_OPERATION_FAILED      CommonRetInfo_RETCODE = 20001
	CommonRetInfo_AUDIENCE_LINK_OPERATION_FULL_MEMBER CommonRetInfo_RETCODE = 20002
	CommonRetInfo_AUDIENCE_LINK_OPERATION_STATUS_ERR  CommonRetInfo_RETCODE = 20003
	// mike opreation
	CommonRetInfo_MIKE_OPREATION_FAILED           CommonRetInfo_RETCODE = 30001
	CommonRetInfo_MIKE_OPREATION_USER_NOT_IN_ROOM CommonRetInfo_RETCODE = 30002
	CommonRetInfo_MIKE_STAGE_IS_FULL              CommonRetInfo_RETCODE = 30003
	CommonRetInfo_MIKE_STAGE_NO_RIGHT             CommonRetInfo_RETCODE = 30004
	CommonRetInfo_MIKE_WHEAT_IS_USED              CommonRetInfo_RETCODE = 30005
	// 踢人
	CommonRetInfo_KICK_USER_FAILED      CommonRetInfo_RETCODE = 40001
	CommonRetInfo_KICK_USER_NOT_IN_ROOM CommonRetInfo_RETCODE = 40002
	CommonRetInfo_KICK_USER_NO_RIGHT    CommonRetInfo_RETCODE = 40003
	// ChangeBroRoomLinkStatus
	CommonRetInfo_CHANGE_ROOM_LINK_STATUS_FAILED   CommonRetInfo_RETCODE = 50001
	CommonRetInfo_CHANGE_ROOM_LINK_STATUS_NO_RIGHT CommonRetInfo_RETCODE = 50002
	// GetBroRoomPreparedAudience
	CommonRetInfo_GET_ROOM_LINK_AUDIENCE_FAILED   CommonRetInfo_RETCODE = 60001
	CommonRetInfo_GET_ROOM_LINK_AUDIENCE_NO_RIGHT CommonRetInfo_RETCODE = 60002
	// MuteUser
	CommonRetInfo_MUTE_USER_FAILED      CommonRetInfo_RETCODE = 70001
	CommonRetInfo_MUTE_USER_NOT_IN_ROOM CommonRetInfo_RETCODE = 70002
	CommonRetInfo_MUTE_USER_NO_RIGHT    CommonRetInfo_RETCODE = 70003
	CommonRetInfo_MUTE_USER_NOT_ON_MIKE CommonRetInfo_RETCODE = 70004
	// MuteResult
	CommonRetInfo_MUTE_RESULT_FAILED      CommonRetInfo_RETCODE = 71001
	CommonRetInfo_MUTE_RESULT_NOT_ON_MIKE CommonRetInfo_RETCODE = 71002
	// ForbiddenUser
	CommonRetInfo_FORBIDDEN_USER_FAILED      CommonRetInfo_RETCODE = 80001
	CommonRetInfo_FORBIDDEN_USER_NOT_IN_ROOM CommonRetInfo_RETCODE = 80002
	CommonRetInfo_FORBIDDEN_USER_NO_RIGHT    CommonRetInfo_RETCODE = 80003
	// 切换模板
	CommonRetInfo_CHANGE_ROOM_TYPE_NO_RIGHT CommonRetInfo_RETCODE = 90001
	CommonRetInfo_CHANGE_ROOM_TYPE_INVALID  CommonRetInfo_RETCODE = 90002
	// ChangeBroRoomAutoToMikeStatus
	CommonRetInfo_CHANGE_ROOM_AUTO_TO_MIKE_FAILED   CommonRetInfo_RETCODE = 51001
	CommonRetInfo_CHANGE_ROOM_AUTO_TO_MIKE_NO_RIGHT CommonRetInfo_RETCODE = 51002
	// Karaoke
	CommonRetInfo_KARAOKE_OPT_NO_RIGHT             CommonRetInfo_RETCODE = 52000
	CommonRetInfo_KARAOKE_SONG_NOT_EXIST           CommonRetInfo_RETCODE = 52001
	CommonRetInfo_KARAOKE_SONG_ALREADY_IN_SINGING  CommonRetInfo_RETCODE = 52002
	CommonRetInfo_KARAOKE_SONG_NOT_START           CommonRetInfo_RETCODE = 52003
	CommonRetInfo_KARAOKE_SONG_SETTOP_FAILED       CommonRetInfo_RETCODE = 52004
	CommonRetInfo_KARAOKE_SONG_DEL_FAILED          CommonRetInfo_RETCODE = 52005
	CommonRetInfo_KARAOKE_SONG_ADD_FAILED          CommonRetInfo_RETCODE = 52006
	CommonRetInfo_KARAOKE_SONG_CHANGESTATUS_FAILED CommonRetInfo_RETCODE = 52007
	CommonRetInfo_KARAOKE_SONG_TERMINATE_FAILED    CommonRetInfo_RETCODE = 52008
	CommonRetInfo_KARAOKE_SWTICH_CLOSED            CommonRetInfo_RETCODE = 52009
	// LockUnlockRoom
	CommonRetInfo_LOCKUNLOCK_NO_RIGHT CommonRetInfo_RETCODE = 52100
	CommonRetInfo_LOCKUNLOCK_FAILED   CommonRetInfo_RETCODE = 52101
)

var CommonRetInfo_RETCODE_name = map[int32]string{
	0:     "RETCODE_SUCCEED",
	100:   "ILLEGAL_MESSAGE",
	10001: "ENTER_ROOM_FAILED",
	10002: "ENTER_USER_NO_RIGHT",
	10003: "ENTER_ROOM_NOT_START",
	10004: "ENTER_BAD_NETWORK",
	10005: "ENTER_ROOM_CLOSED",
	10006: "ENTER_ROOM_LOCKED",
	10007: "ENTER_ROOM_PWDERR",
	10008: "ENTER_ROOM_ALREADY_IN_ROOM",
	10009: "ENTER_ROOM_FORBIDDEN",
	20001: "AUDIENCE_LINK_OPERATION_FAILED",
	20002: "AUDIENCE_LINK_OPERATION_FULL_MEMBER",
	20003: "AUDIENCE_LINK_OPERATION_STATUS_ERR",
	30001: "MIKE_OPREATION_FAILED",
	30002: "MIKE_OPREATION_USER_NOT_IN_ROOM",
	30003: "MIKE_STAGE_IS_FULL",
	30004: "MIKE_STAGE_NO_RIGHT",
	30005: "MIKE_WHEAT_IS_USED",
	40001: "KICK_USER_FAILED",
	40002: "KICK_USER_NOT_IN_ROOM",
	40003: "KICK_USER_NO_RIGHT",
	50001: "CHANGE_ROOM_LINK_STATUS_FAILED",
	50002: "CHANGE_ROOM_LINK_STATUS_NO_RIGHT",
	60001: "GET_ROOM_LINK_AUDIENCE_FAILED",
	60002: "GET_ROOM_LINK_AUDIENCE_NO_RIGHT",
	70001: "MUTE_USER_FAILED",
	70002: "MUTE_USER_NOT_IN_ROOM",
	70003: "MUTE_USER_NO_RIGHT",
	70004: "MUTE_USER_NOT_ON_MIKE",
	71001: "MUTE_RESULT_FAILED",
	71002: "MUTE_RESULT_NOT_ON_MIKE",
	80001: "FORBIDDEN_USER_FAILED",
	80002: "FORBIDDEN_USER_NOT_IN_ROOM",
	80003: "FORBIDDEN_USER_NO_RIGHT",
	90001: "CHANGE_ROOM_TYPE_NO_RIGHT",
	90002: "CHANGE_ROOM_TYPE_INVALID",
	51001: "CHANGE_ROOM_AUTO_TO_MIKE_FAILED",
	51002: "CHANGE_ROOM_AUTO_TO_MIKE_NO_RIGHT",
	52000: "KARAOKE_OPT_NO_RIGHT",
	52001: "KARAOKE_SONG_NOT_EXIST",
	52002: "KARAOKE_SONG_ALREADY_IN_SINGING",
	52003: "KARAOKE_SONG_NOT_START",
	52004: "KARAOKE_SONG_SETTOP_FAILED",
	52005: "KARAOKE_SONG_DEL_FAILED",
	52006: "KARAOKE_SONG_ADD_FAILED",
	52007: "KARAOKE_SONG_CHANGESTATUS_FAILED",
	52008: "KARAOKE_SONG_TERMINATE_FAILED",
	52009: "KARAOKE_SWTICH_CLOSED",
	52100: "LOCKUNLOCK_NO_RIGHT",
	52101: "LOCKUNLOCK_FAILED",
}
var CommonRetInfo_RETCODE_value = map[string]int32{
	"RETCODE_SUCCEED":                     0,
	"ILLEGAL_MESSAGE":                     100,
	"ENTER_ROOM_FAILED":                   10001,
	"ENTER_USER_NO_RIGHT":                 10002,
	"ENTER_ROOM_NOT_START":                10003,
	"ENTER_BAD_NETWORK":                   10004,
	"ENTER_ROOM_CLOSED":                   10005,
	"ENTER_ROOM_LOCKED":                   10006,
	"ENTER_ROOM_PWDERR":                   10007,
	"ENTER_ROOM_ALREADY_IN_ROOM":          10008,
	"ENTER_ROOM_FORBIDDEN":                10009,
	"AUDIENCE_LINK_OPERATION_FAILED":      20001,
	"AUDIENCE_LINK_OPERATION_FULL_MEMBER": 20002,
	"AUDIENCE_LINK_OPERATION_STATUS_ERR":  20003,
	"MIKE_OPREATION_FAILED":               30001,
	"MIKE_OPREATION_USER_NOT_IN_ROOM":     30002,
	"MIKE_STAGE_IS_FULL":                  30003,
	"MIKE_STAGE_NO_RIGHT":                 30004,
	"MIKE_WHEAT_IS_USED":                  30005,
	"KICK_USER_FAILED":                    40001,
	"KICK_USER_NOT_IN_ROOM":               40002,
	"KICK_USER_NO_RIGHT":                  40003,
	"CHANGE_ROOM_LINK_STATUS_FAILED":      50001,
	"CHANGE_ROOM_LINK_STATUS_NO_RIGHT":    50002,
	"GET_ROOM_LINK_AUDIENCE_FAILED":       60001,
	"GET_ROOM_LINK_AUDIENCE_NO_RIGHT":     60002,
	"MUTE_USER_FAILED":                    70001,
	"MUTE_USER_NOT_IN_ROOM":               70002,
	"MUTE_USER_NO_RIGHT":                  70003,
	"MUTE_USER_NOT_ON_MIKE":               70004,
	"MUTE_RESULT_FAILED":                  71001,
	"MUTE_RESULT_NOT_ON_MIKE":             71002,
	"FORBIDDEN_USER_FAILED":               80001,
	"FORBIDDEN_USER_NOT_IN_ROOM":          80002,
	"FORBIDDEN_USER_NO_RIGHT":             80003,
	"CHANGE_ROOM_TYPE_NO_RIGHT":           90001,
	"CHANGE_ROOM_TYPE_INVALID":            90002,
	"CHANGE_ROOM_AUTO_TO_MIKE_FAILED":     51001,
	"CHANGE_ROOM_AUTO_TO_MIKE_NO_RIGHT":   51002,
	"KARAOKE_OPT_NO_RIGHT":                52000,
	"KARAOKE_SONG_NOT_EXIST":              52001,
	"KARAOKE_SONG_ALREADY_IN_SINGING":     52002,
	"KARAOKE_SONG_NOT_START":              52003,
	"KARAOKE_SONG_SETTOP_FAILED":          52004,
	"KARAOKE_SONG_DEL_FAILED":             52005,
	"KARAOKE_SONG_ADD_FAILED":             52006,
	"KARAOKE_SONG_CHANGESTATUS_FAILED":    52007,
	"KARAOKE_SONG_TERMINATE_FAILED":       52008,
	"KARAOKE_SWTICH_CLOSED":               52009,
	"LOCKUNLOCK_NO_RIGHT":                 52100,
	"LOCKUNLOCK_FAILED":                   52101,
}

func (x CommonRetInfo_RETCODE) String() string {
	return proto.EnumName(CommonRetInfo_RETCODE_name, int32(x))
}
func (CommonRetInfo_RETCODE) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{1, 0} }

type Header struct {
	Userid    uint64            `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Roomid    uint64            `protobuf:"varint,3,opt,name=roomid" json:"roomid,omitempty"`
	Mapextend map[uint32]string `protobuf:"bytes,4,rep,name=mapextend" json:"mapextend,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Header) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *Header) GetRoomid() uint64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

func (m *Header) GetMapextend() map[uint32]string {
	if m != nil {
		return m.Mapextend
	}
	return nil
}

type CommonRetInfo struct {
	Ret  CommonRetInfo_RETCODE `protobuf:"varint,1,opt,name=ret,enum=bilin.CommonRetInfo_RETCODE" json:"ret,omitempty"`
	Desc string                `protobuf:"bytes,2,opt,name=desc" json:"desc,omitempty"`
	Show bool                  `protobuf:"varint,3,opt,name=show" json:"show,omitempty"`
}

func (m *CommonRetInfo) Reset()                    { *m = CommonRetInfo{} }
func (m *CommonRetInfo) String() string            { return proto.CompactTextString(m) }
func (*CommonRetInfo) ProtoMessage()               {}
func (*CommonRetInfo) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *CommonRetInfo) GetRet() CommonRetInfo_RETCODE {
	if m != nil {
		return m.Ret
	}
	return CommonRetInfo_RETCODE_SUCCEED
}

func (m *CommonRetInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CommonRetInfo) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

func init() {
	proto.RegisterType((*Header)(nil), "bilin.Header")
	proto.RegisterType((*CommonRetInfo)(nil), "bilin.CommonRetInfo")
	proto.RegisterEnum("bilin.Header_EXTENDKEY", Header_EXTENDKEY_name, Header_EXTENDKEY_value)
	proto.RegisterEnum("bilin.CommonRetInfo_RETCODE", CommonRetInfo_RETCODE_name, CommonRetInfo_RETCODE_value)
}

func init() { proto.RegisterFile("header.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 947 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0xcd, 0x6f, 0x1b, 0xc5,
	0x1b, 0xee, 0x66, 0x9d, 0xf4, 0x97, 0x69, 0xd3, 0xdf, 0x74, 0x12, 0x52, 0x27, 0xb4, 0x8d, 0x71,
	0xf9, 0x08, 0x17, 0x1f, 0xe0, 0x82, 0x2a, 0x2e, 0x93, 0xdd, 0xb7, 0xf6, 0xc8, 0xeb, 0x19, 0x6b,
	0x76, 0xb6, 0x69, 0x4e, 0xab, 0x14, 0x2f, 0x6a, 0x44, 0x63, 0x57, 0x8e, 0x0b, 0xf4, 0xc8, 0x57,
	0x8f, 0x91, 0x5a, 0xc0, 0x01, 0x29, 0x07, 0x9a, 0x96, 0xaf, 0xde, 0xf8, 0x92, 0x02, 0x97, 0x0a,
	0xb8, 0x72, 0x01, 0xf5, 0x02, 0x37, 0x38, 0xe6, 0x16, 0xe0, 0x0f, 0x40, 0x33, 0xde, 0x5d, 0xef,
	0xba, 0xf5, 0xc5, 0x9a, 0x79, 0x9f, 0xe7, 0x7d, 0xde, 0xf7, 0x7d, 0x66, 0x76, 0x8c, 0x8e, 0x5f,
	0x89, 0xd6, 0x5b, 0x51, 0xb7, 0x72, 0xad, 0xdb, 0xe9, 0x75, 0xc8, 0xe4, 0xe5, 0x8d, 0xab, 0x1b,
	0xed, 0xf2, 0x2f, 0x16, 0x9a, 0xaa, 0x99, 0x38, 0x99, 0x47, 0x53, 0xd7, 0xb7, 0xa2, 0xee, 0x46,
	0xab, 0x38, 0x51, 0xb2, 0x96, 0x0b, 0x32, 0xde, 0xe9, 0x78, 0xb7, 0xd3, 0xd9, 0xdc, 0x68, 0x15,
	0xed, 0x41, 0x7c, 0xb0, 0x23, 0xe7, 0xd1, 0xf4, 0xe6, 0xfa, 0xb5, 0xe8, 0xcd, 0x5e, 0xd4, 0x6e,
	0x15, 0x0b, 0x25, 0x7b, 0xf9, 0xd8, 0x0b, 0xa7, 0x2b, 0x46, 0xb5, 0x32, 0x50, 0xac, 0x34, 0x12,
	0x18, 0xda, 0xbd, 0xee, 0x0d, 0x39, 0xa4, 0x2f, 0xbe, 0x8c, 0x4e, 0xe4, 0x41, 0x82, 0x91, 0xfd,
	0x5a, 0x74, 0xa3, 0x68, 0x95, 0xac, 0xe5, 0x19, 0xa9, 0x97, 0x64, 0x0e, 0x4d, 0xbe, 0xbe, 0x7e,
	0xf5, 0x7a, 0x64, 0xda, 0x99, 0x96, 0x83, 0xcd, 0xf9, 0x89, 0x97, 0xac, 0x72, 0x11, 0x4d, 0xc3,
	0x25, 0x05, 0xdc, 0xad, 0xc3, 0x1a, 0x39, 0x86, 0x8e, 0x5e, 0x04, 0xe9, 0x33, 0xc1, 0xf1, 0x91,
	0xf2, 0xf6, 0x0c, 0x9a, 0x71, 0x3a, 0x9b, 0x9b, 0x9d, 0xb6, 0x8c, 0x7a, 0xac, 0xfd, 0x6a, 0x87,
	0x54, 0x90, 0xdd, 0x8d, 0x7a, 0x46, 0xf7, 0x44, 0xda, 0x5f, 0x8e, 0x52, 0x91, 0xa0, 0x1c, 0xe1,
	0x82, 0xd4, 0x44, 0x42, 0x50, 0xa1, 0x15, 0x6d, 0xbd, 0x12, 0x17, 0x35, 0x6b, 0x1d, 0xdb, 0xba,
	0xd2, 0x79, 0xc3, 0xcc, 0xff, 0x3f, 0x69, 0xd6, 0xe5, 0x7b, 0xc7, 0xd1, 0xd1, 0x38, 0x91, 0xcc,
	0xa2, 0xff, 0xc7, 0xcb, 0xd0, 0x0f, 0x1c, 0x07, 0xc0, 0xc5, 0x47, 0x74, 0x90, 0x79, 0x1e, 0x54,
	0xa9, 0x17, 0x36, 0xc0, 0xf7, 0x69, 0x15, 0xb0, 0xf6, 0xf2, 0x24, 0x70, 0x05, 0x32, 0x94, 0x42,
	0x34, 0xc2, 0x0b, 0x94, 0x79, 0xe0, 0xe2, 0x5b, 0x9c, 0x14, 0xd1, 0xec, 0x20, 0x1e, 0xf8, 0x20,
	0x43, 0x2e, 0x42, 0xc9, 0xaa, 0x35, 0x85, 0x6f, 0x73, 0xb2, 0x80, 0xe6, 0x32, 0x19, 0x5c, 0xa8,
	0xd0, 0x57, 0x54, 0x2a, 0xfc, 0x3e, 0x1f, 0x8a, 0xad, 0x50, 0x37, 0xe4, 0xa0, 0x56, 0x85, 0xac,
	0xe3, 0x0f, 0xf8, 0x48, 0x11, 0xc7, 0x13, 0x3e, 0xb8, 0xf8, 0xc3, 0xd1, 0xb8, 0x27, 0x9c, 0x3a,
	0xb8, 0xb8, 0x3f, 0x1a, 0x6f, 0xae, 0xba, 0x20, 0x25, 0xde, 0xe1, 0x64, 0x09, 0x2d, 0x66, 0xe2,
	0xd4, 0x93, 0x40, 0xdd, 0xb5, 0x90, 0x71, 0xb3, 0xc7, 0x1f, 0x8d, 0xf6, 0x76, 0x41, 0xc8, 0x15,
	0xe6, 0xba, 0xc0, 0xf1, 0xc7, 0x9c, 0x3c, 0x8d, 0xce, 0xd2, 0xc0, 0x65, 0xc0, 0x1d, 0x08, 0x3d,
	0xc6, 0xeb, 0xa1, 0x68, 0x82, 0xa4, 0x8a, 0x09, 0x9e, 0x4c, 0x7d, 0x67, 0xd7, 0x22, 0xcf, 0xa3,
	0x73, 0x63, 0x59, 0x81, 0xa7, 0x8d, 0x6b, 0xac, 0x80, 0xc4, 0x7b, 0xbb, 0x16, 0x59, 0x46, 0xe5,
	0x71, 0x54, 0x5f, 0x51, 0x15, 0xf8, 0xa1, 0xee, 0xfa, 0xee, 0xae, 0x45, 0x9e, 0x44, 0x4f, 0x34,
	0x58, 0x1d, 0x42, 0xd1, 0x94, 0x90, 0xab, 0xf8, 0xd5, 0x81, 0x45, 0x9e, 0x41, 0x4b, 0x23, 0x60,
	0xec, 0xb8, 0x4a, 0x07, 0xfb, 0xfa, 0xc0, 0x22, 0x45, 0x44, 0x0c, 0xcd, 0x57, 0xb4, 0x0a, 0x21,
	0xf3, 0x4d, 0x3b, 0xf8, 0x9b, 0x03, 0x8b, 0x2c, 0xa0, 0xd9, 0x0c, 0x92, 0x9e, 0xd4, 0xb7, 0x99,
	0xa4, 0xd5, 0x1a, 0x50, 0xa5, 0x93, 0x02, 0x6d, 0xfc, 0x77, 0x07, 0x16, 0x99, 0x47, 0xb8, 0xce,
	0x9c, 0xfa, 0xa0, 0x56, 0xdc, 0xcd, 0x8f, 0xfb, 0x13, 0xba, 0xd5, 0x61, 0x3c, 0xdb, 0xc3, 0x4f,
	0xfb, 0x13, 0x5a, 0x2e, 0x0b, 0xc6, 0x85, 0x7e, 0xde, 0x9f, 0xd0, 0xe6, 0x3a, 0x35, 0xca, 0xab,
	0x10, 0x9f, 0xa4, 0xb6, 0x23, 0x36, 0x21, 0x16, 0xff, 0xf5, 0xa6, 0x4d, 0x9e, 0x45, 0xa5, 0x71,
	0xac, 0x54, 0xed, 0xb7, 0x9b, 0x36, 0x39, 0x87, 0xce, 0x54, 0x41, 0x65, 0x48, 0xa9, 0xcf, 0xb1,
	0xd8, 0x9f, 0x0f, 0x6d, 0xed, 0xdb, 0x18, 0x52, 0xaa, 0xf5, 0xd7, 0x43, 0x5b, 0x0f, 0xda, 0x08,
	0x14, 0xe4, 0x06, 0x3d, 0xdc, 0x2b, 0x98, 0x33, 0x49, 0xe3, 0xd9, 0x41, 0xff, 0xde, 0x2b, 0x18,
	0xdf, 0x32, 0x60, 0x2c, 0xf7, 0xcf, 0xe3, 0xd2, 0x04, 0x0f, 0xb5, 0xc5, 0xf8, 0xdf, 0x4c, 0x9a,
	0x04, 0x3f, 0xf0, 0x54, 0x52, 0xed, 0xf7, 0xfb, 0x05, 0x72, 0x06, 0x9d, 0xca, 0x22, 0xd9, 0xc4,
	0x3f, 0xee, 0x1b, 0xd5, 0xf4, 0xae, 0xe6, 0x3a, 0x7d, 0xeb, 0xb0, 0x40, 0x4a, 0x68, 0x71, 0x04,
	0xcc, 0xb6, 0xfb, 0xf6, 0xa1, 0x51, 0x7f, 0x84, 0x11, 0xf7, 0xfc, 0xce, 0x61, 0x81, 0x2c, 0xa1,
	0x85, 0xac, 0xed, 0x6a, 0xad, 0x99, 0xf1, 0xe8, 0xd6, 0x83, 0x49, 0x72, 0x16, 0x15, 0x1f, 0x21,
	0x30, 0x7e, 0x91, 0x7a, 0xcc, 0xc5, 0xb7, 0x1f, 0x4c, 0x6a, 0xab, 0xb3, 0x38, 0x0d, 0x94, 0x08,
	0x95, 0x30, 0xed, 0x27, 0x8d, 0x7e, 0xbf, 0x6d, 0x93, 0xe7, 0xd0, 0x53, 0x63, 0x69, 0x69, 0xbd,
	0x1f, 0xb6, 0x6d, 0xb2, 0x88, 0xe6, 0xea, 0x54, 0x52, 0x61, 0x6e, 0xbd, 0x1a, 0x62, 0x9f, 0xf4,
	0x6d, 0x72, 0x1a, 0xcd, 0x27, 0x98, 0x2f, 0x78, 0xd5, 0xcc, 0x0a, 0x97, 0x98, 0xaf, 0xf0, 0x9d,
	0xbe, 0x39, 0xf4, 0x1c, 0x9a, 0x79, 0x02, 0x7c, 0xc6, 0xab, 0x8c, 0x57, 0xf1, 0xde, 0x18, 0x91,
	0xc1, 0x23, 0x75, 0xb7, 0x6f, 0x6b, 0x43, 0x73, 0xa8, 0x0f, 0x4a, 0x89, 0x66, 0x32, 0xc9, 0xbd,
	0xbe, 0xad, 0x0d, 0xcd, 0x31, 0x5c, 0xf0, 0x12, 0xf8, 0xd3, 0xc7, 0xc0, 0xd4, 0x75, 0x13, 0xf8,
	0xb3, 0xbe, 0xb9, 0xe6, 0x39, 0x78, 0x60, 0x4a, 0xfe, 0x73, 0xf8, 0xbc, 0x6f, 0xae, 0x79, 0x8e,
	0xa7, 0x40, 0x36, 0x18, 0xa7, 0x2a, 0x35, 0xf5, 0x8b, 0xbe, 0x6d, 0x3e, 0xc8, 0x84, 0xb4, 0xaa,
	0x98, 0x53, 0x4b, 0x9e, 0xcf, 0x2f, 0xfb, 0xb6, 0xfe, 0xf4, 0xf5, 0xa3, 0x19, 0x70, 0xfd, 0x3b,
	0xf4, 0xf1, 0xdd, 0x1d, 0x9b, 0x9c, 0x42, 0x27, 0x33, 0x50, 0x2c, 0xf8, 0xde, 0x8e, 0x7d, 0x79,
	0xca, 0xfc, 0xdb, 0xbe, 0xf8, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x13, 0x16, 0x31, 0x7d,
	0x07, 0x00, 0x00,
}
