// Code generated by protoc-gen-tars. DO NOT EDIT.
// source: guildtars.proto

package bilin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"
	"code.yy.com/yytars/goframework/tars/servant"
	"code.yy.com/yytars/goframework/tars/servant/model"
	"code.yy.com/yytars/goframework/jce/taf"
	"errors"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CategoryGuildRecByOwUidReq struct {
	Owuid int64 `protobuf:"varint,1,opt,name=owuid" json:"owuid,omitempty"`
}

func (m *CategoryGuildRecByOwUidReq) Reset()                    { *m = CategoryGuildRecByOwUidReq{} }
func (m *CategoryGuildRecByOwUidReq) String() string            { return proto.CompactTextString(m) }
func (*CategoryGuildRecByOwUidReq) ProtoMessage()               {}
func (*CategoryGuildRecByOwUidReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *CategoryGuildRecByOwUidReq) GetOwuid() int64 {
	if m != nil {
		return m.Owuid
	}
	return 0
}

type CategoryGuildRecByOwUidResp struct {
	Info []*CategoryGuildRecInfo `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
}

func (m *CategoryGuildRecByOwUidResp) Reset()                    { *m = CategoryGuildRecByOwUidResp{} }
func (m *CategoryGuildRecByOwUidResp) String() string            { return proto.CompactTextString(m) }
func (*CategoryGuildRecByOwUidResp) ProtoMessage()               {}
func (*CategoryGuildRecByOwUidResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *CategoryGuildRecByOwUidResp) GetInfo() []*CategoryGuildRecInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type Contract struct {
	Id                   int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Guildid              int64 `protobuf:"varint,2,opt,name=guildid" json:"guildid,omitempty"`
	Hostuid              int64 `protobuf:"varint,3,opt,name=hostuid" json:"hostuid,omitempty"`
	Contractstarttime    int64 `protobuf:"varint,4,opt,name=contractstarttime" json:"contractstarttime,omitempty"`
	Contractendtime      int64 `protobuf:"varint,5,opt,name=contractendtime" json:"contractendtime,omitempty"`
	Guildsharepercentage int64 `protobuf:"varint,6,opt,name=guildsharepercentage" json:"guildsharepercentage,omitempty"`
	Hostsharepercentage  int64 `protobuf:"varint,7,opt,name=hostsharepercentage" json:"hostsharepercentage,omitempty"`
	Contractstate        int32 `protobuf:"varint,8,opt,name=contractstate" json:"contractstate,omitempty"`
}

func (m *Contract) Reset()                    { *m = Contract{} }
func (m *Contract) String() string            { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()               {}
func (*Contract) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *Contract) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Contract) GetGuildid() int64 {
	if m != nil {
		return m.Guildid
	}
	return 0
}

func (m *Contract) GetHostuid() int64 {
	if m != nil {
		return m.Hostuid
	}
	return 0
}

func (m *Contract) GetContractstarttime() int64 {
	if m != nil {
		return m.Contractstarttime
	}
	return 0
}

func (m *Contract) GetContractendtime() int64 {
	if m != nil {
		return m.Contractendtime
	}
	return 0
}

func (m *Contract) GetGuildsharepercentage() int64 {
	if m != nil {
		return m.Guildsharepercentage
	}
	return 0
}

func (m *Contract) GetHostsharepercentage() int64 {
	if m != nil {
		return m.Hostsharepercentage
	}
	return 0
}

func (m *Contract) GetContractstate() int32 {
	if m != nil {
		return m.Contractstate
	}
	return 0
}

type CContractReq struct {
	Info *Contract `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *CContractReq) Reset()                    { *m = CContractReq{} }
func (m *CContractReq) String() string            { return proto.CompactTextString(m) }
func (*CContractReq) ProtoMessage()               {}
func (*CContractReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *CContractReq) GetInfo() *Contract {
	if m != nil {
		return m.Info
	}
	return nil
}

type CContractResp struct {
}

func (m *CContractResp) Reset()                    { *m = CContractResp{} }
func (m *CContractResp) String() string            { return proto.CompactTextString(m) }
func (*CContractResp) ProtoMessage()               {}
func (*CContractResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

type RContractReq struct {
	Filter *Contract `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
}

func (m *RContractReq) Reset()                    { *m = RContractReq{} }
func (m *RContractReq) String() string            { return proto.CompactTextString(m) }
func (*RContractReq) ProtoMessage()               {}
func (*RContractReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *RContractReq) GetFilter() *Contract {
	if m != nil {
		return m.Filter
	}
	return nil
}

type RContractResp struct {
	Info []*Contract `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
}

func (m *RContractResp) Reset()                    { *m = RContractResp{} }
func (m *RContractResp) String() string            { return proto.CompactTextString(m) }
func (*RContractResp) ProtoMessage()               {}
func (*RContractResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *RContractResp) GetInfo() []*Contract {
	if m != nil {
		return m.Info
	}
	return nil
}

type UContractReq struct {
	Info *Contract `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *UContractReq) Reset()                    { *m = UContractReq{} }
func (m *UContractReq) String() string            { return proto.CompactTextString(m) }
func (*UContractReq) ProtoMessage()               {}
func (*UContractReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *UContractReq) GetInfo() *Contract {
	if m != nil {
		return m.Info
	}
	return nil
}

type UContractResp struct {
}

func (m *UContractResp) Reset()                    { *m = UContractResp{} }
func (m *UContractResp) String() string            { return proto.CompactTextString(m) }
func (*UContractResp) ProtoMessage()               {}
func (*UContractResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

type DContractReq struct {
	Info *Contract `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *DContractReq) Reset()                    { *m = DContractReq{} }
func (m *DContractReq) String() string            { return proto.CompactTextString(m) }
func (*DContractReq) ProtoMessage()               {}
func (*DContractReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

func (m *DContractReq) GetInfo() *Contract {
	if m != nil {
		return m.Info
	}
	return nil
}

type DContractResp struct {
}

func (m *DContractResp) Reset()                    { *m = DContractResp{} }
func (m *DContractResp) String() string            { return proto.CompactTextString(m) }
func (*DContractResp) ProtoMessage()               {}
func (*DContractResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

type Guild struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Ow        int64  `protobuf:"varint,2,opt,name=ow" json:"ow,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Mobile    string `protobuf:"bytes,4,opt,name=mobile" json:"mobile,omitempty"`
	Describle string `protobuf:"bytes,5,opt,name=describle" json:"describle,omitempty"`
	Guildlog  string `protobuf:"bytes,6,opt,name=guildlog" json:"guildlog,omitempty"`
}

func (m *Guild) Reset()                    { *m = Guild{} }
func (m *Guild) String() string            { return proto.CompactTextString(m) }
func (*Guild) ProtoMessage()               {}
func (*Guild) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{11} }

func (m *Guild) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Guild) GetOw() int64 {
	if m != nil {
		return m.Ow
	}
	return 0
}

func (m *Guild) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Guild) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Guild) GetDescrible() string {
	if m != nil {
		return m.Describle
	}
	return ""
}

func (m *Guild) GetGuildlog() string {
	if m != nil {
		return m.Guildlog
	}
	return ""
}

type CGuildReq struct {
	Info *Guild `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *CGuildReq) Reset()                    { *m = CGuildReq{} }
func (m *CGuildReq) String() string            { return proto.CompactTextString(m) }
func (*CGuildReq) ProtoMessage()               {}
func (*CGuildReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{12} }

func (m *CGuildReq) GetInfo() *Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

type CGuildResp struct {
}

func (m *CGuildResp) Reset()                    { *m = CGuildResp{} }
func (m *CGuildResp) String() string            { return proto.CompactTextString(m) }
func (*CGuildResp) ProtoMessage()               {}
func (*CGuildResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{13} }

type RGuildReq struct {
	Filter *Guild `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
}

func (m *RGuildReq) Reset()                    { *m = RGuildReq{} }
func (m *RGuildReq) String() string            { return proto.CompactTextString(m) }
func (*RGuildReq) ProtoMessage()               {}
func (*RGuildReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{14} }

func (m *RGuildReq) GetFilter() *Guild {
	if m != nil {
		return m.Filter
	}
	return nil
}

type RGuildResp struct {
	Info []*Guild `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
}

func (m *RGuildResp) Reset()                    { *m = RGuildResp{} }
func (m *RGuildResp) String() string            { return proto.CompactTextString(m) }
func (*RGuildResp) ProtoMessage()               {}
func (*RGuildResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{15} }

func (m *RGuildResp) GetInfo() []*Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

type UGuildReq struct {
	Info *Guild `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *UGuildReq) Reset()                    { *m = UGuildReq{} }
func (m *UGuildReq) String() string            { return proto.CompactTextString(m) }
func (*UGuildReq) ProtoMessage()               {}
func (*UGuildReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{16} }

func (m *UGuildReq) GetInfo() *Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

type UGuildResp struct {
}

func (m *UGuildResp) Reset()                    { *m = UGuildResp{} }
func (m *UGuildResp) String() string            { return proto.CompactTextString(m) }
func (*UGuildResp) ProtoMessage()               {}
func (*UGuildResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{17} }

type DGuildReq struct {
	Info *Guild `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *DGuildReq) Reset()                    { *m = DGuildReq{} }
func (m *DGuildReq) String() string            { return proto.CompactTextString(m) }
func (*DGuildReq) ProtoMessage()               {}
func (*DGuildReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{18} }

func (m *DGuildReq) GetInfo() *Guild {
	if m != nil {
		return m.Info
	}
	return nil
}

type DGuildResp struct {
}

func (m *DGuildResp) Reset()                    { *m = DGuildResp{} }
func (m *DGuildResp) String() string            { return proto.CompactTextString(m) }
func (*DGuildResp) ProtoMessage()               {}
func (*DGuildResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{19} }

type GuildRoom struct {
	Id      int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Guildid int64 `protobuf:"varint,2,opt,name=guildid" json:"guildid,omitempty"`
	Roomid  int64 `protobuf:"varint,3,opt,name=roomid" json:"roomid,omitempty"`
}

func (m *GuildRoom) Reset()                    { *m = GuildRoom{} }
func (m *GuildRoom) String() string            { return proto.CompactTextString(m) }
func (*GuildRoom) ProtoMessage()               {}
func (*GuildRoom) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{20} }

func (m *GuildRoom) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GuildRoom) GetGuildid() int64 {
	if m != nil {
		return m.Guildid
	}
	return 0
}

func (m *GuildRoom) GetRoomid() int64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

type CGuildRoomReq struct {
	Info *GuildRoom `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *CGuildRoomReq) Reset()                    { *m = CGuildRoomReq{} }
func (m *CGuildRoomReq) String() string            { return proto.CompactTextString(m) }
func (*CGuildRoomReq) ProtoMessage()               {}
func (*CGuildRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{21} }

func (m *CGuildRoomReq) GetInfo() *GuildRoom {
	if m != nil {
		return m.Info
	}
	return nil
}

type CGuildRoomResp struct {
}

func (m *CGuildRoomResp) Reset()                    { *m = CGuildRoomResp{} }
func (m *CGuildRoomResp) String() string            { return proto.CompactTextString(m) }
func (*CGuildRoomResp) ProtoMessage()               {}
func (*CGuildRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{22} }

type RGuildRoomReq struct {
	Filter *GuildRoom `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
}

func (m *RGuildRoomReq) Reset()                    { *m = RGuildRoomReq{} }
func (m *RGuildRoomReq) String() string            { return proto.CompactTextString(m) }
func (*RGuildRoomReq) ProtoMessage()               {}
func (*RGuildRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{23} }

func (m *RGuildRoomReq) GetFilter() *GuildRoom {
	if m != nil {
		return m.Filter
	}
	return nil
}

type RGuildRoomResp struct {
	Info []*GuildRoom `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
}

func (m *RGuildRoomResp) Reset()                    { *m = RGuildRoomResp{} }
func (m *RGuildRoomResp) String() string            { return proto.CompactTextString(m) }
func (*RGuildRoomResp) ProtoMessage()               {}
func (*RGuildRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{24} }

func (m *RGuildRoomResp) GetInfo() []*GuildRoom {
	if m != nil {
		return m.Info
	}
	return nil
}

type UGuildRoomReq struct {
	Info *GuildRoom `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *UGuildRoomReq) Reset()                    { *m = UGuildRoomReq{} }
func (m *UGuildRoomReq) String() string            { return proto.CompactTextString(m) }
func (*UGuildRoomReq) ProtoMessage()               {}
func (*UGuildRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{25} }

func (m *UGuildRoomReq) GetInfo() *GuildRoom {
	if m != nil {
		return m.Info
	}
	return nil
}

type UGuildRoomResp struct {
}

func (m *UGuildRoomResp) Reset()                    { *m = UGuildRoomResp{} }
func (m *UGuildRoomResp) String() string            { return proto.CompactTextString(m) }
func (*UGuildRoomResp) ProtoMessage()               {}
func (*UGuildRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{26} }

type DGuildRoomReq struct {
	Info *GuildRoom `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *DGuildRoomReq) Reset()                    { *m = DGuildRoomReq{} }
func (m *DGuildRoomReq) String() string            { return proto.CompactTextString(m) }
func (*DGuildRoomReq) ProtoMessage()               {}
func (*DGuildRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{27} }

func (m *DGuildRoomReq) GetInfo() *GuildRoom {
	if m != nil {
		return m.Info
	}
	return nil
}

type DGuildRoomResp struct {
}

func (m *DGuildRoomResp) Reset()                    { *m = DGuildRoomResp{} }
func (m *DGuildRoomResp) String() string            { return proto.CompactTextString(m) }
func (*DGuildRoomResp) ProtoMessage()               {}
func (*DGuildRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{28} }

type OAMLoginReq struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Passwd   string `protobuf:"bytes,2,opt,name=passwd" json:"passwd,omitempty"`
}

func (m *OAMLoginReq) Reset()                    { *m = OAMLoginReq{} }
func (m *OAMLoginReq) String() string            { return proto.CompactTextString(m) }
func (*OAMLoginReq) ProtoMessage()               {}
func (*OAMLoginReq) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{29} }

func (m *OAMLoginReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *OAMLoginReq) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type OAMLoginResp struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *OAMLoginResp) Reset()                    { *m = OAMLoginResp{} }
func (m *OAMLoginResp) String() string            { return proto.CompactTextString(m) }
func (*OAMLoginResp) ProtoMessage()               {}
func (*OAMLoginResp) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{30} }

func (m *OAMLoginResp) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*CategoryGuildRecByOwUidReq)(nil), "bilin.guildtars.CategoryGuildRecByOwUidReq")
	proto.RegisterType((*CategoryGuildRecByOwUidResp)(nil), "bilin.guildtars.CategoryGuildRecByOwUidResp")
	proto.RegisterType((*Contract)(nil), "bilin.guildtars.Contract")
	proto.RegisterType((*CContractReq)(nil), "bilin.guildtars.CContractReq")
	proto.RegisterType((*CContractResp)(nil), "bilin.guildtars.CContractResp")
	proto.RegisterType((*RContractReq)(nil), "bilin.guildtars.RContractReq")
	proto.RegisterType((*RContractResp)(nil), "bilin.guildtars.RContractResp")
	proto.RegisterType((*UContractReq)(nil), "bilin.guildtars.UContractReq")
	proto.RegisterType((*UContractResp)(nil), "bilin.guildtars.UContractResp")
	proto.RegisterType((*DContractReq)(nil), "bilin.guildtars.DContractReq")
	proto.RegisterType((*DContractResp)(nil), "bilin.guildtars.DContractResp")
	proto.RegisterType((*Guild)(nil), "bilin.guildtars.Guild")
	proto.RegisterType((*CGuildReq)(nil), "bilin.guildtars.CGuildReq")
	proto.RegisterType((*CGuildResp)(nil), "bilin.guildtars.CGuildResp")
	proto.RegisterType((*RGuildReq)(nil), "bilin.guildtars.RGuildReq")
	proto.RegisterType((*RGuildResp)(nil), "bilin.guildtars.RGuildResp")
	proto.RegisterType((*UGuildReq)(nil), "bilin.guildtars.UGuildReq")
	proto.RegisterType((*UGuildResp)(nil), "bilin.guildtars.UGuildResp")
	proto.RegisterType((*DGuildReq)(nil), "bilin.guildtars.DGuildReq")
	proto.RegisterType((*DGuildResp)(nil), "bilin.guildtars.DGuildResp")
	proto.RegisterType((*GuildRoom)(nil), "bilin.guildtars.GuildRoom")
	proto.RegisterType((*CGuildRoomReq)(nil), "bilin.guildtars.CGuildRoomReq")
	proto.RegisterType((*CGuildRoomResp)(nil), "bilin.guildtars.CGuildRoomResp")
	proto.RegisterType((*RGuildRoomReq)(nil), "bilin.guildtars.RGuildRoomReq")
	proto.RegisterType((*RGuildRoomResp)(nil), "bilin.guildtars.RGuildRoomResp")
	proto.RegisterType((*UGuildRoomReq)(nil), "bilin.guildtars.UGuildRoomReq")
	proto.RegisterType((*UGuildRoomResp)(nil), "bilin.guildtars.UGuildRoomResp")
	proto.RegisterType((*DGuildRoomReq)(nil), "bilin.guildtars.DGuildRoomReq")
	proto.RegisterType((*DGuildRoomResp)(nil), "bilin.guildtars.DGuildRoomResp")
	proto.RegisterType((*OAMLoginReq)(nil), "bilin.guildtars.OAMLoginReq")
	proto.RegisterType((*OAMLoginResp)(nil), "bilin.guildtars.OAMLoginResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for GuildTars service

type GuildTarsClient interface {
	// 根据工会的owuid，查询对应的房间信息
	CategoryGuildRecByOwUid(ctx context.Context, in *CategoryGuildRecByOwUidReq, opts ...map[string]string) (*CategoryGuildRecByOwUidResp, error)
	//
	// 签约信息CRUD
	CContract(ctx context.Context, in *CContractReq, opts ...map[string]string) (*CContractResp, error)
	RContract(ctx context.Context, in *RContractReq, opts ...map[string]string) (*RContractResp, error)
	UContract(ctx context.Context, in *UContractReq, opts ...map[string]string) (*UContractResp, error)
	DContract(ctx context.Context, in *DContractReq, opts ...map[string]string) (*DContractResp, error)
	//
	// 工会信息CRUD
	CGuild(ctx context.Context, in *CGuildReq, opts ...map[string]string) (*CGuildResp, error)
	RGuild(ctx context.Context, in *RGuildReq, opts ...map[string]string) (*RGuildResp, error)
	UGuild(ctx context.Context, in *UGuildReq, opts ...map[string]string) (*UGuildResp, error)
	DGuild(ctx context.Context, in *DGuildReq, opts ...map[string]string) (*DGuildResp, error)
	//
	// 工会房间CRUD
	CGuildRoom(ctx context.Context, in *CGuildRoomReq, opts ...map[string]string) (*CGuildRoomResp, error)
	RGuildRoom(ctx context.Context, in *RGuildRoomReq, opts ...map[string]string) (*RGuildRoomResp, error)
	UGuildRoom(ctx context.Context, in *UGuildRoomReq, opts ...map[string]string) (*UGuildRoomResp, error)
	DGuildRoom(ctx context.Context, in *DGuildRoomReq, opts ...map[string]string) (*DGuildRoomResp, error)
	//
	// 工会管理后台登录
	OAMLogin(ctx context.Context, in *OAMLoginReq, opts ...map[string]string) (*OAMLoginResp, error)
}

type guildTarsClient struct {
	s model.Servant
}

func NewGuildTarsClient(objname string, comm servant.ICommunicator) GuildTarsClient {
	if comm == nil || objname == "" {
		return nil
	}
	return &guildTarsClient{s: comm.GetServantProxy(objname)}
}

func (c *guildTarsClient) CategoryGuildRecByOwUid(ctx context.Context, in *CategoryGuildRecByOwUidReq, opts ...map[string]string) (*CategoryGuildRecByOwUidResp, error) {
	var (
		reply CategoryGuildRecByOwUidResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CategoryGuildRecByOwUid", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) CContract(ctx context.Context, in *CContractReq, opts ...map[string]string) (*CContractResp, error) {
	var (
		reply CContractResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CContract", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) RContract(ctx context.Context, in *RContractReq, opts ...map[string]string) (*RContractResp, error) {
	var (
		reply RContractResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "RContract", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) UContract(ctx context.Context, in *UContractReq, opts ...map[string]string) (*UContractResp, error) {
	var (
		reply UContractResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "UContract", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) DContract(ctx context.Context, in *DContractReq, opts ...map[string]string) (*DContractResp, error) {
	var (
		reply DContractResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "DContract", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) CGuild(ctx context.Context, in *CGuildReq, opts ...map[string]string) (*CGuildResp, error) {
	var (
		reply CGuildResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CGuild", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) RGuild(ctx context.Context, in *RGuildReq, opts ...map[string]string) (*RGuildResp, error) {
	var (
		reply RGuildResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "RGuild", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) UGuild(ctx context.Context, in *UGuildReq, opts ...map[string]string) (*UGuildResp, error) {
	var (
		reply UGuildResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "UGuild", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) DGuild(ctx context.Context, in *DGuildReq, opts ...map[string]string) (*DGuildResp, error) {
	var (
		reply DGuildResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "DGuild", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) CGuildRoom(ctx context.Context, in *CGuildRoomReq, opts ...map[string]string) (*CGuildRoomResp, error) {
	var (
		reply CGuildRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CGuildRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) RGuildRoom(ctx context.Context, in *RGuildRoomReq, opts ...map[string]string) (*RGuildRoomResp, error) {
	var (
		reply RGuildRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "RGuildRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) UGuildRoom(ctx context.Context, in *UGuildRoomReq, opts ...map[string]string) (*UGuildRoomResp, error) {
	var (
		reply UGuildRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "UGuildRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) DGuildRoom(ctx context.Context, in *DGuildRoomReq, opts ...map[string]string) (*DGuildRoomResp, error) {
	var (
		reply DGuildRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "DGuildRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *guildTarsClient) OAMLogin(ctx context.Context, in *OAMLoginReq, opts ...map[string]string) (*OAMLoginResp, error) {
	var (
		reply OAMLoginResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "OAMLogin", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}

// Server API for GuildTars service

type GuildTarsServer interface {
	// 根据工会的owuid，查询对应的房间信息
	CategoryGuildRecByOwUid(context.Context, *CategoryGuildRecByOwUidReq) (*CategoryGuildRecByOwUidResp, error)
	//
	// 签约信息CRUD
	CContract(context.Context, *CContractReq) (*CContractResp, error)
	RContract(context.Context, *RContractReq) (*RContractResp, error)
	UContract(context.Context, *UContractReq) (*UContractResp, error)
	DContract(context.Context, *DContractReq) (*DContractResp, error)
	//
	// 工会信息CRUD
	CGuild(context.Context, *CGuildReq) (*CGuildResp, error)
	RGuild(context.Context, *RGuildReq) (*RGuildResp, error)
	UGuild(context.Context, *UGuildReq) (*UGuildResp, error)
	DGuild(context.Context, *DGuildReq) (*DGuildResp, error)
	//
	// 工会房间CRUD
	CGuildRoom(context.Context, *CGuildRoomReq) (*CGuildRoomResp, error)
	RGuildRoom(context.Context, *RGuildRoomReq) (*RGuildRoomResp, error)
	UGuildRoom(context.Context, *UGuildRoomReq) (*UGuildRoomResp, error)
	DGuildRoom(context.Context, *DGuildRoomReq) (*DGuildRoomResp, error)
	//
	// 工会管理后台登录
	OAMLogin(context.Context, *OAMLoginReq) (*OAMLoginResp, error)
}

type guildTarsDispatcher struct {
}

func NewGuildTarsDispatcher() servant.Dispatcher {
	return &guildTarsDispatcher{}
}

func (_obj *guildTarsDispatcher) Dispatch(ctx context.Context, _val interface{}, req *taf.RequestPacket) (*taf.ResponsePacket, error) {
	var pbbuf []byte
	_imp := _val.(GuildTarsServer)
	switch req.SFuncName {
	case "CategoryGuildRecByOwUid":
		var req_ CategoryGuildRecByOwUidReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CategoryGuildRecByOwUid(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CContract":
		var req_ CContractReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CContract(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "RContract":
		var req_ RContractReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.RContract(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "UContract":
		var req_ UContractReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.UContract(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "DContract":
		var req_ DContractReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.DContract(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CGuild":
		var req_ CGuildReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CGuild(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "RGuild":
		var req_ RGuildReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.RGuild(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "UGuild":
		var req_ UGuildReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.UGuild(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "DGuild":
		var req_ DGuildReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.DGuild(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CGuildRoom":
		var req_ CGuildRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CGuildRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "RGuildRoom":
		var req_ RGuildRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.RGuildRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "UGuildRoom":
		var req_ UGuildRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.UGuildRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "DGuildRoom":
		var req_ DGuildRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.DGuildRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "OAMLogin":
		var req_ OAMLoginReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.OAMLogin(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	default:
		return nil, errors.New("unknow func")
	}
	return &taf.ResponsePacket{
		IVersion:   1,
		IRequestId: req.IRequestId,
		SBuffer:    pbbuf,
		Context:    req.Context,
	}, nil
}

func init() { proto.RegisterFile("guildtars.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 818 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x96, 0xdd, 0x6e, 0xda, 0x4a,
	0x10, 0xc7, 0x05, 0x04, 0x82, 0x27, 0x7c, 0x9c, 0xb3, 0x27, 0xca, 0xa1, 0xce, 0x47, 0x23, 0x2b,
	0x17, 0x28, 0x4d, 0x51, 0x4b, 0x2f, 0x52, 0xa9, 0x4a, 0x52, 0x82, 0xa5, 0xa8, 0x55, 0xa3, 0x48,
	0xab, 0xee, 0x4d, 0xa5, 0x5e, 0x18, 0x58, 0x88, 0x55, 0xf0, 0x3a, 0x5e, 0x47, 0x28, 0x4f, 0xd1,
	0x77, 0xe9, 0x23, 0xf4, 0xc9, 0x2a, 0xef, 0x1a, 0xe3, 0x8f, 0x78, 0x49, 0xc3, 0xe5, 0xec, 0xcc,
	0xfc, 0xf6, 0x3f, 0xcc, 0xec, 0x18, 0x68, 0x4e, 0xee, 0xed, 0xe9, 0xc8, 0xb7, 0x3c, 0xde, 0x71,
	0x3d, 0xe6, 0x33, 0xd4, 0x1c, 0xd8, 0x53, 0xdb, 0xe9, 0x44, 0xc7, 0xfa, 0xf6, 0x90, 0x39, 0x63,
	0xdb, 0x19, 0xb3, 0x21, 0x75, 0x7c, 0xea, 0xc9, 0x30, 0xa3, 0x0b, 0x7a, 0xdf, 0xf2, 0xe9, 0x84,
	0x79, 0x0f, 0x57, 0x41, 0x28, 0xa6, 0xc3, 0xcb, 0x87, 0x9b, 0x39, 0xb1, 0x47, 0x98, 0xde, 0xa1,
	0x6d, 0x28, 0xb3, 0xf9, 0xbd, 0x3d, 0x6a, 0x15, 0x0e, 0x0b, 0xed, 0x12, 0x96, 0x86, 0xf1, 0x1d,
	0x76, 0x73, 0x73, 0xb8, 0x8b, 0xce, 0x61, 0x23, 0xb8, 0xa6, 0x55, 0x38, 0x2c, 0xb5, 0xb7, 0xba,
	0xc7, 0x1d, 0x29, 0x24, 0x75, 0x7b, 0x1a, 0xf0, 0xc9, 0x19, 0x33, 0x2c, 0xf2, 0x8c, 0x5f, 0x45,
	0xa8, 0xf6, 0x99, 0xe3, 0x7b, 0xd6, 0xd0, 0x47, 0x0d, 0x28, 0x46, 0xd7, 0x17, 0xed, 0x11, 0x6a,
	0xc1, 0xa6, 0x28, 0xc9, 0x1e, 0xb5, 0x8a, 0xe2, 0x70, 0x61, 0x06, 0x9e, 0x5b, 0xc6, 0xfd, 0x40,
	0x6d, 0x49, 0x7a, 0x42, 0x13, 0x9d, 0xc0, 0xbf, 0xc3, 0x90, 0xc7, 0x7d, 0xcb, 0xf3, 0x7d, 0x7b,
	0x46, 0x5b, 0x1b, 0x22, 0x26, 0xeb, 0x40, 0x6d, 0x68, 0x2e, 0x0e, 0xa9, 0x33, 0x12, 0xb1, 0x65,
	0x11, 0x9b, 0x3e, 0x46, 0x5d, 0xd8, 0x16, 0x97, 0xf3, 0x5b, 0xcb, 0xa3, 0x2e, 0xf5, 0x82, 0xd2,
	0xac, 0x09, 0x6d, 0x55, 0x44, 0xf8, 0xa3, 0x3e, 0xf4, 0x06, 0xfe, 0x0b, 0x64, 0xa5, 0x53, 0x36,
	0x45, 0xca, 0x63, 0x2e, 0x74, 0x04, 0xf5, 0x98, 0x48, 0x9f, 0xb6, 0xaa, 0x87, 0x85, 0x76, 0x19,
	0x27, 0x0f, 0x8d, 0x33, 0xa8, 0xf5, 0x17, 0x3f, 0x5a, 0xd0, 0xb9, 0xd7, 0x51, 0x13, 0x0a, 0xed,
	0xad, 0xee, 0x8b, 0x4e, 0x6a, 0x1a, 0x3a, 0x51, 0xac, 0xfc, 0xcd, 0x9b, 0x50, 0x8f, 0xa5, 0x73,
	0xd7, 0xe8, 0x41, 0x0d, 0xc7, 0x79, 0x6f, 0xa1, 0x32, 0xb6, 0xa7, 0x3e, 0xf5, 0x56, 0x13, 0xc3,
	0x40, 0xe3, 0x1c, 0xea, 0x38, 0xce, 0x8c, 0x69, 0x2a, 0x3d, 0x45, 0xd3, 0x19, 0xd4, 0xc8, 0x7a,
	0x25, 0x91, 0x44, 0x49, 0x67, 0x50, 0x33, 0xd7, 0xe3, 0x99, 0x09, 0xde, 0xcf, 0x02, 0x94, 0xc5,
	0xf8, 0x66, 0x86, 0xb4, 0x01, 0x45, 0x36, 0x0f, 0xe7, 0xb3, 0xc8, 0xe6, 0xc1, 0x33, 0xf2, 0x6d,
	0x7f, 0x4a, 0xc5, 0x60, 0x6a, 0x58, 0x1a, 0x68, 0x07, 0x2a, 0x33, 0x36, 0xb0, 0xa7, 0x72, 0x16,
	0x35, 0x1c, 0x5a, 0x68, 0x0f, 0xb4, 0x11, 0xe5, 0x43, 0xcf, 0x1e, 0x4c, 0xe5, 0xe8, 0x69, 0x78,
	0x79, 0x80, 0x74, 0xa8, 0x0a, 0x89, 0x53, 0x36, 0x11, 0x83, 0xa6, 0xe1, 0xc8, 0x36, 0x4e, 0x41,
	0xeb, 0x87, 0x0f, 0xea, 0x0e, 0x1d, 0x27, 0xca, 0xdb, 0xc9, 0x94, 0x27, 0x03, 0x65, 0x6d, 0x35,
	0x80, 0x45, 0x22, 0x77, 0x8d, 0x0f, 0xa0, 0xe1, 0x08, 0xd3, 0x49, 0x35, 0x3e, 0x0f, 0xb4, 0xe8,
	0xfa, 0x7b, 0x00, 0x1c, 0xa1, 0x62, 0x22, 0x4a, 0x2b, 0x45, 0x9c, 0x82, 0x46, 0x9e, 0xab, 0x9e,
	0x2c, 0xd5, 0x9f, 0x82, 0x66, 0x3e, 0x17, 0x63, 0x2e, 0x31, 0xd7, 0xa0, 0x49, 0x83, 0xb1, 0xd9,
	0x5f, 0x6c, 0xa1, 0x1d, 0xa8, 0x78, 0x8c, 0xcd, 0xa2, 0x25, 0x14, 0x5a, 0xc6, 0x05, 0xd4, 0xfb,
	0x11, 0x4f, 0xfe, 0xae, 0x71, 0x65, 0x7a, 0x8e, 0xb2, 0x20, 0x58, 0xaa, 0xfb, 0x07, 0x1a, 0x71,
	0x00, 0x77, 0x8d, 0x3e, 0xd4, 0x71, 0x02, 0xd9, 0x4d, 0xb5, 0x4a, 0x05, 0x5d, 0xb4, 0xeb, 0x23,
	0x34, 0x70, 0x02, 0x1b, 0x13, 0x56, 0x7a, 0x92, 0xb0, 0x0b, 0xa8, 0x93, 0x75, 0x2b, 0x23, 0xc9,
	0xca, 0x2e, 0xa0, 0x6e, 0xae, 0x8b, 0x34, 0x93, 0xc8, 0x1e, 0x6c, 0xdd, 0xf4, 0xae, 0xbf, 0xb0,
	0x89, 0xed, 0x04, 0x40, 0x1d, 0xaa, 0xf7, 0x9c, 0x7a, 0x8e, 0x35, 0xa3, 0x02, 0xaa, 0xe1, 0xc8,
	0x0e, 0x5a, 0xe8, 0x5a, 0x9c, 0xcf, 0x65, 0x6f, 0x35, 0x1c, 0x5a, 0xc6, 0x11, 0xd4, 0x96, 0x08,
	0xee, 0x8a, 0x57, 0xcd, 0x7e, 0x50, 0x27, 0x04, 0x48, 0xa3, 0xfb, 0xbb, 0x1a, 0x0e, 0xce, 0x57,
	0xcb, 0xe3, 0xc8, 0x87, 0xff, 0x73, 0x3e, 0x95, 0xe8, 0x55, 0x76, 0xe1, 0xe4, 0x7e, 0x88, 0xf5,
	0x93, 0xa7, 0x07, 0x73, 0x17, 0x7d, 0x06, 0x2d, 0xda, 0xe6, 0x68, 0x3f, 0x9b, 0x1a, 0xdb, 0x82,
	0xfa, 0x81, 0xca, 0x2d, 0x59, 0x58, 0xc1, 0xc2, 0x6a, 0x16, 0x4e, 0xb3, 0x88, 0x82, 0x45, 0xd4,
	0x2c, 0x92, 0x66, 0x99, 0x0a, 0x96, 0xa9, 0x66, 0x25, 0x36, 0x39, 0xea, 0x41, 0x45, 0xbe, 0x2d,
	0x94, 0x1d, 0xad, 0x68, 0xa1, 0xea, 0xbb, 0xb9, 0x3e, 0x89, 0xc0, 0x79, 0x08, 0xac, 0x40, 0xe0,
	0x04, 0x82, 0xe4, 0x21, 0x88, 0x02, 0x41, 0x12, 0x08, 0x33, 0x0f, 0x61, 0x2a, 0x10, 0xcb, 0xbd,
	0x87, 0xae, 0xa3, 0x4f, 0x41, 0xb0, 0xf8, 0x0e, 0xf2, 0x6a, 0x96, 0x0f, 0x53, 0x7f, 0xa9, 0xf4,
	0x4b, 0x1c, 0x56, 0xe1, 0xf0, 0x0a, 0x1c, 0xce, 0xe0, 0x88, 0x0a, 0x47, 0x56, 0xe0, 0x48, 0x06,
	0x67, 0xaa, 0x70, 0xe6, 0x0a, 0x5c, 0x72, 0xc9, 0xa0, 0x2b, 0xa8, 0x2e, 0x36, 0x04, 0xda, 0xcb,
	0x04, 0xc7, 0xf6, 0x8f, 0xbe, 0xaf, 0xf0, 0x72, 0xf7, 0x72, 0xf3, 0x5b, 0x59, 0xf8, 0x07, 0x15,
	0xf1, 0x2f, 0xfd, 0xdd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xbd, 0x4c, 0x0d, 0xdf, 0x0b,
	0x00, 0x00,
}
