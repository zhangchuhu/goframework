// Code generated by protoc-gen-tars. DO NOT EDIT.
// source: bcserver.proto

/*
Package bilin is a generated protocol buffer package.

用于tars后端寻路 objname = bilin.bcserver.bcservantobj

It is generated from these files:
	bcserver.proto
	bigexpression.proto
	bizroomcenter.proto
	ccserver.proto
	chattagtars.proto
	confinfocenter.proto
	dubboproxy.proto
	flowerserver.proto
	guildtars.proto
	header.proto
	internal.proto
	matchserver.proto
	operationmanagement.proto
	push.proto
	relationlist.proto
	roominfocenter.proto
	searchserver.proto

It has these top-level messages:
	EnterBroRoomReq
	EnterBroRoomResp
	GetAllRoomInfoReq
	GetAllRoomInfoResp
	ChangeBroRoomTypeReq
	ChangeBroRoomTypeResp
	GetBroRoomUsersByPageReq
	GetBroRoomUsersByPageResp
	ConnMediaResultReq
	ConnMediaResultResp
	PingBroRoomReq
	PingBroRoomResp
	AudienceLinkOperationReq
	AudienceLinkOperationResp
	ExitBroRoomReq
	ExitBroRoomResp
	KickUserReq
	KickUserResp
	ForbiddenUserReq
	ForbiddenUserResp
	ForbiddenRoomReq
	ForbiddenRoomResp
	RoomPrivilegeInfoReq
	RoomPrivilegeInfoResp
	MuteUserReq
	MuteUserResp
	MuteResultReq
	MuteResultResp
	MikeOperationReq
	MikeOperationResp
	ChangeBroRoomLinkStatusReq
	ChangeBroRoomLinkStatusResp
	ChangeBroRoomAutoToMikeStatusReq
	ChangeBroRoomAutoToMikeStatusResp
	BroRoomPraiseReq
	BroRoomPraiseResp
	GetBroRoomPreparedAudienceReq
	GetBroRoomPreparedAudienceResp
	SendRoomMessageReq
	SendRoomMessageResp
	KaraokeOperationReq
	KaraokeOperationResp
	KaraokeAddSongReq
	KaraokeAddSongResp
	KaraokeStartSingReq
	KaraokeStartSingResp
	KaraokeSongSetTopReq
	KaraokeSongSetTopResp
	KaraokeDelSongReq
	KaraokeDelSongResp
	KaraokePauseSongReq
	KaraokePauseSongResp
	KaraokeTerminateSongReq
	KaraokeTerminateSongResp
	ClearRoomPreparedAudienceReq
	ClearRoomPreparedAudienceResp
	LockUnlockRoomOperationReq
	LockUnlockRoomOperationResp
	Emotion
	EmotionPos
	EmotionConfig
	GetEmotionConfigReq
	GetEmotionConfigRes
	SendEmotionReq
	SendEmotionRes
	BizRoomInfo
	GetBizRoomInfoReq
	GetBizRoomInfoResp
	BatchGetBizRoomInfoReq
	BatchGetBizRoomInfoResp
	SetRoomPasswordReq
	SetRoomPasswordResp
	RemoveRoomPasswordReq
	RemoveRoomPasswordResp
	GetBizRoomLockStatusReq
	GetBizRoomLockStatusResp
	BatchGetBizRoomLockStatusReq
	BatchGetBizRoomLockStatusResp
	GetAllLockedRoomsReq
	GetAllLockedRoomsResp
	GetRandomCallNumberClientReq
	GetRandomCallNumberClientResp
	GenerateRoomReq
	GenerateRoomResp
	SendMessageToUserReq
	SendMessageToUserResp
	GetUserCurrentRoomReq
	GetUserCurrentRoomResp
	PageInfo
	ChatTag
	CChatTagReq
	CChatTagResp
	RChatTagReq
	RChatTagResp
	UChatTagReq
	UChatTagResp
	DChatTagReq
	DChatTagResp
	PUATopic
	CPUATopicReq
	CPUATopicResp
	RPUATopicReq
	RPUATopicResp
	UPUATopicReq
	UPUATopicResp
	DPUATopicReq
	DPUATopicResp
	TruthTopic
	CTruthTopicReq
	CTruthTopicResp
	RTruthTopicReq
	RTruthTopicResp
	UTruthTopicReq
	UTruthTopicResp
	DTruthTopicReq
	DTruthTopicResp
	UserChatTag
	CUserChatTagReq
	CUserChatTagResp
	RUserChatTagReq
	RUserChatTagResp
	TopNUser
	RTopNUserChatTagSummaryReq
	RTopNUserChatTagSummaryResp
	BatchRTopNUserChatTagSummaryReq
	BatchRTopNUserChatTagSummaryResp
	UUserChatTagReq
	UUserChatTagResp
	DUserChatTagReq
	DUserChatTagResp
	GuildInfoReq
	GuildInfoResp
	LivingCategoryInfo
	LivingCategorysReq
	LivingCategorysResp
	CarouselInfo
	CarouselReq
	CarouselResp
	BannerReq
	BannerResp
	CategoryStickieInfo
	CategoryStickieReq
	CategoryStickieResp
	CreateCategoryStickieReq
	CreateCategoryStickieResp
	UpdateCategoryStickieReq
	UpdateCategoryStickieResp
	DelCategoryStickieReq
	DelCategoryStickieResp
	AvailableCategoryStickieReq
	AvailableCategoryStickieResp
	CategoryHostRecInfo
	CategoryHostRecReq
	CategoryHostRecResp
	CreateCategoryHostRecReq
	CreateCategoryHostRecResp
	UpdateCategoryHostRecReq
	UpdateCategoryHostRecResp
	DelCategoryHostRecReq
	DelCategoryHostRecResp
	CategoryGuildRecInfo
	CategoryGuildRecReq
	CategoryGuildRecResp
	UpdateCategoryGuildRecReq
	UpdateCategoryGuildRecResp
	CreateCategoryGuildRecReq
	CreateCategoryGuildRecResp
	DelCategoryGuildRecReq
	DelCategoryGuildRecResp
	GuildRoomInfo
	GuildRoomSReq
	GuildRoomSResp
	DelGuildRoomReq
	DelGuildRoomResp
	CreateGuildRoomReq
	CreateGuildRoomResp
	UserBabgeInfo
	UserBabgeReq
	UserBabgeResp
	AppleAuditWordsReq
	AppleAuditWordsResp
	DPInvokeReq
	DPInvokeArg
	DPInvokeRsp
	QueryUsableFlowerCountRequest
	QueryUsableFlowerCountRespone
	SendFlowerRequest
	SendFlowerRespone
	CategoryGuildRecByOwUidReq
	CategoryGuildRecByOwUidResp
	Contract
	CContractReq
	CContractResp
	RContractReq
	RContractResp
	UContractReq
	UContractResp
	DContractReq
	DContractResp
	Guild
	CGuildReq
	CGuildResp
	RGuildReq
	RGuildResp
	UGuildReq
	UGuildResp
	DGuildReq
	DGuildResp
	GuildRoom
	CGuildRoomReq
	CGuildRoomResp
	RGuildRoomReq
	RGuildRoomResp
	UGuildRoomReq
	UGuildRoomResp
	DGuildRoomReq
	DGuildRoomResp
	OAMLoginReq
	OAMLoginResp
	Header
	CommonRetInfo
	MultiPush
	MatchRandomCallReq
	MatchRandomCallResp
	CancleMatchRandomReq
	CancleMatchRandomResp
	SelectMatchingResultReq
	SelectMatchingResultResp
	ApplyTalkingRequest
	ApplyTalkingRespone
	ReportTalkingRequest
	ReportTalkingResponse
	TalkingRequest
	TalkingRespone
	TalkingHeartbeatRequest
	TalkingHeartbeatRespone
	GetComfortWordRequest
	GetComfortWordRespone
	GetRandomAvatarReq
	GetRandomAvatarResp
	HeadgearInfo
	ActDistributionHeadgearRequest
	BatchActDistributionHeadgearRequest
	ActDistributionHeadgearRespone
	GetUserHeadgearInfoReq
	GetUserHeadgearInfoResp
	ServerPush
	BcMessageBody
	CommonMessageBody
	PushProxyReqFromJava
	BaseRoomInfo
	RoomBizInfo
	AllRoomInfo
	RoomMickListInfo
	RoomUserListInfo
	RoomForbiddenList
	UserInfo
	UserPrivilegeInfoInRoom
	MikeInfo
	PraiseNotify
	MuteNotify
	KickNotify
	MikeNotify
	ForbiddenNotify
	ClosedRoomNotify
	KaraokeSongInfo
	PreparationSongNotify
	AddSongNotify
	SongsListNotify
	SongSetTopNotify
	DelSongNotify
	StartSingNotify
	PauseSongNotify
	TerminateSongNotify
	AllRoomKaraokeInfo
	ClearRoomPreparedAudienceNotify
	UserListChangeNotify
	UserChatTagSummary
	UserChatTagSummaryS
	MatchUserInfo
	OptionalMatchingResult
	MatchingResult
	ApplyTalkingNotify
	ReportTalkingNotify
	TalkingAction
	BroadcastOnlineUserCount
	SendFloweBC
	BigExpressionBroadcast
	RelationInfo
	RSUserMikeOptionReq
	RSUserMikeOptionResp
	GetUserRelationMedalReq
	GetUserRelationMedalResp
	RoomInfo
	LivingRoomsInfoReq
	LivingRoomsInfoResp
	BatchLivingRoomsInfoByHostsReq
	BatchLivingRoomsInfoByHostsResp
	IsLivingReq
	IsLivingResp
	SearchReq
	SearchRsp
	SearchRspHeader
	SearchRspDataItem
	GetRelatedHotSearchesReq
	GetRelatedHotSearchesRsp
	GetAllHotSearchesReq
	GetAllHotSearchesRsp
	GetHotSongsReq
	GetHotSongsRsp
*/
package bilin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"
	"code.yy.com/yytars/goframework/tars/servant"
	"code.yy.com/yytars/goframework/tars/servant/model"
	"code.yy.com/yytars/goframework/jce/taf"
	"errors"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConnMediaResultReq_CONMEDIARESULT int32

const (
	ConnMediaResultReq_SUCCESS ConnMediaResultReq_CONMEDIARESULT = 0
	ConnMediaResultReq_FAILED  ConnMediaResultReq_CONMEDIARESULT = 1
)

var ConnMediaResultReq_CONMEDIARESULT_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILED",
}
var ConnMediaResultReq_CONMEDIARESULT_value = map[string]int32{
	"SUCCESS": 0,
	"FAILED":  1,
}

func (x ConnMediaResultReq_CONMEDIARESULT) String() string {
	return proto.EnumName(ConnMediaResultReq_CONMEDIARESULT_name, int32(x))
}
func (ConnMediaResultReq_CONMEDIARESULT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

type AudienceLinkOperationReq_LINKOP int32

const (
	AudienceLinkOperationReq_LINK   AudienceLinkOperationReq_LINKOP = 0
	AudienceLinkOperationReq_UNLINK AudienceLinkOperationReq_LINKOP = 1
)

var AudienceLinkOperationReq_LINKOP_name = map[int32]string{
	0: "LINK",
	1: "UNLINK",
}
var AudienceLinkOperationReq_LINKOP_value = map[string]int32{
	"LINK":   0,
	"UNLINK": 1,
}

func (x AudienceLinkOperationReq_LINKOP) String() string {
	return proto.EnumName(AudienceLinkOperationReq_LINKOP_name, int32(x))
}
func (AudienceLinkOperationReq_LINKOP) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 0}
}

type MuteUserReq_MUTEOPT int32

const (
	MuteUserReq_NOMUTE MuteUserReq_MUTEOPT = 0
	MuteUserReq_MUTE   MuteUserReq_MUTEOPT = 1
)

var MuteUserReq_MUTEOPT_name = map[int32]string{
	0: "NOMUTE",
	1: "MUTE",
}
var MuteUserReq_MUTEOPT_value = map[string]int32{
	"NOMUTE": 0,
	"MUTE":   1,
}

func (x MuteUserReq_MUTEOPT) String() string {
	return proto.EnumName(MuteUserReq_MUTEOPT_name, int32(x))
}
func (MuteUserReq_MUTEOPT) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{24, 0} }

type MikeOperationReq_MIKEOPT int32

const (
	MikeOperationReq_UNMIKE     MikeOperationReq_MIKEOPT = 0
	MikeOperationReq_ONMIKE     MikeOperationReq_MIKEOPT = 1
	MikeOperationReq_LOCKMIKE   MikeOperationReq_MIKEOPT = 3
	MikeOperationReq_UNLOCKMIKE MikeOperationReq_MIKEOPT = 4
)

var MikeOperationReq_MIKEOPT_name = map[int32]string{
	0: "UNMIKE",
	1: "ONMIKE",
	3: "LOCKMIKE",
	4: "UNLOCKMIKE",
}
var MikeOperationReq_MIKEOPT_value = map[string]int32{
	"UNMIKE":     0,
	"ONMIKE":     1,
	"LOCKMIKE":   3,
	"UNLOCKMIKE": 4,
}

func (x MikeOperationReq_MIKEOPT) String() string {
	return proto.EnumName(MikeOperationReq_MIKEOPT_name, int32(x))
}
func (MikeOperationReq_MIKEOPT) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{28, 0} }

type EnterBroRoomReq struct {
	Header  *Header  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Roompwd string   `protobuf:"bytes,2,opt,name=roompwd" json:"roompwd,omitempty"`
	From    USERFROM `protobuf:"varint,3,opt,name=from,enum=bilin.USERFROM" json:"from,omitempty"`
}

func (m *EnterBroRoomReq) Reset()                    { *m = EnterBroRoomReq{} }
func (m *EnterBroRoomReq) String() string            { return proto.CompactTextString(m) }
func (*EnterBroRoomReq) ProtoMessage()               {}
func (*EnterBroRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EnterBroRoomReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *EnterBroRoomReq) GetRoompwd() string {
	if m != nil {
		return m.Roompwd
	}
	return ""
}

func (m *EnterBroRoomReq) GetFrom() USERFROM {
	if m != nil {
		return m.From
	}
	return USERFROM_ROOMLIST
}

type EnterBroRoomResp struct {
	Commonret     *CommonRetInfo           `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Allroominfo   *AllRoomInfo             `protobuf:"bytes,2,opt,name=allroominfo" json:"allroominfo,omitempty"`
	Mediatoken    string                   `protobuf:"bytes,3,opt,name=mediatoken" json:"mediatoken,omitempty"`
	Privilegeinfo *UserPrivilegeInfoInRoom `protobuf:"bytes,4,opt,name=privilegeinfo" json:"privilegeinfo,omitempty"`
}

func (m *EnterBroRoomResp) Reset()                    { *m = EnterBroRoomResp{} }
func (m *EnterBroRoomResp) String() string            { return proto.CompactTextString(m) }
func (*EnterBroRoomResp) ProtoMessage()               {}
func (*EnterBroRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EnterBroRoomResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *EnterBroRoomResp) GetAllroominfo() *AllRoomInfo {
	if m != nil {
		return m.Allroominfo
	}
	return nil
}

func (m *EnterBroRoomResp) GetMediatoken() string {
	if m != nil {
		return m.Mediatoken
	}
	return ""
}

func (m *EnterBroRoomResp) GetPrivilegeinfo() *UserPrivilegeInfoInRoom {
	if m != nil {
		return m.Privilegeinfo
	}
	return nil
}

type GetAllRoomInfoReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *GetAllRoomInfoReq) Reset()                    { *m = GetAllRoomInfoReq{} }
func (m *GetAllRoomInfoReq) String() string            { return proto.CompactTextString(m) }
func (*GetAllRoomInfoReq) ProtoMessage()               {}
func (*GetAllRoomInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetAllRoomInfoReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type GetAllRoomInfoResp struct {
	Commonret   *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Allroominfo *AllRoomInfo   `protobuf:"bytes,2,opt,name=allroominfo" json:"allroominfo,omitempty"`
}

func (m *GetAllRoomInfoResp) Reset()                    { *m = GetAllRoomInfoResp{} }
func (m *GetAllRoomInfoResp) String() string            { return proto.CompactTextString(m) }
func (*GetAllRoomInfoResp) ProtoMessage()               {}
func (*GetAllRoomInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetAllRoomInfoResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *GetAllRoomInfoResp) GetAllroominfo() *AllRoomInfo {
	if m != nil {
		return m.Allroominfo
	}
	return nil
}

type ChangeBroRoomTypeReq struct {
	Header   *Header               `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Roomtype BaseRoomInfo_ROOMTYPE `protobuf:"varint,2,opt,name=roomtype,enum=bilin.BaseRoomInfo_ROOMTYPE" json:"roomtype,omitempty"`
}

func (m *ChangeBroRoomTypeReq) Reset()                    { *m = ChangeBroRoomTypeReq{} }
func (m *ChangeBroRoomTypeReq) String() string            { return proto.CompactTextString(m) }
func (*ChangeBroRoomTypeReq) ProtoMessage()               {}
func (*ChangeBroRoomTypeReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ChangeBroRoomTypeReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ChangeBroRoomTypeReq) GetRoomtype() BaseRoomInfo_ROOMTYPE {
	if m != nil {
		return m.Roomtype
	}
	return BaseRoomInfo_ROOMTYPE_UNKNOW
}

type ChangeBroRoomTypeResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *ChangeBroRoomTypeResp) Reset()                    { *m = ChangeBroRoomTypeResp{} }
func (m *ChangeBroRoomTypeResp) String() string            { return proto.CompactTextString(m) }
func (*ChangeBroRoomTypeResp) ProtoMessage()               {}
func (*ChangeBroRoomTypeResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ChangeBroRoomTypeResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type GetBroRoomUsersByPageReq struct {
	Header     *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Pagenumber uint32  `protobuf:"varint,3,opt,name=pagenumber" json:"pagenumber,omitempty"`
}

func (m *GetBroRoomUsersByPageReq) Reset()                    { *m = GetBroRoomUsersByPageReq{} }
func (m *GetBroRoomUsersByPageReq) String() string            { return proto.CompactTextString(m) }
func (*GetBroRoomUsersByPageReq) ProtoMessage()               {}
func (*GetBroRoomUsersByPageReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetBroRoomUsersByPageReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetBroRoomUsersByPageReq) GetPagenumber() uint32 {
	if m != nil {
		return m.Pagenumber
	}
	return 0
}

type GetBroRoomUsersByPageResp struct {
	Commonret     *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Audienceusers []*UserInfo    `protobuf:"bytes,2,rep,name=audienceusers" json:"audienceusers,omitempty"`
}

func (m *GetBroRoomUsersByPageResp) Reset()                    { *m = GetBroRoomUsersByPageResp{} }
func (m *GetBroRoomUsersByPageResp) String() string            { return proto.CompactTextString(m) }
func (*GetBroRoomUsersByPageResp) ProtoMessage()               {}
func (*GetBroRoomUsersByPageResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetBroRoomUsersByPageResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *GetBroRoomUsersByPageResp) GetAudienceusers() []*UserInfo {
	if m != nil {
		return m.Audienceusers
	}
	return nil
}

type ConnMediaResultReq struct {
	Header          *Header                           `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Connmediaresult ConnMediaResultReq_CONMEDIARESULT `protobuf:"varint,2,opt,name=connmediaresult,enum=bilin.bcserver.ConnMediaResultReq_CONMEDIARESULT" json:"connmediaresult,omitempty"`
}

func (m *ConnMediaResultReq) Reset()                    { *m = ConnMediaResultReq{} }
func (m *ConnMediaResultReq) String() string            { return proto.CompactTextString(m) }
func (*ConnMediaResultReq) ProtoMessage()               {}
func (*ConnMediaResultReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ConnMediaResultReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ConnMediaResultReq) GetConnmediaresult() ConnMediaResultReq_CONMEDIARESULT {
	if m != nil {
		return m.Connmediaresult
	}
	return ConnMediaResultReq_SUCCESS
}

type ConnMediaResultResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *ConnMediaResultResp) Reset()                    { *m = ConnMediaResultResp{} }
func (m *ConnMediaResultResp) String() string            { return proto.CompactTextString(m) }
func (*ConnMediaResultResp) ProtoMessage()               {}
func (*ConnMediaResultResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ConnMediaResultResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type PingBroRoomReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *PingBroRoomReq) Reset()                    { *m = PingBroRoomReq{} }
func (m *PingBroRoomReq) String() string            { return proto.CompactTextString(m) }
func (*PingBroRoomReq) ProtoMessage()               {}
func (*PingBroRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PingBroRoomReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type PingBroRoomResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *PingBroRoomResp) Reset()                    { *m = PingBroRoomResp{} }
func (m *PingBroRoomResp) String() string            { return proto.CompactTextString(m) }
func (*PingBroRoomResp) ProtoMessage()               {}
func (*PingBroRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *PingBroRoomResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type AudienceLinkOperationReq struct {
	Header     *Header                         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Linkop     AudienceLinkOperationReq_LINKOP `protobuf:"varint,2,opt,name=linkop,enum=bilin.bcserver.AudienceLinkOperationReq_LINKOP" json:"linkop,omitempty"`
	Micknumber uint32                          `protobuf:"varint,3,opt,name=micknumber" json:"micknumber,omitempty"`
}

func (m *AudienceLinkOperationReq) Reset()                    { *m = AudienceLinkOperationReq{} }
func (m *AudienceLinkOperationReq) String() string            { return proto.CompactTextString(m) }
func (*AudienceLinkOperationReq) ProtoMessage()               {}
func (*AudienceLinkOperationReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AudienceLinkOperationReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AudienceLinkOperationReq) GetLinkop() AudienceLinkOperationReq_LINKOP {
	if m != nil {
		return m.Linkop
	}
	return AudienceLinkOperationReq_LINK
}

func (m *AudienceLinkOperationReq) GetMicknumber() uint32 {
	if m != nil {
		return m.Micknumber
	}
	return 0
}

type AudienceLinkOperationResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *AudienceLinkOperationResp) Reset()                    { *m = AudienceLinkOperationResp{} }
func (m *AudienceLinkOperationResp) String() string            { return proto.CompactTextString(m) }
func (*AudienceLinkOperationResp) ProtoMessage()               {}
func (*AudienceLinkOperationResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AudienceLinkOperationResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type ExitBroRoomReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *ExitBroRoomReq) Reset()                    { *m = ExitBroRoomReq{} }
func (m *ExitBroRoomReq) String() string            { return proto.CompactTextString(m) }
func (*ExitBroRoomReq) ProtoMessage()               {}
func (*ExitBroRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ExitBroRoomReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type ExitBroRoomResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *ExitBroRoomResp) Reset()                    { *m = ExitBroRoomResp{} }
func (m *ExitBroRoomResp) String() string            { return proto.CompactTextString(m) }
func (*ExitBroRoomResp) ProtoMessage()               {}
func (*ExitBroRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ExitBroRoomResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type KickUserReq struct {
	Header       *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Kickeduserid uint64  `protobuf:"varint,2,opt,name=kickeduserid" json:"kickeduserid,omitempty"`
}

func (m *KickUserReq) Reset()                    { *m = KickUserReq{} }
func (m *KickUserReq) String() string            { return proto.CompactTextString(m) }
func (*KickUserReq) ProtoMessage()               {}
func (*KickUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *KickUserReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *KickUserReq) GetKickeduserid() uint64 {
	if m != nil {
		return m.Kickeduserid
	}
	return 0
}

type KickUserResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *KickUserResp) Reset()                    { *m = KickUserResp{} }
func (m *KickUserResp) String() string            { return proto.CompactTextString(m) }
func (*KickUserResp) ProtoMessage()               {}
func (*KickUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *KickUserResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type ForbiddenUserReq struct {
	Header          *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Forbiddenuserid uint64  `protobuf:"varint,2,opt,name=forbiddenuserid" json:"forbiddenuserid,omitempty"`
	Opt             bool    `protobuf:"varint,3,opt,name=opt" json:"opt,omitempty"`
}

func (m *ForbiddenUserReq) Reset()                    { *m = ForbiddenUserReq{} }
func (m *ForbiddenUserReq) String() string            { return proto.CompactTextString(m) }
func (*ForbiddenUserReq) ProtoMessage()               {}
func (*ForbiddenUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ForbiddenUserReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ForbiddenUserReq) GetForbiddenuserid() uint64 {
	if m != nil {
		return m.Forbiddenuserid
	}
	return 0
}

func (m *ForbiddenUserReq) GetOpt() bool {
	if m != nil {
		return m.Opt
	}
	return false
}

type ForbiddenUserResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *ForbiddenUserResp) Reset()                    { *m = ForbiddenUserResp{} }
func (m *ForbiddenUserResp) String() string            { return proto.CompactTextString(m) }
func (*ForbiddenUserResp) ProtoMessage()               {}
func (*ForbiddenUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ForbiddenUserResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type ForbiddenRoomReq struct {
	Header             *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Hostnotifytext     string  `protobuf:"bytes,2,opt,name=hostnotifytext" json:"hostnotifytext,omitempty"`
	Audiencenotifytext string  `protobuf:"bytes,3,opt,name=audiencenotifytext" json:"audiencenotifytext,omitempty"`
}

func (m *ForbiddenRoomReq) Reset()                    { *m = ForbiddenRoomReq{} }
func (m *ForbiddenRoomReq) String() string            { return proto.CompactTextString(m) }
func (*ForbiddenRoomReq) ProtoMessage()               {}
func (*ForbiddenRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ForbiddenRoomReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ForbiddenRoomReq) GetHostnotifytext() string {
	if m != nil {
		return m.Hostnotifytext
	}
	return ""
}

func (m *ForbiddenRoomReq) GetAudiencenotifytext() string {
	if m != nil {
		return m.Audiencenotifytext
	}
	return ""
}

type ForbiddenRoomResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *ForbiddenRoomResp) Reset()                    { *m = ForbiddenRoomResp{} }
func (m *ForbiddenRoomResp) String() string            { return proto.CompactTextString(m) }
func (*ForbiddenRoomResp) ProtoMessage()               {}
func (*ForbiddenRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ForbiddenRoomResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type RoomPrivilegeInfoReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *RoomPrivilegeInfoReq) Reset()                    { *m = RoomPrivilegeInfoReq{} }
func (m *RoomPrivilegeInfoReq) String() string            { return proto.CompactTextString(m) }
func (*RoomPrivilegeInfoReq) ProtoMessage()               {}
func (*RoomPrivilegeInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *RoomPrivilegeInfoReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type RoomPrivilegeInfoResp struct {
	Commonret     *CommonRetInfo           `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Privilegeinfo *UserPrivilegeInfoInRoom `protobuf:"bytes,2,opt,name=privilegeinfo" json:"privilegeinfo,omitempty"`
}

func (m *RoomPrivilegeInfoResp) Reset()                    { *m = RoomPrivilegeInfoResp{} }
func (m *RoomPrivilegeInfoResp) String() string            { return proto.CompactTextString(m) }
func (*RoomPrivilegeInfoResp) ProtoMessage()               {}
func (*RoomPrivilegeInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *RoomPrivilegeInfoResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *RoomPrivilegeInfoResp) GetPrivilegeinfo() *UserPrivilegeInfoInRoom {
	if m != nil {
		return m.Privilegeinfo
	}
	return nil
}

type MuteUserReq struct {
	Header     *Header             `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Muteuserid uint64              `protobuf:"varint,2,opt,name=muteuserid" json:"muteuserid,omitempty"`
	Opt        MuteUserReq_MUTEOPT `protobuf:"varint,3,opt,name=opt,enum=bilin.bcserver.MuteUserReq_MUTEOPT" json:"opt,omitempty"`
}

func (m *MuteUserReq) Reset()                    { *m = MuteUserReq{} }
func (m *MuteUserReq) String() string            { return proto.CompactTextString(m) }
func (*MuteUserReq) ProtoMessage()               {}
func (*MuteUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *MuteUserReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MuteUserReq) GetMuteuserid() uint64 {
	if m != nil {
		return m.Muteuserid
	}
	return 0
}

func (m *MuteUserReq) GetOpt() MuteUserReq_MUTEOPT {
	if m != nil {
		return m.Opt
	}
	return MuteUserReq_NOMUTE
}

type MuteUserResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *MuteUserResp) Reset()                    { *m = MuteUserResp{} }
func (m *MuteUserResp) String() string            { return proto.CompactTextString(m) }
func (*MuteUserResp) ProtoMessage()               {}
func (*MuteUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *MuteUserResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type MuteResultReq struct {
	Header *Header             `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Opt    MuteUserReq_MUTEOPT `protobuf:"varint,2,opt,name=opt,enum=bilin.bcserver.MuteUserReq_MUTEOPT" json:"opt,omitempty"`
}

func (m *MuteResultReq) Reset()                    { *m = MuteResultReq{} }
func (m *MuteResultReq) String() string            { return proto.CompactTextString(m) }
func (*MuteResultReq) ProtoMessage()               {}
func (*MuteResultReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *MuteResultReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MuteResultReq) GetOpt() MuteUserReq_MUTEOPT {
	if m != nil {
		return m.Opt
	}
	return MuteUserReq_NOMUTE
}

type MuteResultResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *MuteResultResp) Reset()                    { *m = MuteResultResp{} }
func (m *MuteResultResp) String() string            { return proto.CompactTextString(m) }
func (*MuteResultResp) ProtoMessage()               {}
func (*MuteResultResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *MuteResultResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

// 主持人禁麦和开麦
type MikeOperationReq struct {
	Header  *Header                  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Userid  uint64                   `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Opt     MikeOperationReq_MIKEOPT `protobuf:"varint,3,opt,name=opt,enum=bilin.bcserver.MikeOperationReq_MIKEOPT" json:"opt,omitempty"`
	Mikeidx uint32                   `protobuf:"varint,4,opt,name=mikeidx" json:"mikeidx,omitempty"`
}

func (m *MikeOperationReq) Reset()                    { *m = MikeOperationReq{} }
func (m *MikeOperationReq) String() string            { return proto.CompactTextString(m) }
func (*MikeOperationReq) ProtoMessage()               {}
func (*MikeOperationReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *MikeOperationReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MikeOperationReq) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *MikeOperationReq) GetOpt() MikeOperationReq_MIKEOPT {
	if m != nil {
		return m.Opt
	}
	return MikeOperationReq_UNMIKE
}

func (m *MikeOperationReq) GetMikeidx() uint32 {
	if m != nil {
		return m.Mikeidx
	}
	return 0
}

type MikeOperationResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *MikeOperationResp) Reset()                    { *m = MikeOperationResp{} }
func (m *MikeOperationResp) String() string            { return proto.CompactTextString(m) }
func (*MikeOperationResp) ProtoMessage()               {}
func (*MikeOperationResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *MikeOperationResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type ChangeBroRoomLinkStatusReq struct {
	Header     *Header                 `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Linkstatus BaseRoomInfo_LINKSTATUS `protobuf:"varint,2,opt,name=linkstatus,enum=bilin.BaseRoomInfo_LINKSTATUS" json:"linkstatus,omitempty"`
}

func (m *ChangeBroRoomLinkStatusReq) Reset()                    { *m = ChangeBroRoomLinkStatusReq{} }
func (m *ChangeBroRoomLinkStatusReq) String() string            { return proto.CompactTextString(m) }
func (*ChangeBroRoomLinkStatusReq) ProtoMessage()               {}
func (*ChangeBroRoomLinkStatusReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ChangeBroRoomLinkStatusReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ChangeBroRoomLinkStatusReq) GetLinkstatus() BaseRoomInfo_LINKSTATUS {
	if m != nil {
		return m.Linkstatus
	}
	return BaseRoomInfo_CLOSELINK
}

type ChangeBroRoomLinkStatusResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *ChangeBroRoomLinkStatusResp) Reset()                    { *m = ChangeBroRoomLinkStatusResp{} }
func (m *ChangeBroRoomLinkStatusResp) String() string            { return proto.CompactTextString(m) }
func (*ChangeBroRoomLinkStatusResp) ProtoMessage()               {}
func (*ChangeBroRoomLinkStatusResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ChangeBroRoomLinkStatusResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type ChangeBroRoomAutoToMikeStatusReq struct {
	Header   *Header               `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Autolink BaseRoomInfo_AUTOLINK `protobuf:"varint,2,opt,name=autolink,enum=bilin.BaseRoomInfo_AUTOLINK" json:"autolink,omitempty"`
}

func (m *ChangeBroRoomAutoToMikeStatusReq) Reset()         { *m = ChangeBroRoomAutoToMikeStatusReq{} }
func (m *ChangeBroRoomAutoToMikeStatusReq) String() string { return proto.CompactTextString(m) }
func (*ChangeBroRoomAutoToMikeStatusReq) ProtoMessage()    {}
func (*ChangeBroRoomAutoToMikeStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{32}
}

func (m *ChangeBroRoomAutoToMikeStatusReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ChangeBroRoomAutoToMikeStatusReq) GetAutolink() BaseRoomInfo_AUTOLINK {
	if m != nil {
		return m.Autolink
	}
	return BaseRoomInfo_CLOSEAUTOTOMIKE
}

type ChangeBroRoomAutoToMikeStatusResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *ChangeBroRoomAutoToMikeStatusResp) Reset()         { *m = ChangeBroRoomAutoToMikeStatusResp{} }
func (m *ChangeBroRoomAutoToMikeStatusResp) String() string { return proto.CompactTextString(m) }
func (*ChangeBroRoomAutoToMikeStatusResp) ProtoMessage()    {}
func (*ChangeBroRoomAutoToMikeStatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{33}
}

func (m *ChangeBroRoomAutoToMikeStatusResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type BroRoomPraiseReq struct {
	Header      *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PraiseCount uint32  `protobuf:"varint,2,opt,name=PraiseCount" json:"PraiseCount,omitempty"`
}

func (m *BroRoomPraiseReq) Reset()                    { *m = BroRoomPraiseReq{} }
func (m *BroRoomPraiseReq) String() string            { return proto.CompactTextString(m) }
func (*BroRoomPraiseReq) ProtoMessage()               {}
func (*BroRoomPraiseReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *BroRoomPraiseReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BroRoomPraiseReq) GetPraiseCount() uint32 {
	if m != nil {
		return m.PraiseCount
	}
	return 0
}

type BroRoomPraiseResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *BroRoomPraiseResp) Reset()                    { *m = BroRoomPraiseResp{} }
func (m *BroRoomPraiseResp) String() string            { return proto.CompactTextString(m) }
func (*BroRoomPraiseResp) ProtoMessage()               {}
func (*BroRoomPraiseResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *BroRoomPraiseResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type GetBroRoomPreparedAudienceReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *GetBroRoomPreparedAudienceReq) Reset()                    { *m = GetBroRoomPreparedAudienceReq{} }
func (m *GetBroRoomPreparedAudienceReq) String() string            { return proto.CompactTextString(m) }
func (*GetBroRoomPreparedAudienceReq) ProtoMessage()               {}
func (*GetBroRoomPreparedAudienceReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *GetBroRoomPreparedAudienceReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type GetBroRoomPreparedAudienceResp struct {
	Commonret     *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Preparedusers []*UserInfo    `protobuf:"bytes,2,rep,name=preparedusers" json:"preparedusers,omitempty"`
}

func (m *GetBroRoomPreparedAudienceResp) Reset()                    { *m = GetBroRoomPreparedAudienceResp{} }
func (m *GetBroRoomPreparedAudienceResp) String() string            { return proto.CompactTextString(m) }
func (*GetBroRoomPreparedAudienceResp) ProtoMessage()               {}
func (*GetBroRoomPreparedAudienceResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *GetBroRoomPreparedAudienceResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *GetBroRoomPreparedAudienceResp) GetPreparedusers() []*UserInfo {
	if m != nil {
		return m.Preparedusers
	}
	return nil
}

type SendRoomMessageReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Data   []byte  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *SendRoomMessageReq) Reset()                    { *m = SendRoomMessageReq{} }
func (m *SendRoomMessageReq) String() string            { return proto.CompactTextString(m) }
func (*SendRoomMessageReq) ProtoMessage()               {}
func (*SendRoomMessageReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *SendRoomMessageReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SendRoomMessageReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SendRoomMessageResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *SendRoomMessageResp) Reset()                    { *m = SendRoomMessageResp{} }
func (m *SendRoomMessageResp) String() string            { return proto.CompactTextString(m) }
func (*SendRoomMessageResp) ProtoMessage()               {}
func (*SendRoomMessageResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *SendRoomMessageResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type KaraokeOperationReq struct {
	Header *Header                    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Opt    BaseRoomInfo_KARAOKESWITCH `protobuf:"varint,2,opt,name=opt,enum=bilin.BaseRoomInfo_KARAOKESWITCH" json:"opt,omitempty"`
}

func (m *KaraokeOperationReq) Reset()                    { *m = KaraokeOperationReq{} }
func (m *KaraokeOperationReq) String() string            { return proto.CompactTextString(m) }
func (*KaraokeOperationReq) ProtoMessage()               {}
func (*KaraokeOperationReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *KaraokeOperationReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *KaraokeOperationReq) GetOpt() BaseRoomInfo_KARAOKESWITCH {
	if m != nil {
		return m.Opt
	}
	return BaseRoomInfo_CLOSEKARAOKE
}

type KaraokeOperationResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *KaraokeOperationResp) Reset()                    { *m = KaraokeOperationResp{} }
func (m *KaraokeOperationResp) String() string            { return proto.CompactTextString(m) }
func (*KaraokeOperationResp) ProtoMessage()               {}
func (*KaraokeOperationResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *KaraokeOperationResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type KaraokeAddSongReq struct {
	Header     *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	SongName   string  `protobuf:"bytes,2,opt,name=songName" json:"songName,omitempty"`
	Resourceid string  `protobuf:"bytes,3,opt,name=resourceid" json:"resourceid,omitempty"`
}

func (m *KaraokeAddSongReq) Reset()                    { *m = KaraokeAddSongReq{} }
func (m *KaraokeAddSongReq) String() string            { return proto.CompactTextString(m) }
func (*KaraokeAddSongReq) ProtoMessage()               {}
func (*KaraokeAddSongReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *KaraokeAddSongReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *KaraokeAddSongReq) GetSongName() string {
	if m != nil {
		return m.SongName
	}
	return ""
}

func (m *KaraokeAddSongReq) GetResourceid() string {
	if m != nil {
		return m.Resourceid
	}
	return ""
}

type KaraokeAddSongResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *KaraokeAddSongResp) Reset()                    { *m = KaraokeAddSongResp{} }
func (m *KaraokeAddSongResp) String() string            { return proto.CompactTextString(m) }
func (*KaraokeAddSongResp) ProtoMessage()               {}
func (*KaraokeAddSongResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *KaraokeAddSongResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type KaraokeStartSingReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Songid string  `protobuf:"bytes,2,opt,name=songid" json:"songid,omitempty"`
}

func (m *KaraokeStartSingReq) Reset()                    { *m = KaraokeStartSingReq{} }
func (m *KaraokeStartSingReq) String() string            { return proto.CompactTextString(m) }
func (*KaraokeStartSingReq) ProtoMessage()               {}
func (*KaraokeStartSingReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *KaraokeStartSingReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *KaraokeStartSingReq) GetSongid() string {
	if m != nil {
		return m.Songid
	}
	return ""
}

type KaraokeStartSingResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *KaraokeStartSingResp) Reset()                    { *m = KaraokeStartSingResp{} }
func (m *KaraokeStartSingResp) String() string            { return proto.CompactTextString(m) }
func (*KaraokeStartSingResp) ProtoMessage()               {}
func (*KaraokeStartSingResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *KaraokeStartSingResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type KaraokeSongSetTopReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Songid string  `protobuf:"bytes,2,opt,name=songid" json:"songid,omitempty"`
}

func (m *KaraokeSongSetTopReq) Reset()                    { *m = KaraokeSongSetTopReq{} }
func (m *KaraokeSongSetTopReq) String() string            { return proto.CompactTextString(m) }
func (*KaraokeSongSetTopReq) ProtoMessage()               {}
func (*KaraokeSongSetTopReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *KaraokeSongSetTopReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *KaraokeSongSetTopReq) GetSongid() string {
	if m != nil {
		return m.Songid
	}
	return ""
}

type KaraokeSongSetTopResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *KaraokeSongSetTopResp) Reset()                    { *m = KaraokeSongSetTopResp{} }
func (m *KaraokeSongSetTopResp) String() string            { return proto.CompactTextString(m) }
func (*KaraokeSongSetTopResp) ProtoMessage()               {}
func (*KaraokeSongSetTopResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *KaraokeSongSetTopResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type KaraokeDelSongReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Songid string  `protobuf:"bytes,2,opt,name=songid" json:"songid,omitempty"`
}

func (m *KaraokeDelSongReq) Reset()                    { *m = KaraokeDelSongReq{} }
func (m *KaraokeDelSongReq) String() string            { return proto.CompactTextString(m) }
func (*KaraokeDelSongReq) ProtoMessage()               {}
func (*KaraokeDelSongReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *KaraokeDelSongReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *KaraokeDelSongReq) GetSongid() string {
	if m != nil {
		return m.Songid
	}
	return ""
}

type KaraokeDelSongResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *KaraokeDelSongResp) Reset()                    { *m = KaraokeDelSongResp{} }
func (m *KaraokeDelSongResp) String() string            { return proto.CompactTextString(m) }
func (*KaraokeDelSongResp) ProtoMessage()               {}
func (*KaraokeDelSongResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *KaraokeDelSongResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type KaraokePauseSongReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Songid string  `protobuf:"bytes,2,opt,name=songid" json:"songid,omitempty"`
}

func (m *KaraokePauseSongReq) Reset()                    { *m = KaraokePauseSongReq{} }
func (m *KaraokePauseSongReq) String() string            { return proto.CompactTextString(m) }
func (*KaraokePauseSongReq) ProtoMessage()               {}
func (*KaraokePauseSongReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *KaraokePauseSongReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *KaraokePauseSongReq) GetSongid() string {
	if m != nil {
		return m.Songid
	}
	return ""
}

type KaraokePauseSongResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *KaraokePauseSongResp) Reset()                    { *m = KaraokePauseSongResp{} }
func (m *KaraokePauseSongResp) String() string            { return proto.CompactTextString(m) }
func (*KaraokePauseSongResp) ProtoMessage()               {}
func (*KaraokePauseSongResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *KaraokePauseSongResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type KaraokeTerminateSongReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Songid string  `protobuf:"bytes,2,opt,name=songid" json:"songid,omitempty"`
	Flag   uint32  `protobuf:"varint,3,opt,name=flag" json:"flag,omitempty"`
}

func (m *KaraokeTerminateSongReq) Reset()                    { *m = KaraokeTerminateSongReq{} }
func (m *KaraokeTerminateSongReq) String() string            { return proto.CompactTextString(m) }
func (*KaraokeTerminateSongReq) ProtoMessage()               {}
func (*KaraokeTerminateSongReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *KaraokeTerminateSongReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *KaraokeTerminateSongReq) GetSongid() string {
	if m != nil {
		return m.Songid
	}
	return ""
}

func (m *KaraokeTerminateSongReq) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

type KaraokeTerminateSongResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *KaraokeTerminateSongResp) Reset()                    { *m = KaraokeTerminateSongResp{} }
func (m *KaraokeTerminateSongResp) String() string            { return proto.CompactTextString(m) }
func (*KaraokeTerminateSongResp) ProtoMessage()               {}
func (*KaraokeTerminateSongResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *KaraokeTerminateSongResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

// 主持人清空排麦列表
type ClearRoomPreparedAudienceReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *ClearRoomPreparedAudienceReq) Reset()                    { *m = ClearRoomPreparedAudienceReq{} }
func (m *ClearRoomPreparedAudienceReq) String() string            { return proto.CompactTextString(m) }
func (*ClearRoomPreparedAudienceReq) ProtoMessage()               {}
func (*ClearRoomPreparedAudienceReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *ClearRoomPreparedAudienceReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type ClearRoomPreparedAudienceResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *ClearRoomPreparedAudienceResp) Reset()                    { *m = ClearRoomPreparedAudienceResp{} }
func (m *ClearRoomPreparedAudienceResp) String() string            { return proto.CompactTextString(m) }
func (*ClearRoomPreparedAudienceResp) ProtoMessage()               {}
func (*ClearRoomPreparedAudienceResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *ClearRoomPreparedAudienceResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

// 主持人锁定/解锁房间
type LockUnlockRoomOperationReq struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Opt    uint32  `protobuf:"varint,2,opt,name=opt" json:"opt,omitempty"`
	Pwd    string  `protobuf:"bytes,3,opt,name=pwd" json:"pwd,omitempty"`
}

func (m *LockUnlockRoomOperationReq) Reset()                    { *m = LockUnlockRoomOperationReq{} }
func (m *LockUnlockRoomOperationReq) String() string            { return proto.CompactTextString(m) }
func (*LockUnlockRoomOperationReq) ProtoMessage()               {}
func (*LockUnlockRoomOperationReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *LockUnlockRoomOperationReq) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *LockUnlockRoomOperationReq) GetOpt() uint32 {
	if m != nil {
		return m.Opt
	}
	return 0
}

func (m *LockUnlockRoomOperationReq) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

type LockUnlockRoomOperationResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *LockUnlockRoomOperationResp) Reset()                    { *m = LockUnlockRoomOperationResp{} }
func (m *LockUnlockRoomOperationResp) String() string            { return proto.CompactTextString(m) }
func (*LockUnlockRoomOperationResp) ProtoMessage()               {}
func (*LockUnlockRoomOperationResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *LockUnlockRoomOperationResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func init() {
	proto.RegisterType((*EnterBroRoomReq)(nil), "bilin.bcserver.EnterBroRoomReq")
	proto.RegisterType((*EnterBroRoomResp)(nil), "bilin.bcserver.EnterBroRoomResp")
	proto.RegisterType((*GetAllRoomInfoReq)(nil), "bilin.bcserver.GetAllRoomInfoReq")
	proto.RegisterType((*GetAllRoomInfoResp)(nil), "bilin.bcserver.GetAllRoomInfoResp")
	proto.RegisterType((*ChangeBroRoomTypeReq)(nil), "bilin.bcserver.ChangeBroRoomTypeReq")
	proto.RegisterType((*ChangeBroRoomTypeResp)(nil), "bilin.bcserver.ChangeBroRoomTypeResp")
	proto.RegisterType((*GetBroRoomUsersByPageReq)(nil), "bilin.bcserver.GetBroRoomUsersByPageReq")
	proto.RegisterType((*GetBroRoomUsersByPageResp)(nil), "bilin.bcserver.GetBroRoomUsersByPageResp")
	proto.RegisterType((*ConnMediaResultReq)(nil), "bilin.bcserver.ConnMediaResultReq")
	proto.RegisterType((*ConnMediaResultResp)(nil), "bilin.bcserver.ConnMediaResultResp")
	proto.RegisterType((*PingBroRoomReq)(nil), "bilin.bcserver.PingBroRoomReq")
	proto.RegisterType((*PingBroRoomResp)(nil), "bilin.bcserver.PingBroRoomResp")
	proto.RegisterType((*AudienceLinkOperationReq)(nil), "bilin.bcserver.AudienceLinkOperationReq")
	proto.RegisterType((*AudienceLinkOperationResp)(nil), "bilin.bcserver.AudienceLinkOperationResp")
	proto.RegisterType((*ExitBroRoomReq)(nil), "bilin.bcserver.ExitBroRoomReq")
	proto.RegisterType((*ExitBroRoomResp)(nil), "bilin.bcserver.ExitBroRoomResp")
	proto.RegisterType((*KickUserReq)(nil), "bilin.bcserver.KickUserReq")
	proto.RegisterType((*KickUserResp)(nil), "bilin.bcserver.KickUserResp")
	proto.RegisterType((*ForbiddenUserReq)(nil), "bilin.bcserver.ForbiddenUserReq")
	proto.RegisterType((*ForbiddenUserResp)(nil), "bilin.bcserver.ForbiddenUserResp")
	proto.RegisterType((*ForbiddenRoomReq)(nil), "bilin.bcserver.ForbiddenRoomReq")
	proto.RegisterType((*ForbiddenRoomResp)(nil), "bilin.bcserver.ForbiddenRoomResp")
	proto.RegisterType((*RoomPrivilegeInfoReq)(nil), "bilin.bcserver.RoomPrivilegeInfoReq")
	proto.RegisterType((*RoomPrivilegeInfoResp)(nil), "bilin.bcserver.RoomPrivilegeInfoResp")
	proto.RegisterType((*MuteUserReq)(nil), "bilin.bcserver.MuteUserReq")
	proto.RegisterType((*MuteUserResp)(nil), "bilin.bcserver.MuteUserResp")
	proto.RegisterType((*MuteResultReq)(nil), "bilin.bcserver.MuteResultReq")
	proto.RegisterType((*MuteResultResp)(nil), "bilin.bcserver.MuteResultResp")
	proto.RegisterType((*MikeOperationReq)(nil), "bilin.bcserver.MikeOperationReq")
	proto.RegisterType((*MikeOperationResp)(nil), "bilin.bcserver.MikeOperationResp")
	proto.RegisterType((*ChangeBroRoomLinkStatusReq)(nil), "bilin.bcserver.ChangeBroRoomLinkStatusReq")
	proto.RegisterType((*ChangeBroRoomLinkStatusResp)(nil), "bilin.bcserver.ChangeBroRoomLinkStatusResp")
	proto.RegisterType((*ChangeBroRoomAutoToMikeStatusReq)(nil), "bilin.bcserver.ChangeBroRoomAutoToMikeStatusReq")
	proto.RegisterType((*ChangeBroRoomAutoToMikeStatusResp)(nil), "bilin.bcserver.ChangeBroRoomAutoToMikeStatusResp")
	proto.RegisterType((*BroRoomPraiseReq)(nil), "bilin.bcserver.BroRoomPraiseReq")
	proto.RegisterType((*BroRoomPraiseResp)(nil), "bilin.bcserver.BroRoomPraiseResp")
	proto.RegisterType((*GetBroRoomPreparedAudienceReq)(nil), "bilin.bcserver.GetBroRoomPreparedAudienceReq")
	proto.RegisterType((*GetBroRoomPreparedAudienceResp)(nil), "bilin.bcserver.GetBroRoomPreparedAudienceResp")
	proto.RegisterType((*SendRoomMessageReq)(nil), "bilin.bcserver.SendRoomMessageReq")
	proto.RegisterType((*SendRoomMessageResp)(nil), "bilin.bcserver.SendRoomMessageResp")
	proto.RegisterType((*KaraokeOperationReq)(nil), "bilin.bcserver.KaraokeOperationReq")
	proto.RegisterType((*KaraokeOperationResp)(nil), "bilin.bcserver.KaraokeOperationResp")
	proto.RegisterType((*KaraokeAddSongReq)(nil), "bilin.bcserver.KaraokeAddSongReq")
	proto.RegisterType((*KaraokeAddSongResp)(nil), "bilin.bcserver.KaraokeAddSongResp")
	proto.RegisterType((*KaraokeStartSingReq)(nil), "bilin.bcserver.KaraokeStartSingReq")
	proto.RegisterType((*KaraokeStartSingResp)(nil), "bilin.bcserver.KaraokeStartSingResp")
	proto.RegisterType((*KaraokeSongSetTopReq)(nil), "bilin.bcserver.KaraokeSongSetTopReq")
	proto.RegisterType((*KaraokeSongSetTopResp)(nil), "bilin.bcserver.KaraokeSongSetTopResp")
	proto.RegisterType((*KaraokeDelSongReq)(nil), "bilin.bcserver.KaraokeDelSongReq")
	proto.RegisterType((*KaraokeDelSongResp)(nil), "bilin.bcserver.KaraokeDelSongResp")
	proto.RegisterType((*KaraokePauseSongReq)(nil), "bilin.bcserver.KaraokePauseSongReq")
	proto.RegisterType((*KaraokePauseSongResp)(nil), "bilin.bcserver.KaraokePauseSongResp")
	proto.RegisterType((*KaraokeTerminateSongReq)(nil), "bilin.bcserver.KaraokeTerminateSongReq")
	proto.RegisterType((*KaraokeTerminateSongResp)(nil), "bilin.bcserver.KaraokeTerminateSongResp")
	proto.RegisterType((*ClearRoomPreparedAudienceReq)(nil), "bilin.bcserver.ClearRoomPreparedAudienceReq")
	proto.RegisterType((*ClearRoomPreparedAudienceResp)(nil), "bilin.bcserver.ClearRoomPreparedAudienceResp")
	proto.RegisterType((*LockUnlockRoomOperationReq)(nil), "bilin.bcserver.LockUnlockRoomOperationReq")
	proto.RegisterType((*LockUnlockRoomOperationResp)(nil), "bilin.bcserver.LockUnlockRoomOperationResp")
	proto.RegisterEnum("bilin.bcserver.ConnMediaResultReq_CONMEDIARESULT", ConnMediaResultReq_CONMEDIARESULT_name, ConnMediaResultReq_CONMEDIARESULT_value)
	proto.RegisterEnum("bilin.bcserver.AudienceLinkOperationReq_LINKOP", AudienceLinkOperationReq_LINKOP_name, AudienceLinkOperationReq_LINKOP_value)
	proto.RegisterEnum("bilin.bcserver.MuteUserReq_MUTEOPT", MuteUserReq_MUTEOPT_name, MuteUserReq_MUTEOPT_value)
	proto.RegisterEnum("bilin.bcserver.MikeOperationReq_MIKEOPT", MikeOperationReq_MIKEOPT_name, MikeOperationReq_MIKEOPT_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for BCServant service

type BCServantClient interface {
	//
	// 进入直播间请求
	EnterBroRoom(ctx context.Context, in *EnterBroRoomReq, opts ...map[string]string) (*EnterBroRoomResp, error)
	//
	// 客户端连接媒体结果通知
	ConnMediaResult(ctx context.Context, in *ConnMediaResultReq, opts ...map[string]string) (*ConnMediaResultResp, error)
	//
	// 直播间PING请求
	PingBroRoom(ctx context.Context, in *PingBroRoomReq, opts ...map[string]string) (*PingBroRoomResp, error)
	//
	// 观众请求麦位、取消麦位
	AudienceLinkOperation(ctx context.Context, in *AudienceLinkOperationReq, opts ...map[string]string) (*AudienceLinkOperationResp, error)
	//
	// 用户离开直播间通知
	ExitBroRoom(ctx context.Context, in *ExitBroRoomReq, opts ...map[string]string) (*ExitBroRoomResp, error)
	//
	// 直播间踢人
	KickUser(ctx context.Context, in *KickUserReq, opts ...map[string]string) (*KickUserResp, error)
	//
	// 直播间禁麦和开麦
	MikeOperation(ctx context.Context, in *MikeOperationReq, opts ...map[string]string) (*MikeOperationResp, error)
	//
	// 更改直播间连线状态
	ChangeBroRoomLinkStatus(ctx context.Context, in *ChangeBroRoomLinkStatusReq, opts ...map[string]string) (*ChangeBroRoomLinkStatusResp, error)
	//
	// 是否开启自动连麦
	ChangeBroRoomAutoToMikeStatus(ctx context.Context, in *ChangeBroRoomAutoToMikeStatusReq, opts ...map[string]string) (*ChangeBroRoomAutoToMikeStatusResp, error)
	//
	// 右下角点击,客户端聚合请求
	BroRoomPraise(ctx context.Context, in *BroRoomPraiseReq, opts ...map[string]string) (*BroRoomPraiseResp, error)
	// 主播获取申请连线用户
	GetBroRoomPreparedAudience(ctx context.Context, in *GetBroRoomPreparedAudienceReq, opts ...map[string]string) (*GetBroRoomPreparedAudienceResp, error)
	// 主持人设置台上嘉宾静音
	MuteUser(ctx context.Context, in *MuteUserReq, opts ...map[string]string) (*MuteUserResp, error)
	// 被静音的用户给服务器报结果
	MuteResult(ctx context.Context, in *MuteResultReq, opts ...map[string]string) (*MuteResultResp, error)
	// 主持人设置禁止公屏发言
	ForbiddenUser(ctx context.Context, in *ForbiddenUserReq, opts ...map[string]string) (*ForbiddenUserResp, error)
	// 发送公屏消息
	SendRoomMessage(ctx context.Context, in *SendRoomMessageReq, opts ...map[string]string) (*SendRoomMessageResp, error)
	// 客户端主动获取房间全量信息
	GetAllRoomInfo(ctx context.Context, in *GetAllRoomInfoReq, opts ...map[string]string) (*GetAllRoomInfoResp, error)
	// 客户端切换模板   BaseRoomInfo.ROOMTYPE
	ChangeBroRoomType(ctx context.Context, in *ChangeBroRoomTypeReq, opts ...map[string]string) (*ChangeBroRoomTypeResp, error)
	// 客户端请求分页列表信息
	GetBroRoomUsersByPage(ctx context.Context, in *GetBroRoomUsersByPageReq, opts ...map[string]string) (*GetBroRoomUsersByPageResp, error)
	// 客户端主动拉取特权信息
	GetRoomPrivilegeInfo(ctx context.Context, in *RoomPrivilegeInfoReq, opts ...map[string]string) (*RoomPrivilegeInfoResp, error)
	// 运营后台通知禁止某个直播间
	ForbiddenRoom(ctx context.Context, in *ForbiddenRoomReq, opts ...map[string]string) (*ForbiddenRoomResp, error)
	// 主持人开启/关闭K歌功能
	KaraokeOperation(ctx context.Context, in *KaraokeOperationReq, opts ...map[string]string) (*KaraokeOperationResp, error)
	// 主持人或者嘉宾点歌
	KaraokeAddSong(ctx context.Context, in *KaraokeAddSongReq, opts ...map[string]string) (*KaraokeAddSongResp, error)
	// 主持人开始播放歌曲
	KaraokeStartSing(ctx context.Context, in *KaraokeStartSingReq, opts ...map[string]string) (*KaraokeStartSingResp, error)
	// 主持人对某个歌曲置顶
	KaraokeSongSetTop(ctx context.Context, in *KaraokeSongSetTopReq, opts ...map[string]string) (*KaraokeSongSetTopResp, error)
	// 主持人或者嘉宾删除歌曲
	KaraokeDelSong(ctx context.Context, in *KaraokeDelSongReq, opts ...map[string]string) (*KaraokeDelSongResp, error)
	// 主持人或者嘉宾暂停歌曲
	KaraokePauseSong(ctx context.Context, in *KaraokePauseSongReq, opts ...map[string]string) (*KaraokePauseSongResp, error)
	// 主持人或者嘉宾结束歌曲
	KaraokeTerminateSong(ctx context.Context, in *KaraokeTerminateSongReq, opts ...map[string]string) (*KaraokeTerminateSongResp, error)
	// 主持人清空排麦列表 只有关闭自动连麦时才能清空
	ClearRoomPreparedAudience(ctx context.Context, in *ClearRoomPreparedAudienceReq, opts ...map[string]string) (*ClearRoomPreparedAudienceResp, error)
	// 房间锁定/解锁
	LockUnlockRoomOperation(ctx context.Context, in *LockUnlockRoomOperationReq, opts ...map[string]string) (*LockUnlockRoomOperationResp, error)
}

type bCServantClient struct {
	s model.Servant
}

func NewBCServantClient(objname string, comm servant.ICommunicator) BCServantClient {
	if comm == nil || objname == "" {
		return nil
	}
	return &bCServantClient{s: comm.GetServantProxy(objname)}
}

func (c *bCServantClient) EnterBroRoom(ctx context.Context, in *EnterBroRoomReq, opts ...map[string]string) (*EnterBroRoomResp, error) {
	var (
		reply EnterBroRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "EnterBroRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) ConnMediaResult(ctx context.Context, in *ConnMediaResultReq, opts ...map[string]string) (*ConnMediaResultResp, error) {
	var (
		reply ConnMediaResultResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "ConnMediaResult", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) PingBroRoom(ctx context.Context, in *PingBroRoomReq, opts ...map[string]string) (*PingBroRoomResp, error) {
	var (
		reply PingBroRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "PingBroRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) AudienceLinkOperation(ctx context.Context, in *AudienceLinkOperationReq, opts ...map[string]string) (*AudienceLinkOperationResp, error) {
	var (
		reply AudienceLinkOperationResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "AudienceLinkOperation", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) ExitBroRoom(ctx context.Context, in *ExitBroRoomReq, opts ...map[string]string) (*ExitBroRoomResp, error) {
	var (
		reply ExitBroRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "ExitBroRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) KickUser(ctx context.Context, in *KickUserReq, opts ...map[string]string) (*KickUserResp, error) {
	var (
		reply KickUserResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "KickUser", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) MikeOperation(ctx context.Context, in *MikeOperationReq, opts ...map[string]string) (*MikeOperationResp, error) {
	var (
		reply MikeOperationResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "MikeOperation", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) ChangeBroRoomLinkStatus(ctx context.Context, in *ChangeBroRoomLinkStatusReq, opts ...map[string]string) (*ChangeBroRoomLinkStatusResp, error) {
	var (
		reply ChangeBroRoomLinkStatusResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "ChangeBroRoomLinkStatus", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) ChangeBroRoomAutoToMikeStatus(ctx context.Context, in *ChangeBroRoomAutoToMikeStatusReq, opts ...map[string]string) (*ChangeBroRoomAutoToMikeStatusResp, error) {
	var (
		reply ChangeBroRoomAutoToMikeStatusResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "ChangeBroRoomAutoToMikeStatus", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) BroRoomPraise(ctx context.Context, in *BroRoomPraiseReq, opts ...map[string]string) (*BroRoomPraiseResp, error) {
	var (
		reply BroRoomPraiseResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "BroRoomPraise", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) GetBroRoomPreparedAudience(ctx context.Context, in *GetBroRoomPreparedAudienceReq, opts ...map[string]string) (*GetBroRoomPreparedAudienceResp, error) {
	var (
		reply GetBroRoomPreparedAudienceResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetBroRoomPreparedAudience", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) MuteUser(ctx context.Context, in *MuteUserReq, opts ...map[string]string) (*MuteUserResp, error) {
	var (
		reply MuteUserResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "MuteUser", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) MuteResult(ctx context.Context, in *MuteResultReq, opts ...map[string]string) (*MuteResultResp, error) {
	var (
		reply MuteResultResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "MuteResult", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) ForbiddenUser(ctx context.Context, in *ForbiddenUserReq, opts ...map[string]string) (*ForbiddenUserResp, error) {
	var (
		reply ForbiddenUserResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "ForbiddenUser", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) SendRoomMessage(ctx context.Context, in *SendRoomMessageReq, opts ...map[string]string) (*SendRoomMessageResp, error) {
	var (
		reply SendRoomMessageResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "SendRoomMessage", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) GetAllRoomInfo(ctx context.Context, in *GetAllRoomInfoReq, opts ...map[string]string) (*GetAllRoomInfoResp, error) {
	var (
		reply GetAllRoomInfoResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetAllRoomInfo", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) ChangeBroRoomType(ctx context.Context, in *ChangeBroRoomTypeReq, opts ...map[string]string) (*ChangeBroRoomTypeResp, error) {
	var (
		reply ChangeBroRoomTypeResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "ChangeBroRoomType", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) GetBroRoomUsersByPage(ctx context.Context, in *GetBroRoomUsersByPageReq, opts ...map[string]string) (*GetBroRoomUsersByPageResp, error) {
	var (
		reply GetBroRoomUsersByPageResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetBroRoomUsersByPage", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) GetRoomPrivilegeInfo(ctx context.Context, in *RoomPrivilegeInfoReq, opts ...map[string]string) (*RoomPrivilegeInfoResp, error) {
	var (
		reply RoomPrivilegeInfoResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetRoomPrivilegeInfo", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) ForbiddenRoom(ctx context.Context, in *ForbiddenRoomReq, opts ...map[string]string) (*ForbiddenRoomResp, error) {
	var (
		reply ForbiddenRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "ForbiddenRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) KaraokeOperation(ctx context.Context, in *KaraokeOperationReq, opts ...map[string]string) (*KaraokeOperationResp, error) {
	var (
		reply KaraokeOperationResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "KaraokeOperation", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) KaraokeAddSong(ctx context.Context, in *KaraokeAddSongReq, opts ...map[string]string) (*KaraokeAddSongResp, error) {
	var (
		reply KaraokeAddSongResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "KaraokeAddSong", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) KaraokeStartSing(ctx context.Context, in *KaraokeStartSingReq, opts ...map[string]string) (*KaraokeStartSingResp, error) {
	var (
		reply KaraokeStartSingResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "KaraokeStartSing", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) KaraokeSongSetTop(ctx context.Context, in *KaraokeSongSetTopReq, opts ...map[string]string) (*KaraokeSongSetTopResp, error) {
	var (
		reply KaraokeSongSetTopResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "KaraokeSongSetTop", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) KaraokeDelSong(ctx context.Context, in *KaraokeDelSongReq, opts ...map[string]string) (*KaraokeDelSongResp, error) {
	var (
		reply KaraokeDelSongResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "KaraokeDelSong", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) KaraokePauseSong(ctx context.Context, in *KaraokePauseSongReq, opts ...map[string]string) (*KaraokePauseSongResp, error) {
	var (
		reply KaraokePauseSongResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "KaraokePauseSong", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) KaraokeTerminateSong(ctx context.Context, in *KaraokeTerminateSongReq, opts ...map[string]string) (*KaraokeTerminateSongResp, error) {
	var (
		reply KaraokeTerminateSongResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "KaraokeTerminateSong", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) ClearRoomPreparedAudience(ctx context.Context, in *ClearRoomPreparedAudienceReq, opts ...map[string]string) (*ClearRoomPreparedAudienceResp, error) {
	var (
		reply ClearRoomPreparedAudienceResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "ClearRoomPreparedAudience", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bCServantClient) LockUnlockRoomOperation(ctx context.Context, in *LockUnlockRoomOperationReq, opts ...map[string]string) (*LockUnlockRoomOperationResp, error) {
	var (
		reply LockUnlockRoomOperationResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "LockUnlockRoomOperation", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}

// Server API for BCServant service

type BCServantServer interface {
	//
	// 进入直播间请求
	EnterBroRoom(context.Context, *EnterBroRoomReq) (*EnterBroRoomResp, error)
	//
	// 客户端连接媒体结果通知
	ConnMediaResult(context.Context, *ConnMediaResultReq) (*ConnMediaResultResp, error)
	//
	// 直播间PING请求
	PingBroRoom(context.Context, *PingBroRoomReq) (*PingBroRoomResp, error)
	//
	// 观众请求麦位、取消麦位
	AudienceLinkOperation(context.Context, *AudienceLinkOperationReq) (*AudienceLinkOperationResp, error)
	//
	// 用户离开直播间通知
	ExitBroRoom(context.Context, *ExitBroRoomReq) (*ExitBroRoomResp, error)
	//
	// 直播间踢人
	KickUser(context.Context, *KickUserReq) (*KickUserResp, error)
	//
	// 直播间禁麦和开麦
	MikeOperation(context.Context, *MikeOperationReq) (*MikeOperationResp, error)
	//
	// 更改直播间连线状态
	ChangeBroRoomLinkStatus(context.Context, *ChangeBroRoomLinkStatusReq) (*ChangeBroRoomLinkStatusResp, error)
	//
	// 是否开启自动连麦
	ChangeBroRoomAutoToMikeStatus(context.Context, *ChangeBroRoomAutoToMikeStatusReq) (*ChangeBroRoomAutoToMikeStatusResp, error)
	//
	// 右下角点击,客户端聚合请求
	BroRoomPraise(context.Context, *BroRoomPraiseReq) (*BroRoomPraiseResp, error)
	// 主播获取申请连线用户
	GetBroRoomPreparedAudience(context.Context, *GetBroRoomPreparedAudienceReq) (*GetBroRoomPreparedAudienceResp, error)
	// 主持人设置台上嘉宾静音
	MuteUser(context.Context, *MuteUserReq) (*MuteUserResp, error)
	// 被静音的用户给服务器报结果
	MuteResult(context.Context, *MuteResultReq) (*MuteResultResp, error)
	// 主持人设置禁止公屏发言
	ForbiddenUser(context.Context, *ForbiddenUserReq) (*ForbiddenUserResp, error)
	// 发送公屏消息
	SendRoomMessage(context.Context, *SendRoomMessageReq) (*SendRoomMessageResp, error)
	// 客户端主动获取房间全量信息
	GetAllRoomInfo(context.Context, *GetAllRoomInfoReq) (*GetAllRoomInfoResp, error)
	// 客户端切换模板   BaseRoomInfo.ROOMTYPE
	ChangeBroRoomType(context.Context, *ChangeBroRoomTypeReq) (*ChangeBroRoomTypeResp, error)
	// 客户端请求分页列表信息
	GetBroRoomUsersByPage(context.Context, *GetBroRoomUsersByPageReq) (*GetBroRoomUsersByPageResp, error)
	// 客户端主动拉取特权信息
	GetRoomPrivilegeInfo(context.Context, *RoomPrivilegeInfoReq) (*RoomPrivilegeInfoResp, error)
	// 运营后台通知禁止某个直播间
	ForbiddenRoom(context.Context, *ForbiddenRoomReq) (*ForbiddenRoomResp, error)
	// 主持人开启/关闭K歌功能
	KaraokeOperation(context.Context, *KaraokeOperationReq) (*KaraokeOperationResp, error)
	// 主持人或者嘉宾点歌
	KaraokeAddSong(context.Context, *KaraokeAddSongReq) (*KaraokeAddSongResp, error)
	// 主持人开始播放歌曲
	KaraokeStartSing(context.Context, *KaraokeStartSingReq) (*KaraokeStartSingResp, error)
	// 主持人对某个歌曲置顶
	KaraokeSongSetTop(context.Context, *KaraokeSongSetTopReq) (*KaraokeSongSetTopResp, error)
	// 主持人或者嘉宾删除歌曲
	KaraokeDelSong(context.Context, *KaraokeDelSongReq) (*KaraokeDelSongResp, error)
	// 主持人或者嘉宾暂停歌曲
	KaraokePauseSong(context.Context, *KaraokePauseSongReq) (*KaraokePauseSongResp, error)
	// 主持人或者嘉宾结束歌曲
	KaraokeTerminateSong(context.Context, *KaraokeTerminateSongReq) (*KaraokeTerminateSongResp, error)
	// 主持人清空排麦列表 只有关闭自动连麦时才能清空
	ClearRoomPreparedAudience(context.Context, *ClearRoomPreparedAudienceReq) (*ClearRoomPreparedAudienceResp, error)
	// 房间锁定/解锁
	LockUnlockRoomOperation(context.Context, *LockUnlockRoomOperationReq) (*LockUnlockRoomOperationResp, error)
}

type bCServantDispatcher struct {
}

func NewBCServantDispatcher() servant.Dispatcher {
	return &bCServantDispatcher{}
}

func (_obj *bCServantDispatcher) Dispatch(ctx context.Context, _val interface{}, req *taf.RequestPacket) (*taf.ResponsePacket, error) {
	var pbbuf []byte
	_imp := _val.(BCServantServer)
	switch req.SFuncName {
	case "EnterBroRoom":
		var req_ EnterBroRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.EnterBroRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "ConnMediaResult":
		var req_ ConnMediaResultReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.ConnMediaResult(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "PingBroRoom":
		var req_ PingBroRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.PingBroRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "AudienceLinkOperation":
		var req_ AudienceLinkOperationReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.AudienceLinkOperation(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "ExitBroRoom":
		var req_ ExitBroRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.ExitBroRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "KickUser":
		var req_ KickUserReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.KickUser(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "MikeOperation":
		var req_ MikeOperationReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.MikeOperation(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "ChangeBroRoomLinkStatus":
		var req_ ChangeBroRoomLinkStatusReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.ChangeBroRoomLinkStatus(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "ChangeBroRoomAutoToMikeStatus":
		var req_ ChangeBroRoomAutoToMikeStatusReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.ChangeBroRoomAutoToMikeStatus(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "BroRoomPraise":
		var req_ BroRoomPraiseReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.BroRoomPraise(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetBroRoomPreparedAudience":
		var req_ GetBroRoomPreparedAudienceReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetBroRoomPreparedAudience(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "MuteUser":
		var req_ MuteUserReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.MuteUser(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "MuteResult":
		var req_ MuteResultReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.MuteResult(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "ForbiddenUser":
		var req_ ForbiddenUserReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.ForbiddenUser(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "SendRoomMessage":
		var req_ SendRoomMessageReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.SendRoomMessage(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetAllRoomInfo":
		var req_ GetAllRoomInfoReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetAllRoomInfo(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "ChangeBroRoomType":
		var req_ ChangeBroRoomTypeReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.ChangeBroRoomType(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetBroRoomUsersByPage":
		var req_ GetBroRoomUsersByPageReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetBroRoomUsersByPage(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetRoomPrivilegeInfo":
		var req_ RoomPrivilegeInfoReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetRoomPrivilegeInfo(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "ForbiddenRoom":
		var req_ ForbiddenRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.ForbiddenRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "KaraokeOperation":
		var req_ KaraokeOperationReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.KaraokeOperation(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "KaraokeAddSong":
		var req_ KaraokeAddSongReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.KaraokeAddSong(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "KaraokeStartSing":
		var req_ KaraokeStartSingReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.KaraokeStartSing(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "KaraokeSongSetTop":
		var req_ KaraokeSongSetTopReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.KaraokeSongSetTop(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "KaraokeDelSong":
		var req_ KaraokeDelSongReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.KaraokeDelSong(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "KaraokePauseSong":
		var req_ KaraokePauseSongReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.KaraokePauseSong(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "KaraokeTerminateSong":
		var req_ KaraokeTerminateSongReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.KaraokeTerminateSong(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "ClearRoomPreparedAudience":
		var req_ ClearRoomPreparedAudienceReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.ClearRoomPreparedAudience(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "LockUnlockRoomOperation":
		var req_ LockUnlockRoomOperationReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.LockUnlockRoomOperation(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	default:
		return nil, errors.New("unknow func")
	}
	return &taf.ResponsePacket{
		IVersion:   1,
		IRequestId: req.IRequestId,
		SBuffer:    pbbuf,
		Context:    req.Context,
	}, nil
}

func init() { proto.RegisterFile("bcserver.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1871 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0x5b, 0x6f, 0xdb, 0xc8,
	0x15, 0x5e, 0xda, 0xae, 0x2f, 0x47, 0x96, 0x2c, 0xcf, 0xda, 0xbb, 0x0a, 0x37, 0x56, 0x64, 0x66,
	0xb7, 0xd5, 0xb6, 0x8d, 0xda, 0x38, 0x0d, 0x1a, 0x04, 0x68, 0x0b, 0x59, 0x96, 0x1d, 0x55, 0xd6,
	0x25, 0xa4, 0x84, 0xb4, 0x09, 0x0a, 0x84, 0x96, 0xc6, 0x32, 0x21, 0x89, 0xc3, 0x90, 0x94, 0x2f,
	0x28, 0xd0, 0x97, 0x16, 0x7d, 0xe9, 0x53, 0xfe, 0x47, 0xff, 0x45, 0xdf, 0xfa, 0x33, 0xfa, 0xd2,
	0xfe, 0x8c, 0x62, 0x78, 0x11, 0x2f, 0x43, 0x4a, 0x26, 0x13, 0xec, 0x1b, 0x67, 0x78, 0x6e, 0x73,
	0xce, 0xd1, 0x99, 0xef, 0x1c, 0x0a, 0x72, 0x17, 0x03, 0x03, 0xeb, 0xd7, 0x58, 0xaf, 0x68, 0x3a,
	0x31, 0x09, 0xca, 0x5d, 0x28, 0x13, 0x45, 0xad, 0xb8, 0xbb, 0xfc, 0xf6, 0x15, 0x96, 0x87, 0xee,
	0x5b, 0x1e, 0xb4, 0x99, 0x71, 0x65, 0x3f, 0x0b, 0x37, 0xb0, 0x53, 0x57, 0x4d, 0xac, 0x1f, 0xeb,
	0x44, 0x24, 0x64, 0x2a, 0xe2, 0x0f, 0xe8, 0x3b, 0x58, 0xb7, 0xc9, 0x0b, 0x5c, 0x89, 0x2b, 0x67,
	0x8e, 0xb2, 0x15, 0x5b, 0xda, 0x2b, 0x6b, 0x53, 0x74, 0x5e, 0xa2, 0x02, 0x6c, 0xe8, 0x84, 0x4c,
	0xb5, 0x9b, 0x61, 0x61, 0xa5, 0xc4, 0x95, 0xb7, 0x44, 0x77, 0x89, 0x1e, 0xc3, 0xda, 0xa5, 0x4e,
	0xa6, 0x85, 0xd5, 0x12, 0x57, 0xce, 0x1d, 0xed, 0x38, 0xec, 0x7d, 0xa9, 0x2e, 0x9e, 0x8a, 0x9d,
	0x96, 0x68, 0xbd, 0x14, 0xfe, 0xc3, 0x41, 0x3e, 0xa8, 0xd9, 0xd0, 0xd0, 0x11, 0x6c, 0x0d, 0xc8,
	0x74, 0x4a, 0x54, 0x1d, 0x9b, 0x8e, 0xf6, 0x3d, 0x87, 0xbd, 0x66, 0xed, 0x8b, 0xd8, 0x6c, 0xa8,
	0x97, 0x44, 0xf4, 0xc8, 0xd0, 0xaf, 0x20, 0x23, 0x4f, 0x26, 0x54, 0xb7, 0xa2, 0x5e, 0x12, 0xcb,
	0x96, 0xcc, 0x11, 0x72, 0xb8, 0xaa, 0x93, 0x09, 0x15, 0x6e, 0xf1, 0xf8, 0xc9, 0x50, 0x11, 0x60,
	0x8a, 0x87, 0x8a, 0x6c, 0x92, 0x31, 0x56, 0x2d, 0x4b, 0xb7, 0x44, 0xdf, 0x0e, 0x3a, 0x81, 0xac,
	0xa6, 0x2b, 0xd7, 0xca, 0x04, 0x8f, 0xb0, 0x25, 0x77, 0xcd, 0x92, 0x5b, 0x74, 0x0f, 0x63, 0x60,
	0xbd, 0xeb, 0xbe, 0xa7, 0xd2, 0x1b, 0xaa, 0x75, 0x88, 0x20, 0x93, 0xf0, 0x12, 0x76, 0xcf, 0xb0,
	0xe9, 0x37, 0xe2, 0xde, 0xfe, 0x15, 0xfe, 0x02, 0x28, 0xcc, 0xfb, 0x43, 0x7a, 0x48, 0xb8, 0x81,
	0xbd, 0xda, 0x95, 0xac, 0x8e, 0xb0, 0x13, 0xa0, 0xde, 0x9d, 0x86, 0x13, 0xa4, 0xc7, 0x0b, 0xd8,
	0xa4, 0xa2, 0xcc, 0x3b, 0x0d, 0x5b, 0x1a, 0x73, 0x47, 0x0f, 0x1d, 0xc2, 0x63, 0xd9, 0xc0, 0xae,
	0xca, 0x8a, 0xd8, 0xe9, 0xb4, 0x7a, 0x7f, 0xec, 0xd6, 0xc5, 0x39, 0xb5, 0xd0, 0x84, 0xfd, 0x08,
	0xc5, 0xe9, 0xce, 0x2e, 0xc8, 0x50, 0x38, 0xc3, 0xa6, 0x23, 0x89, 0x46, 0xcd, 0x38, 0xbe, 0xeb,
	0xca, 0xa3, 0x24, 0x27, 0x29, 0x02, 0x68, 0xf2, 0x08, 0xab, 0xb3, 0xe9, 0x05, 0xd6, 0xad, 0x54,
	0xc9, 0x8a, 0xbe, 0x1d, 0xe1, 0xef, 0x1c, 0x3c, 0x88, 0xd1, 0x91, 0x32, 0x60, 0xcf, 0x21, 0x2b,
	0xcf, 0x86, 0x0a, 0x56, 0x07, 0x78, 0x46, 0xc5, 0x15, 0x56, 0x4a, 0xab, 0xe5, 0x8c, 0xf7, 0x4b,
	0x32, 0xb0, 0x6e, 0xb1, 0x04, 0xa9, 0x84, 0x7f, 0x71, 0x80, 0x6a, 0x44, 0x55, 0x5b, 0x34, 0x8d,
	0x45, 0x6c, 0xcc, 0x26, 0x66, 0x82, 0x63, 0xbe, 0x83, 0x9d, 0x01, 0x51, 0x55, 0xeb, 0x37, 0xa0,
	0x5b, 0xcc, 0x4e, 0xdc, 0x9e, 0x56, 0x82, 0xd5, 0xa4, 0xc2, 0xea, 0xa8, 0xd4, 0x3a, 0xed, 0x56,
	0xfd, 0xa4, 0x51, 0x15, 0xeb, 0x52, 0xff, 0xbc, 0x27, 0x86, 0x25, 0x09, 0xdf, 0x43, 0x2e, 0x48,
	0x82, 0x32, 0xb0, 0x21, 0xf5, 0x6b, 0xb5, 0xba, 0x24, 0xe5, 0xbf, 0x40, 0x00, 0xeb, 0xa7, 0xd5,
	0xc6, 0x79, 0xfd, 0x24, 0xcf, 0x09, 0x0d, 0xf8, 0x92, 0x51, 0x90, 0x32, 0xf8, 0xbf, 0x86, 0x5c,
	0x57, 0x51, 0x47, 0x89, 0x6b, 0x9b, 0x50, 0x87, 0x9d, 0x00, 0x63, 0x4a, 0xfd, 0xff, 0xe6, 0xa0,
	0x50, 0x75, 0x42, 0x74, 0xae, 0xa8, 0xe3, 0x8e, 0x86, 0x75, 0xd9, 0x54, 0x28, 0xed, 0xbd, 0xc3,
	0x72, 0x06, 0xeb, 0x13, 0x45, 0x1d, 0x13, 0xcd, 0x89, 0xc6, 0x2f, 0xc2, 0xd1, 0x88, 0x53, 0x50,
	0x39, 0x6f, 0xb4, 0x9b, 0x9d, 0xae, 0xe8, 0xb0, 0x5b, 0x15, 0x4f, 0x19, 0x8c, 0x83, 0x69, 0xec,
	0xed, 0x08, 0x45, 0x58, 0xb7, 0x39, 0xd0, 0x26, 0xac, 0xd1, 0x27, 0x3b, 0x2e, 0xfd, 0xb6, 0xf5,
	0xcc, 0x09, 0x1d, 0x78, 0x10, 0xa3, 0x2a, 0x7d, 0x74, 0xea, 0xb7, 0x8a, 0x99, 0x2a, 0x3a, 0x01,
	0xc6, 0x94, 0xfa, 0xff, 0x00, 0x99, 0xa6, 0x32, 0x18, 0xd3, 0x5f, 0x53, 0x82, 0x78, 0x08, 0xb0,
	0x3d, 0x56, 0x06, 0x63, 0x3c, 0xa4, 0xbf, 0x39, 0xc5, 0xbe, 0xfb, 0xd6, 0xc4, 0xc0, 0x9e, 0x70,
	0x0c, 0xdb, 0x9e, 0xe4, 0x94, 0xd6, 0xcd, 0x20, 0x7f, 0x4a, 0xf4, 0x0b, 0x65, 0x38, 0xc4, 0x6a,
	0x42, 0x13, 0xcb, 0xb0, 0x73, 0xe9, 0xb2, 0x06, 0xac, 0x0c, 0x6f, 0xa3, 0x3c, 0xac, 0x12, 0xcd,
	0xb4, 0x92, 0x61, 0x53, 0xa4, 0x8f, 0xc2, 0x19, 0xec, 0x86, 0xd4, 0xa6, 0xb4, 0xff, 0x23, 0xe7,
	0x3b, 0x40, 0x42, 0x68, 0xf1, 0x63, 0xc8, 0x5d, 0x11, 0xc3, 0x54, 0x89, 0xa9, 0x5c, 0xde, 0x99,
	0xf8, 0xd6, 0x74, 0x10, 0x46, 0x68, 0x17, 0x55, 0x00, 0xb9, 0x15, 0xd0, 0x47, 0x6b, 0x5f, 0xe6,
	0x11, 0x6f, 0x02, 0x87, 0xfb, 0xa4, 0xd4, 0xf9, 0x0d, 0xec, 0x51, 0xfe, 0x00, 0x02, 0x48, 0x90,
	0xc0, 0x1f, 0x39, 0xd8, 0x8f, 0xe0, 0x4f, 0x79, 0x5b, 0x30, 0x50, 0x65, 0x25, 0x0d, 0x54, 0xf9,
	0x27, 0x07, 0x99, 0xd6, 0xcc, 0xc4, 0x09, 0x73, 0x8d, 0x56, 0x95, 0x99, 0x89, 0x03, 0x69, 0xe6,
	0xdb, 0x41, 0xcf, 0xbd, 0x0c, 0xcb, 0x1d, 0x3d, 0x0e, 0xd7, 0x2e, 0x9f, 0xc2, 0x4a, 0xab, 0xdf,
	0xab, 0x77, 0xba, 0x3d, 0x3b, 0x0d, 0x1f, 0xc1, 0x86, 0xb3, 0xa6, 0x35, 0xa8, 0xdd, 0xa1, 0x8b,
	0xfc, 0x17, 0xb4, 0x32, 0x59, 0x4f, 0x1c, 0xfd, 0x89, 0x79, 0xcc, 0x29, 0xa3, 0x38, 0x85, 0x2c,
	0x95, 0x91, 0xf8, 0xa6, 0x74, 0xce, 0xb4, 0x92, 0xf0, 0x4c, 0x27, 0x90, 0xf3, 0xab, 0x4b, 0x69,
	0xf4, 0xff, 0x38, 0xc8, 0xb7, 0x94, 0x31, 0x4e, 0x73, 0x97, 0x7c, 0x05, 0xeb, 0x81, 0x40, 0x39,
	0x2b, 0xf4, 0xd2, 0x1f, 0xa4, 0x32, 0x73, 0xa0, 0x90, 0xb6, 0x4a, 0xab, 0xd1, 0x9c, 0x9f, 0x8a,
	0xb6, 0x01, 0x53, 0x65, 0x8c, 0x95, 0xe1, 0xad, 0x05, 0x91, 0xb3, 0xa2, 0xbb, 0x14, 0x7e, 0x07,
	0x1b, 0x0e, 0xa5, 0x7d, 0x8f, 0xd0, 0x85, 0x7d, 0xa7, 0x74, 0xec, 0x67, 0x0e, 0x6d, 0xc3, 0xe6,
	0x79, 0xa7, 0xd6, 0xb4, 0x56, 0xab, 0x28, 0x07, 0xd0, 0x6f, 0xcf, 0xd7, 0x6b, 0xf4, 0xe7, 0x1a,
	0xd2, 0x9d, 0xd2, 0x67, 0x7f, 0xe5, 0x80, 0x0f, 0x40, 0x4a, 0x7a, 0x81, 0x49, 0xa6, 0x6c, 0xce,
	0x8c, 0x04, 0xde, 0xfb, 0x2d, 0x00, 0xbd, 0x4a, 0x0d, 0x8b, 0xcf, 0x89, 0x7e, 0x31, 0x0a, 0xd3,
	0xd2, 0x0b, 0x53, 0xea, 0x55, 0x7b, 0x7d, 0x49, 0xf4, 0x71, 0x08, 0xaf, 0xe1, 0x9b, 0x58, 0x23,
	0xd2, 0x1f, 0xac, 0x14, 0x90, 0x59, 0x9d, 0x99, 0xa4, 0x47, 0xa8, 0xd7, 0x12, 0x1f, 0xef, 0x05,
	0x6c, 0xca, 0x33, 0x93, 0x50, 0x83, 0x17, 0x01, 0xf6, 0x6a, 0xbf, 0xd7, 0xa1, 0x07, 0x14, 0xe7,
	0xd4, 0xc2, 0x1b, 0x38, 0x5c, 0x62, 0x44, 0xca, 0xe3, 0xbd, 0x83, 0xbc, 0x23, 0xb2, 0xab, 0xcb,
	0x8a, 0x91, 0x04, 0xb4, 0x97, 0x20, 0x63, 0xf3, 0xd4, 0xc8, 0x4c, 0xb5, 0x7f, 0xab, 0x59, 0xd1,
	0xbf, 0x45, 0xb3, 0x2b, 0x24, 0x3c, 0xa5, 0x95, 0xa7, 0x70, 0xe0, 0xc1, 0xff, 0xae, 0x8e, 0x35,
	0x59, 0xc7, 0x43, 0x17, 0x2a, 0x25, 0xb8, 0x15, 0xfe, 0xc1, 0x41, 0x71, 0x91, 0xa0, 0xf4, 0xcd,
	0x84, 0xe6, 0xc8, 0x5a, 0xdc, 0x4c, 0x04, 0xa8, 0x84, 0x0e, 0x20, 0x09, 0xab, 0x43, 0x6a, 0x4a,
	0x0b, 0x1b, 0x46, 0xb2, 0x96, 0x09, 0xc1, 0xda, 0x50, 0x36, 0x65, 0xcb, 0xed, 0xdb, 0xa2, 0xf5,
	0x4c, 0x71, 0x3d, 0x23, 0x30, 0xa5, 0xc7, 0x3f, 0xc0, 0x97, 0x4d, 0x59, 0x97, 0x49, 0xba, 0x2a,
	0xf8, 0xcc, 0x5f, 0xbe, 0x0f, 0xa3, 0x72, 0xbc, 0x59, 0x15, 0xab, 0x9d, 0x66, 0x5d, 0x7a, 0xd3,
	0xe8, 0xd5, 0x5e, 0xd9, 0xc5, 0xfb, 0xf7, 0xb0, 0xc7, 0xaa, 0x4c, 0x69, 0xfe, 0x35, 0xec, 0x3a,
	0xb2, 0xaa, 0xc3, 0xa1, 0x44, 0xd4, 0x51, 0x02, 0xe3, 0x79, 0xd8, 0x34, 0x88, 0x3a, 0x6a, 0xcb,
	0x53, 0xec, 0x80, 0xa2, 0xf9, 0x9a, 0xde, 0xc5, 0x3a, 0x36, 0xc8, 0x4c, 0x1f, 0x60, 0x65, 0xe8,
	0xce, 0x34, 0xbc, 0x1d, 0xe1, 0x15, 0xa0, 0xb0, 0xde, 0x94, 0x27, 0xe8, 0xcd, 0x03, 0x20, 0x99,
	0xb2, 0x6e, 0x4a, 0x4a, 0xa2, 0x33, 0x7c, 0x05, 0xeb, 0xd4, 0x66, 0xc5, 0x1d, 0x1c, 0x39, 0x2b,
	0x9f, 0x8f, 0x7d, 0x52, 0x53, 0x5a, 0xd8, 0xf7, 0x64, 0x11, 0x75, 0x24, 0x61, 0xb3, 0x47, 0xb4,
	0xcf, 0x60, 0x62, 0x13, 0xf6, 0x23, 0xc4, 0xa6, 0xb4, 0x51, 0x9c, 0xe7, 0xc1, 0x09, 0x9e, 0x24,
	0xcc, 0x83, 0x38, 0x03, 0xbd, 0x18, 0xcf, 0x65, 0x7e, 0x72, 0x8c, 0xbb, 0xf2, 0xcc, 0xc0, 0x9f,
	0xc9, 0x3e, 0x2f, 0xc6, 0x3e, 0xa9, 0x29, 0x2d, 0x9c, 0xc0, 0xd7, 0x8e, 0xac, 0x1e, 0xd6, 0xa7,
	0x8a, 0x2a, 0x9b, 0x9f, 0xc9, 0x4a, 0x5a, 0xbf, 0x2e, 0x27, 0xf2, 0xc8, 0xe9, 0x92, 0xad, 0x67,
	0xa1, 0x0d, 0x85, 0x68, 0x6d, 0x29, 0xad, 0xaf, 0xc3, 0xc3, 0xda, 0x04, 0xcb, 0xfa, 0x27, 0xde,
	0x1a, 0x12, 0x1c, 0x2c, 0x10, 0x93, 0xd2, 0xb6, 0x11, 0xf0, 0xe7, 0x64, 0x30, 0xee, 0xab, 0x13,
	0x32, 0x18, 0x53, 0xc9, 0x69, 0xea, 0x6c, 0xde, 0xab, 0xb3, 0x59, 0x1b, 0x2b, 0xe6, 0x61, 0x55,
	0xbb, 0x71, 0x2b, 0x13, 0x7d, 0xa4, 0x98, 0x28, 0x56, 0x51, 0x3a, 0xdb, 0x8f, 0xfe, 0xbb, 0x0f,
	0x5b, 0xc7, 0x35, 0x09, 0xeb, 0xd7, 0xb2, 0x6a, 0xa2, 0xd7, 0xb0, 0xed, 0x9f, 0x32, 0xa3, 0x47,
	0x61, 0x74, 0x1b, 0x9a, 0x7e, 0xf3, 0xa5, 0xc5, 0x04, 0x86, 0x86, 0xde, 0xc2, 0x4e, 0x68, 0x40,
	0x85, 0x84, 0xe5, 0x23, 0x32, 0xfe, 0xf1, 0x52, 0x1a, 0x43, 0x43, 0x6d, 0xc8, 0xf8, 0x06, 0x4f,
	0xa8, 0x18, 0xe6, 0x09, 0x8e, 0xb3, 0xf8, 0x47, 0x0b, 0xdf, 0x1b, 0x1a, 0x9a, 0xc0, 0x7e, 0xe4,
	0xd0, 0x06, 0x95, 0xef, 0x3b, 0x46, 0xe2, 0xbf, 0xbf, 0x27, 0xa5, 0x6d, 0xbd, 0x6f, 0x30, 0xc3,
	0x5a, 0x1f, 0x1c, 0xf7, 0xb0, 0xd6, 0x87, 0xa7, 0x3a, 0x75, 0xd8, 0x74, 0xe7, 0x28, 0xe8, 0x9b,
	0x30, 0xb1, 0x6f, 0x76, 0xc3, 0x3f, 0x8c, 0x7f, 0x69, 0x68, 0xa8, 0x07, 0xd9, 0x40, 0x1f, 0x81,
	0x4a, 0xcb, 0x5a, 0x1c, 0xfe, 0x70, 0x09, 0x85, 0xa1, 0x21, 0x1d, 0xbe, 0x8e, 0x81, 0xf3, 0xe8,
	0xa7, 0x4c, 0xa8, 0x63, 0x9b, 0x0f, 0xfe, 0x67, 0xf7, 0xa6, 0x35, 0x34, 0xf4, 0x37, 0x0e, 0x0e,
	0x16, 0x42, 0x6d, 0xf4, 0xcb, 0x85, 0xe2, 0x22, 0xda, 0x03, 0xfe, 0x69, 0x42, 0x0e, 0xdb, 0xa1,
	0x01, 0xe8, 0xcc, 0x3a, 0x34, 0x0c, 0xdb, 0x59, 0x87, 0xb2, 0xd8, 0xfb, 0xcf, 0xc0, 0xc7, 0xc3,
	0x5f, 0xf4, 0x24, 0x2c, 0x60, 0x21, 0xe6, 0xe6, 0x2b, 0x49, 0xc8, 0xed, 0x54, 0x73, 0x1b, 0x77,
	0x36, 0xd5, 0x7c, 0x2d, 0x3d, 0x9b, 0x6a, 0x81, 0x31, 0x44, 0x13, 0xc0, 0xeb, 0xf1, 0xd1, 0x41,
	0x14, 0xad, 0x57, 0x11, 0x8a, 0x8b, 0x5e, 0xdb, 0x6e, 0x0e, 0xcc, 0xe2, 0x58, 0x37, 0x87, 0x27,
	0x84, 0xac, 0x9b, 0xd9, 0x61, 0xde, 0x5b, 0xd8, 0x09, 0xe1, 0x70, 0xb6, 0x7c, 0xb1, 0xc8, 0x9f,
	0x2d, 0x5f, 0x51, 0x60, 0xfe, 0x0d, 0xe4, 0x82, 0xdf, 0xac, 0xd0, 0x61, 0x44, 0x1c, 0x82, 0xdf,
	0xc3, 0x78, 0x61, 0x19, 0x89, 0xa1, 0xa1, 0xf7, 0xb0, 0xcb, 0x7c, 0x13, 0x42, 0xdf, 0x2e, 0xcc,
	0x5c, 0xe7, 0x7b, 0x15, 0xff, 0xdd, 0x3d, 0xa8, 0xec, 0x4a, 0x19, 0xf9, 0x11, 0x87, 0xad, 0x94,
	0x71, 0xdf, 0x93, 0xd8, 0x4a, 0x19, 0xff, 0x55, 0x68, 0x00, 0x7b, 0x67, 0xd8, 0x64, 0x66, 0x80,
	0xec, 0x91, 0xa2, 0xc6, 0x8c, 0xec, 0x91, 0xa2, 0x87, 0x89, 0xfe, 0xfc, 0xb1, 0x0a, 0x72, 0x7c,
	0xfe, 0xb8, 0x25, 0xf9, 0x70, 0x09, 0x85, 0xa1, 0xa1, 0x3f, 0x41, 0x3e, 0xdc, 0x09, 0x21, 0x26,
	0x39, 0x22, 0xda, 0x33, 0xfe, 0xdb, 0xe5, 0x44, 0x76, 0x0a, 0x05, 0x9b, 0x14, 0x36, 0x85, 0x98,
	0xe6, 0x89, 0x4d, 0xa1, 0x88, 0x3e, 0xc7, 0xb3, 0x7b, 0xde, 0x5d, 0xc4, 0xda, 0xed, 0xef, 0x6a,
	0x62, 0xed, 0x0e, 0x36, 0x29, 0xef, 0xe7, 0x60, 0xde, 0xeb, 0x0c, 0x50, 0x2c, 0xab, 0xbf, 0x27,
	0x61, 0xc3, 0x19, 0xdd, 0x62, 0x78, 0x9e, 0x71, 0xa0, 0x7d, 0xac, 0x67, 0xbc, 0x76, 0x22, 0xd6,
	0x33, 0xfe, 0xee, 0xc0, 0xf3, 0xcc, 0x1c, 0x93, 0xc7, 0x7a, 0xc6, 0xdf, 0x0b, 0xc4, 0x7a, 0x26,
	0x08, 0xed, 0x95, 0x39, 0xe4, 0x0f, 0x00, 0x67, 0xf4, 0x93, 0x18, 0xee, 0x30, 0x98, 0xe7, 0xcb,
	0xf7, 0x23, 0x34, 0x34, 0x74, 0x0b, 0x0f, 0x62, 0xc1, 0x30, 0xfa, 0x39, 0x53, 0x08, 0x16, 0xc0,
	0x6f, 0xfe, 0x49, 0x02, 0x6a, 0x1b, 0x0d, 0xc4, 0x00, 0x59, 0x16, 0x0d, 0xc4, 0x43, 0x6b, 0x16,
	0x0d, 0x2c, 0x40, 0xc7, 0xc7, 0x1b, 0x6f, 0x7f, 0x64, 0x51, 0x5f, 0xac, 0x5b, 0xff, 0xe5, 0x78,
	0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xd4, 0x9a, 0x6e, 0x07, 0x22, 0x00, 0x00,
}
