// Code generated by protoc-gen-tars. DO NOT EDIT.
// source: searchserver.proto

package bilin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"
	"code.yy.com/yytars/goframework/tars/servant"
	"code.yy.com/yytars/goframework/tars/servant/model"
	"code.yy.com/yytars/goframework/jce/taf"
	"errors"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SearchType int32

const (
	SearchType_UNKNOWN   SearchType = 0
	SearchType_USER      SearchType = 1
	SearchType_ROOM      SearchType = 2
	SearchType_SONG      SearchType = 3
	SearchType_USER_ROOM SearchType = -1
)

var SearchType_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "USER",
	2:  "ROOM",
	3:  "SONG",
	-1: "USER_ROOM",
}
var SearchType_value = map[string]int32{
	"UNKNOWN":   0,
	"USER":      1,
	"ROOM":      2,
	"SONG":      3,
	"USER_ROOM": -1,
}

func (x SearchType) String() string {
	return proto.EnumName(SearchType_name, int32(x))
}
func (SearchType) EnumDescriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

type SearchReq struct {
	Q     string     `protobuf:"bytes,1,opt,name=q" json:"q,omitempty"`
	Rows  int32      `protobuf:"varint,2,opt,name=rows" json:"rows,omitempty"`
	Start int32      `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	Typ   SearchType `protobuf:"varint,4,opt,name=typ,enum=bilin.searchserver.SearchType" json:"typ,omitempty"`
	Uid   string     `protobuf:"bytes,5,opt,name=uid" json:"uid,omitempty"`
}

func (m *SearchReq) Reset()                    { *m = SearchReq{} }
func (m *SearchReq) String() string            { return proto.CompactTextString(m) }
func (*SearchReq) ProtoMessage()               {}
func (*SearchReq) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

func (m *SearchReq) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *SearchReq) GetRows() int32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *SearchReq) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *SearchReq) GetTyp() SearchType {
	if m != nil {
		return m.Typ
	}
	return SearchType_UNKNOWN
}

func (m *SearchReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type SearchRsp struct {
	Head *SearchRspHeader              `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
	Data map[string]*SearchRspDataItem `protobuf:"bytes,2,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Cret *CommonRetInfo                `protobuf:"bytes,3,opt,name=cret" json:"cret,omitempty"`
}

func (m *SearchRsp) Reset()                    { *m = SearchRsp{} }
func (m *SearchRsp) String() string            { return proto.CompactTextString(m) }
func (*SearchRsp) ProtoMessage()               {}
func (*SearchRsp) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{1} }

func (m *SearchRsp) GetHead() *SearchRspHeader {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *SearchRsp) GetData() map[string]*SearchRspDataItem {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SearchRsp) GetCret() *CommonRetInfo {
	if m != nil {
		return m.Cret
	}
	return nil
}

type SearchRspHeader struct {
	Status  int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Qtime   int32  `protobuf:"varint,2,opt,name=qtime" json:"qtime,omitempty"`
	ErrDesc string `protobuf:"bytes,3,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
}

func (m *SearchRspHeader) Reset()                    { *m = SearchRspHeader{} }
func (m *SearchRspHeader) String() string            { return proto.CompactTextString(m) }
func (*SearchRspHeader) ProtoMessage()               {}
func (*SearchRspHeader) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{2} }

func (m *SearchRspHeader) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SearchRspHeader) GetQtime() int32 {
	if m != nil {
		return m.Qtime
	}
	return 0
}

func (m *SearchRspHeader) GetErrDesc() string {
	if m != nil {
		return m.ErrDesc
	}
	return ""
}

type SearchRspDataItem struct {
	NumFound int32    `protobuf:"varint,1,opt,name=num_found,json=numFound" json:"num_found,omitempty"`
	Start    int32    `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	Docs     []string `protobuf:"bytes,3,rep,name=docs" json:"docs,omitempty"`
	Error    string   `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	More     bool     `protobuf:"varint,5,opt,name=more" json:"more,omitempty"`
}

func (m *SearchRspDataItem) Reset()                    { *m = SearchRspDataItem{} }
func (m *SearchRspDataItem) String() string            { return proto.CompactTextString(m) }
func (*SearchRspDataItem) ProtoMessage()               {}
func (*SearchRspDataItem) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{3} }

func (m *SearchRspDataItem) GetNumFound() int32 {
	if m != nil {
		return m.NumFound
	}
	return 0
}

func (m *SearchRspDataItem) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *SearchRspDataItem) GetDocs() []string {
	if m != nil {
		return m.Docs
	}
	return nil
}

func (m *SearchRspDataItem) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *SearchRspDataItem) GetMore() bool {
	if m != nil {
		return m.More
	}
	return false
}

type GetRelatedHotSearchesReq struct {
	Q     string     `protobuf:"bytes,1,opt,name=q" json:"q,omitempty"`
	Rows  int32      `protobuf:"varint,2,opt,name=rows" json:"rows,omitempty"`
	Start int32      `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	Typ   SearchType `protobuf:"varint,4,opt,name=typ,enum=bilin.searchserver.SearchType" json:"typ,omitempty"`
	Uid   string     `protobuf:"bytes,5,opt,name=uid" json:"uid,omitempty"`
}

func (m *GetRelatedHotSearchesReq) Reset()                    { *m = GetRelatedHotSearchesReq{} }
func (m *GetRelatedHotSearchesReq) String() string            { return proto.CompactTextString(m) }
func (*GetRelatedHotSearchesReq) ProtoMessage()               {}
func (*GetRelatedHotSearchesReq) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{4} }

func (m *GetRelatedHotSearchesReq) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *GetRelatedHotSearchesReq) GetRows() int32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *GetRelatedHotSearchesReq) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetRelatedHotSearchesReq) GetTyp() SearchType {
	if m != nil {
		return m.Typ
	}
	return SearchType_UNKNOWN
}

func (m *GetRelatedHotSearchesReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type GetRelatedHotSearchesRsp struct {
	HotSearches []string       `protobuf:"bytes,1,rep,name=hot_searches,json=hotSearches" json:"hot_searches,omitempty"`
	Cret        *CommonRetInfo `protobuf:"bytes,2,opt,name=cret" json:"cret,omitempty"`
}

func (m *GetRelatedHotSearchesRsp) Reset()                    { *m = GetRelatedHotSearchesRsp{} }
func (m *GetRelatedHotSearchesRsp) String() string            { return proto.CompactTextString(m) }
func (*GetRelatedHotSearchesRsp) ProtoMessage()               {}
func (*GetRelatedHotSearchesRsp) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{5} }

func (m *GetRelatedHotSearchesRsp) GetHotSearches() []string {
	if m != nil {
		return m.HotSearches
	}
	return nil
}

func (m *GetRelatedHotSearchesRsp) GetCret() *CommonRetInfo {
	if m != nil {
		return m.Cret
	}
	return nil
}

type GetAllHotSearchesReq struct {
}

func (m *GetAllHotSearchesReq) Reset()                    { *m = GetAllHotSearchesReq{} }
func (m *GetAllHotSearchesReq) String() string            { return proto.CompactTextString(m) }
func (*GetAllHotSearchesReq) ProtoMessage()               {}
func (*GetAllHotSearchesReq) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{6} }

type GetAllHotSearchesRsp struct {
	HotSearches []string       `protobuf:"bytes,1,rep,name=hot_searches,json=hotSearches" json:"hot_searches,omitempty"`
	Cret        *CommonRetInfo `protobuf:"bytes,2,opt,name=cret" json:"cret,omitempty"`
}

func (m *GetAllHotSearchesRsp) Reset()                    { *m = GetAllHotSearchesRsp{} }
func (m *GetAllHotSearchesRsp) String() string            { return proto.CompactTextString(m) }
func (*GetAllHotSearchesRsp) ProtoMessage()               {}
func (*GetAllHotSearchesRsp) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{7} }

func (m *GetAllHotSearchesRsp) GetHotSearches() []string {
	if m != nil {
		return m.HotSearches
	}
	return nil
}

func (m *GetAllHotSearchesRsp) GetCret() *CommonRetInfo {
	if m != nil {
		return m.Cret
	}
	return nil
}

type GetHotSongsReq struct {
	Rows  int32  `protobuf:"varint,2,opt,name=rows" json:"rows,omitempty"`
	Start int32  `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	Uid   string `protobuf:"bytes,5,opt,name=uid" json:"uid,omitempty"`
}

func (m *GetHotSongsReq) Reset()                    { *m = GetHotSongsReq{} }
func (m *GetHotSongsReq) String() string            { return proto.CompactTextString(m) }
func (*GetHotSongsReq) ProtoMessage()               {}
func (*GetHotSongsReq) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{8} }

func (m *GetHotSongsReq) GetRows() int32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *GetHotSongsReq) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetHotSongsReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type GetHotSongsRsp struct {
	// 热门歌曲需要分页，所以采用与SearchRsp相同的返回模型
	Head *SearchRspHeader              `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
	Data map[string]*SearchRspDataItem `protobuf:"bytes,2,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Cret *CommonRetInfo                `protobuf:"bytes,3,opt,name=cret" json:"cret,omitempty"`
}

func (m *GetHotSongsRsp) Reset()                    { *m = GetHotSongsRsp{} }
func (m *GetHotSongsRsp) String() string            { return proto.CompactTextString(m) }
func (*GetHotSongsRsp) ProtoMessage()               {}
func (*GetHotSongsRsp) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{9} }

func (m *GetHotSongsRsp) GetHead() *SearchRspHeader {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *GetHotSongsRsp) GetData() map[string]*SearchRspDataItem {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetHotSongsRsp) GetCret() *CommonRetInfo {
	if m != nil {
		return m.Cret
	}
	return nil
}

func init() {
	proto.RegisterType((*SearchReq)(nil), "bilin.searchserver.SearchReq")
	proto.RegisterType((*SearchRsp)(nil), "bilin.searchserver.SearchRsp")
	proto.RegisterType((*SearchRspHeader)(nil), "bilin.searchserver.SearchRspHeader")
	proto.RegisterType((*SearchRspDataItem)(nil), "bilin.searchserver.SearchRspDataItem")
	proto.RegisterType((*GetRelatedHotSearchesReq)(nil), "bilin.searchserver.GetRelatedHotSearchesReq")
	proto.RegisterType((*GetRelatedHotSearchesRsp)(nil), "bilin.searchserver.GetRelatedHotSearchesRsp")
	proto.RegisterType((*GetAllHotSearchesReq)(nil), "bilin.searchserver.GetAllHotSearchesReq")
	proto.RegisterType((*GetAllHotSearchesRsp)(nil), "bilin.searchserver.GetAllHotSearchesRsp")
	proto.RegisterType((*GetHotSongsReq)(nil), "bilin.searchserver.GetHotSongsReq")
	proto.RegisterType((*GetHotSongsRsp)(nil), "bilin.searchserver.GetHotSongsRsp")
	proto.RegisterEnum("bilin.searchserver.SearchType", SearchType_name, SearchType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for SearchServant service

type SearchServantClient interface {
	// 发起搜索请求
	Search(ctx context.Context, in *SearchReq, opts ...map[string]string) (*SearchRsp, error)
	// 用户有输入时，获取跟输入内容相关的热搜词
	GetRelatedHotSearches(ctx context.Context, in *GetRelatedHotSearchesReq, opts ...map[string]string) (*GetRelatedHotSearchesRsp, error)
	// 获取所有的用户和直播间相关的热搜词（用户没有输入时）
	GetAllHotSearches(ctx context.Context, in *GetAllHotSearchesReq, opts ...map[string]string) (*GetAllHotSearchesRsp, error)
	// 获取热门歌曲
	GetHotSongs(ctx context.Context, in *GetHotSongsReq, opts ...map[string]string) (*GetHotSongsRsp, error)
}

type searchServantClient struct {
	s model.Servant
}

func NewSearchServantClient(objname string, comm servant.ICommunicator) SearchServantClient {
	if comm == nil || objname == "" {
		return nil
	}
	return &searchServantClient{s: comm.GetServantProxy(objname)}
}

func (c *searchServantClient) Search(ctx context.Context, in *SearchReq, opts ...map[string]string) (*SearchRsp, error) {
	var (
		reply SearchRsp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "Search", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *searchServantClient) GetRelatedHotSearches(ctx context.Context, in *GetRelatedHotSearchesReq, opts ...map[string]string) (*GetRelatedHotSearchesRsp, error) {
	var (
		reply GetRelatedHotSearchesRsp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetRelatedHotSearches", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *searchServantClient) GetAllHotSearches(ctx context.Context, in *GetAllHotSearchesReq, opts ...map[string]string) (*GetAllHotSearchesRsp, error) {
	var (
		reply GetAllHotSearchesRsp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetAllHotSearches", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *searchServantClient) GetHotSongs(ctx context.Context, in *GetHotSongsReq, opts ...map[string]string) (*GetHotSongsRsp, error) {
	var (
		reply GetHotSongsRsp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetHotSongs", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}

// Server API for SearchServant service

type SearchServantServer interface {
	// 发起搜索请求
	Search(context.Context, *SearchReq) (*SearchRsp, error)
	// 用户有输入时，获取跟输入内容相关的热搜词
	GetRelatedHotSearches(context.Context, *GetRelatedHotSearchesReq) (*GetRelatedHotSearchesRsp, error)
	// 获取所有的用户和直播间相关的热搜词（用户没有输入时）
	GetAllHotSearches(context.Context, *GetAllHotSearchesReq) (*GetAllHotSearchesRsp, error)
	// 获取热门歌曲
	GetHotSongs(context.Context, *GetHotSongsReq) (*GetHotSongsRsp, error)
}

type searchServantDispatcher struct {
}

func NewSearchServantDispatcher() servant.Dispatcher {
	return &searchServantDispatcher{}
}

func (_obj *searchServantDispatcher) Dispatch(ctx context.Context, _val interface{}, req *taf.RequestPacket) (*taf.ResponsePacket, error) {
	var pbbuf []byte
	_imp := _val.(SearchServantServer)
	switch req.SFuncName {
	case "Search":
		var req_ SearchReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.Search(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetRelatedHotSearches":
		var req_ GetRelatedHotSearchesReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetRelatedHotSearches(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetAllHotSearches":
		var req_ GetAllHotSearchesReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetAllHotSearches(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetHotSongs":
		var req_ GetHotSongsReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetHotSongs(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	default:
		return nil, errors.New("unknow func")
	}
	return &taf.ResponsePacket{
		IVersion:   1,
		IRequestId: req.IRequestId,
		SBuffer:    pbbuf,
		Context:    req.Context,
	}, nil
}

func init() { proto.RegisterFile("searchserver.proto", fileDescriptor16) }

var fileDescriptor16 = []byte{
	// 644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0x4b, 0x6f, 0xd3, 0x40,
	0x10, 0xc6, 0x76, 0xd2, 0xc6, 0xe3, 0x52, 0xd2, 0x51, 0xa9, 0x4c, 0x50, 0x51, 0x30, 0x42, 0x58,
	0x08, 0x45, 0x28, 0x1c, 0x40, 0xf4, 0xc2, 0xa3, 0x6d, 0x5a, 0x01, 0x89, 0xb4, 0xa1, 0x42, 0xea,
	0x81, 0xc8, 0x8d, 0xa7, 0x4d, 0x44, 0xfc, 0xc8, 0xee, 0xa6, 0x28, 0x77, 0x24, 0x0e, 0x70, 0x85,
	0xbf, 0x0b, 0xda, 0x75, 0xfa, 0x08, 0x79, 0xb4, 0x08, 0x24, 0xf0, 0x69, 0x76, 0xf7, 0x9b, 0xf9,
	0xe6, 0xf1, 0x8d, 0x0c, 0x28, 0x28, 0xe0, 0xed, 0x8e, 0x20, 0x7e, 0x4c, 0xbc, 0x92, 0xf2, 0x44,
	0x26, 0x88, 0x07, 0xdd, 0x5e, 0x37, 0xae, 0x9c, 0x7f, 0x29, 0x2d, 0x75, 0x28, 0x08, 0x4f, 0x10,
	0xde, 0x67, 0x03, 0xec, 0xa6, 0x7e, 0x66, 0xd4, 0xc7, 0x25, 0x30, 0xfa, 0xae, 0x51, 0x36, 0x7c,
	0x9b, 0x19, 0x7d, 0x44, 0xc8, 0xf1, 0xe4, 0xa3, 0x70, 0xcd, 0xb2, 0xe1, 0xe7, 0x99, 0xb6, 0x71,
	0x15, 0xf2, 0x42, 0x06, 0x5c, 0xba, 0x96, 0xbe, 0xcc, 0x0e, 0xf8, 0x10, 0x2c, 0x39, 0x4c, 0xdd,
	0x5c, 0xd9, 0xf0, 0x97, 0xab, 0xb7, 0x2a, 0x93, 0xac, 0x95, 0x8c, 0xe3, 0xed, 0x30, 0x25, 0xa6,
	0xa0, 0x58, 0x04, 0x6b, 0xd0, 0x0d, 0xdd, 0xbc, 0xe6, 0x52, 0xa6, 0xf7, 0xc5, 0x3c, 0xcd, 0x44,
	0xa4, 0xf8, 0x18, 0x72, 0x2a, 0x4f, 0x9d, 0x8c, 0x53, 0xbd, 0x33, 0x3b, 0x24, 0x13, 0xe9, 0x8e,
	0x2e, 0x88, 0x69, 0x07, 0xdc, 0x80, 0x5c, 0x18, 0xc8, 0xc0, 0x35, 0xcb, 0x96, 0xef, 0x54, 0xef,
	0xcd, 0x75, 0xac, 0x6c, 0x06, 0x32, 0xd8, 0x8a, 0x25, 0x1f, 0x32, 0xed, 0x84, 0x3e, 0xe4, 0xda,
	0x9c, 0xb2, 0xe2, 0x9c, 0xea, 0xea, 0xc8, 0xf9, 0x65, 0x12, 0x45, 0x49, 0xcc, 0x48, 0xee, 0xc6,
	0x87, 0x09, 0xd3, 0x88, 0xd2, 0x7b, 0xb0, 0x4f, 0x9d, 0x55, 0x31, 0x1f, 0x68, 0x38, 0x6a, 0x9c,
	0x32, 0x71, 0x03, 0xf2, 0xc7, 0x41, 0x6f, 0x40, 0xba, 0x77, 0x4e, 0xf5, 0xee, 0xdc, 0x34, 0x54,
	0xa0, 0x5d, 0x49, 0x11, 0xcb, 0x7c, 0x9e, 0x9a, 0x4f, 0x0c, 0x6f, 0x1f, 0xae, 0xfd, 0x52, 0x1f,
	0xae, 0xc1, 0x82, 0x90, 0x81, 0x1c, 0x08, 0x4d, 0x94, 0x67, 0xa3, 0x93, 0x1a, 0x49, 0x5f, 0x76,
	0x23, 0x1a, 0xcd, 0x29, 0x3b, 0xe0, 0x0d, 0x28, 0x10, 0xe7, 0xad, 0x90, 0x44, 0x5b, 0x97, 0x63,
	0xb3, 0x45, 0xe2, 0x7c, 0x93, 0x44, 0xdb, 0xfb, 0x64, 0xc0, 0xca, 0x04, 0x39, 0xde, 0x04, 0x3b,
	0x1e, 0x44, 0xad, 0xc3, 0x64, 0x10, 0x87, 0x23, 0x86, 0x42, 0x3c, 0x88, 0xb6, 0xd5, 0xf9, 0x6c,
	0xec, 0xe6, 0xf9, 0xb1, 0x23, 0xe4, 0xc2, 0xa4, 0x2d, 0x5c, 0xab, 0x6c, 0xf9, 0x36, 0xd3, 0xb6,
	0x42, 0x12, 0xe7, 0x09, 0xd7, 0x62, 0xb0, 0x59, 0x76, 0x50, 0xc8, 0x28, 0xe1, 0xa4, 0xe7, 0x5d,
	0x60, 0xda, 0xf6, 0xbe, 0x1b, 0xe0, 0xd6, 0x48, 0x32, 0xea, 0x05, 0x92, 0xc2, 0x9d, 0x44, 0x66,
	0x39, 0x91, 0xf8, 0xd7, 0x4a, 0x3c, 0x9a, 0x95, 0x97, 0x48, 0xf1, 0x36, 0x2c, 0x75, 0x12, 0xd9,
	0x12, 0xa3, 0x2b, 0xd7, 0xd0, 0xa5, 0x3b, 0x9d, 0x33, 0xd4, 0xa9, 0x88, 0xcc, 0x8b, 0x44, 0xe4,
	0xad, 0xc1, 0x6a, 0x8d, 0xe4, 0xf3, 0x5e, 0x6f, 0xbc, 0x78, 0xaf, 0x3d, 0xed, 0xfe, 0x6f, 0x93,
	0xbf, 0x86, 0xe5, 0x1a, 0x49, 0xc5, 0x90, 0xc4, 0x47, 0xba, 0xe7, 0x97, 0xef, 0xf2, 0x64, 0xcf,
	0xbe, 0x99, 0xe3, 0xe1, 0xfe, 0x64, 0x85, 0x9f, 0x8d, 0xad, 0xf0, 0x83, 0x69, 0x8e, 0xe3, 0x54,
	0xff, 0xef, 0x1e, 0xdf, 0x6f, 0x00, 0x9c, 0x09, 0x0e, 0x1d, 0x58, 0xdc, 0xab, 0xbf, 0xaa, 0x37,
	0xde, 0xd5, 0x8b, 0x57, 0xb0, 0x00, 0xb9, 0xbd, 0xe6, 0x16, 0x2b, 0x1a, 0xca, 0x62, 0x8d, 0xc6,
	0x9b, 0xa2, 0xa9, 0xac, 0x66, 0xa3, 0x5e, 0x2b, 0x5a, 0xb8, 0x06, 0xb6, 0x7a, 0x6d, 0xe9, 0x87,
	0x1f, 0x27, 0x9f, 0x51, 0xfd, 0x6a, 0xc1, 0xd5, 0x2c, 0x62, 0x93, 0xf8, 0x71, 0x10, 0x4b, 0xdc,
	0x86, 0x85, 0xec, 0x02, 0xd7, 0xe7, 0xa4, 0x47, 0xfd, 0xd2, 0xfa, 0xdc, 0xec, 0x51, 0xc0, 0xf5,
	0xa9, 0xb2, 0xc7, 0x59, 0x13, 0x98, 0xba, 0xb9, 0xa5, 0xdf, 0x40, 0x8b, 0x14, 0x8f, 0x60, 0x65,
	0x42, 0xea, 0xe8, 0xcf, 0x08, 0x31, 0xb1, 0x29, 0xa5, 0x4b, 0x22, 0x45, 0x8a, 0x7b, 0xe0, 0x9c,
	0x13, 0x0d, 0x7a, 0x17, 0xa9, 0x8a, 0xfa, 0x25, 0xef, 0x62, 0xe5, 0xbd, 0x58, 0xdc, 0xcf, 0x6b,
	0xd0, 0xc1, 0x82, 0xfe, 0x9f, 0x3e, 0xfa, 0x19, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xf2, 0xe2, 0x21,
	0x87, 0x07, 0x00, 0x00,
}
