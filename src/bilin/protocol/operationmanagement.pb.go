// Code generated by protoc-gen-tars. DO NOT EDIT.
// source: operationmanagement.proto

package bilin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"
	"code.yy.com/yytars/goframework/tars/servant"
	"code.yy.com/yytars/goframework/tars/servant/model"
	"code.yy.com/yytars/goframework/jce/taf"
	"errors"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type HeadgearInfo struct {
	Uid        uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Headgear   string `protobuf:"bytes,2,opt,name=headgear" json:"headgear,omitempty"`
	Effecttime int64  `protobuf:"varint,3,opt,name=effecttime" json:"effecttime,omitempty"`
	Expiretime int64  `protobuf:"varint,4,opt,name=expiretime" json:"expiretime,omitempty"`
	Id         int64  `protobuf:"varint,5,opt,name=id" json:"id,omitempty"`
}

func (m *HeadgearInfo) Reset()                    { *m = HeadgearInfo{} }
func (m *HeadgearInfo) String() string            { return proto.CompactTextString(m) }
func (*HeadgearInfo) ProtoMessage()               {}
func (*HeadgearInfo) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *HeadgearInfo) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *HeadgearInfo) GetHeadgear() string {
	if m != nil {
		return m.Headgear
	}
	return ""
}

func (m *HeadgearInfo) GetEffecttime() int64 {
	if m != nil {
		return m.Effecttime
	}
	return 0
}

func (m *HeadgearInfo) GetExpiretime() int64 {
	if m != nil {
		return m.Expiretime
	}
	return 0
}

func (m *HeadgearInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 活动发放 头像框
type ActDistributionHeadgearRequest struct {
	Hinfo *HeadgearInfo `protobuf:"bytes,1,opt,name=hinfo" json:"hinfo,omitempty"`
}

func (m *ActDistributionHeadgearRequest) Reset()                    { *m = ActDistributionHeadgearRequest{} }
func (m *ActDistributionHeadgearRequest) String() string            { return proto.CompactTextString(m) }
func (*ActDistributionHeadgearRequest) ProtoMessage()               {}
func (*ActDistributionHeadgearRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *ActDistributionHeadgearRequest) GetHinfo() *HeadgearInfo {
	if m != nil {
		return m.Hinfo
	}
	return nil
}

type BatchActDistributionHeadgearRequest struct {
	Hinfos []*HeadgearInfo `protobuf:"bytes,1,rep,name=hinfos" json:"hinfos,omitempty"`
}

func (m *BatchActDistributionHeadgearRequest) Reset()         { *m = BatchActDistributionHeadgearRequest{} }
func (m *BatchActDistributionHeadgearRequest) String() string { return proto.CompactTextString(m) }
func (*BatchActDistributionHeadgearRequest) ProtoMessage()    {}
func (*BatchActDistributionHeadgearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{2}
}

func (m *BatchActDistributionHeadgearRequest) GetHinfos() []*HeadgearInfo {
	if m != nil {
		return m.Hinfos
	}
	return nil
}

type ActDistributionHeadgearRespone struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *ActDistributionHeadgearRespone) Reset()                    { *m = ActDistributionHeadgearRespone{} }
func (m *ActDistributionHeadgearRespone) String() string            { return proto.CompactTextString(m) }
func (*ActDistributionHeadgearRespone) ProtoMessage()               {}
func (*ActDistributionHeadgearRespone) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func (m *ActDistributionHeadgearRespone) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type GetUserHeadgearInfoReq struct {
	Uid uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *GetUserHeadgearInfoReq) Reset()                    { *m = GetUserHeadgearInfoReq{} }
func (m *GetUserHeadgearInfoReq) String() string            { return proto.CompactTextString(m) }
func (*GetUserHeadgearInfoReq) ProtoMessage()               {}
func (*GetUserHeadgearInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{4} }

func (m *GetUserHeadgearInfoReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type GetUserHeadgearInfoResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Hinfo     *HeadgearInfo  `protobuf:"bytes,2,opt,name=hinfo" json:"hinfo,omitempty"`
}

func (m *GetUserHeadgearInfoResp) Reset()                    { *m = GetUserHeadgearInfoResp{} }
func (m *GetUserHeadgearInfoResp) String() string            { return proto.CompactTextString(m) }
func (*GetUserHeadgearInfoResp) ProtoMessage()               {}
func (*GetUserHeadgearInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *GetUserHeadgearInfoResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *GetUserHeadgearInfoResp) GetHinfo() *HeadgearInfo {
	if m != nil {
		return m.Hinfo
	}
	return nil
}

func init() {
	proto.RegisterType((*HeadgearInfo)(nil), "bilin.operationmanagement.HeadgearInfo")
	proto.RegisterType((*ActDistributionHeadgearRequest)(nil), "bilin.operationmanagement.ActDistributionHeadgearRequest")
	proto.RegisterType((*BatchActDistributionHeadgearRequest)(nil), "bilin.operationmanagement.BatchActDistributionHeadgearRequest")
	proto.RegisterType((*ActDistributionHeadgearRespone)(nil), "bilin.operationmanagement.ActDistributionHeadgearRespone")
	proto.RegisterType((*GetUserHeadgearInfoReq)(nil), "bilin.operationmanagement.GetUserHeadgearInfoReq")
	proto.RegisterType((*GetUserHeadgearInfoResp)(nil), "bilin.operationmanagement.GetUserHeadgearInfoResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for OperationManagementServant service

type OperationManagementServantClient interface {
	// 活动发放头像框
	ActDistributionHeadgear(ctx context.Context, in *ActDistributionHeadgearRequest, opts ...map[string]string) (*ActDistributionHeadgearRespone, error)
	// 一次发送多个头像框给用户
	BatchActDistributionHeadgear(ctx context.Context, in *BatchActDistributionHeadgearRequest, opts ...map[string]string) (*ActDistributionHeadgearRespone, error)
	// 查询某个uid用户的头像框信息
	GetUserHeadgearInfo(ctx context.Context, in *GetUserHeadgearInfoReq, opts ...map[string]string) (*GetUserHeadgearInfoResp, error)
}

type operationManagementServantClient struct {
	s model.Servant
}

func NewOperationManagementServantClient(objname string, comm servant.ICommunicator) OperationManagementServantClient {
	if comm == nil || objname == "" {
		return nil
	}
	return &operationManagementServantClient{s: comm.GetServantProxy(objname)}
}

func (c *operationManagementServantClient) ActDistributionHeadgear(ctx context.Context, in *ActDistributionHeadgearRequest, opts ...map[string]string) (*ActDistributionHeadgearRespone, error) {
	var (
		reply ActDistributionHeadgearRespone
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "ActDistributionHeadgear", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *operationManagementServantClient) BatchActDistributionHeadgear(ctx context.Context, in *BatchActDistributionHeadgearRequest, opts ...map[string]string) (*ActDistributionHeadgearRespone, error) {
	var (
		reply ActDistributionHeadgearRespone
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "BatchActDistributionHeadgear", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *operationManagementServantClient) GetUserHeadgearInfo(ctx context.Context, in *GetUserHeadgearInfoReq, opts ...map[string]string) (*GetUserHeadgearInfoResp, error) {
	var (
		reply GetUserHeadgearInfoResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetUserHeadgearInfo", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}

// Server API for OperationManagementServant service

type OperationManagementServantServer interface {
	// 活动发放头像框
	ActDistributionHeadgear(context.Context, *ActDistributionHeadgearRequest) (*ActDistributionHeadgearRespone, error)
	// 一次发送多个头像框给用户
	BatchActDistributionHeadgear(context.Context, *BatchActDistributionHeadgearRequest) (*ActDistributionHeadgearRespone, error)
	// 查询某个uid用户的头像框信息
	GetUserHeadgearInfo(context.Context, *GetUserHeadgearInfoReq) (*GetUserHeadgearInfoResp, error)
}

type operationManagementServantDispatcher struct {
}

func NewOperationManagementServantDispatcher() servant.Dispatcher {
	return &operationManagementServantDispatcher{}
}

func (_obj *operationManagementServantDispatcher) Dispatch(ctx context.Context, _val interface{}, req *taf.RequestPacket) (*taf.ResponsePacket, error) {
	var pbbuf []byte
	_imp := _val.(OperationManagementServantServer)
	switch req.SFuncName {
	case "ActDistributionHeadgear":
		var req_ ActDistributionHeadgearRequest
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.ActDistributionHeadgear(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "BatchActDistributionHeadgear":
		var req_ BatchActDistributionHeadgearRequest
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.BatchActDistributionHeadgear(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetUserHeadgearInfo":
		var req_ GetUserHeadgearInfoReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetUserHeadgearInfo(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	default:
		return nil, errors.New("unknow func")
	}
	return &taf.ResponsePacket{
		IVersion:   1,
		IRequestId: req.IRequestId,
		SBuffer:    pbbuf,
		Context:    req.Context,
	}, nil
}

func init() { proto.RegisterFile("operationmanagement.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xd5, 0xda, 0x49, 0x20, 0x43, 0x84, 0xd0, 0x82, 0x88, 0x63, 0xa1, 0xc8, 0x32, 0x07, 0x22,
	0x0e, 0x96, 0x30, 0x27, 0x0e, 0x80, 0x08, 0x48, 0xc0, 0x01, 0x21, 0x19, 0xb8, 0x70, 0xa9, 0x36,
	0xf6, 0x38, 0x5e, 0xa9, 0xde, 0x75, 0xd6, 0x9b, 0xaa, 0x87, 0xfe, 0x84, 0x4a, 0x3d, 0xf7, 0x1f,
	0xf5, 0x67, 0x55, 0xd9, 0x38, 0x1f, 0x55, 0x1d, 0xb7, 0x49, 0x6f, 0xf6, 0xcc, 0x7b, 0xf3, 0x66,
	0xe6, 0x8d, 0x16, 0x06, 0xb2, 0x40, 0xc5, 0x34, 0x97, 0x22, 0x67, 0x82, 0x4d, 0x31, 0x47, 0xa1,
	0x83, 0x42, 0x49, 0x2d, 0xe9, 0x60, 0xc2, 0x8f, 0xb9, 0x08, 0x6a, 0x00, 0x6e, 0x2f, 0x43, 0x96,
	0xa0, 0x5a, 0x02, 0xfd, 0x73, 0x02, 0xbd, 0x1f, 0xc8, 0x92, 0x29, 0x32, 0xf5, 0x53, 0xa4, 0x92,
	0x3e, 0x03, 0x7b, 0xce, 0x13, 0x87, 0x78, 0x64, 0xd4, 0x8a, 0x16, 0x9f, 0xd4, 0x85, 0xc7, 0x59,
	0x85, 0x70, 0x2c, 0x8f, 0x8c, 0xba, 0xd1, 0xfa, 0x9f, 0x0e, 0x01, 0x30, 0x4d, 0x31, 0xd6, 0x9a,
	0xe7, 0xe8, 0xd8, 0x1e, 0x19, 0xd9, 0xd1, 0x56, 0xc4, 0xe4, 0x4f, 0x0b, 0xae, 0xd0, 0xe4, 0x5b,
	0x55, 0x7e, 0x1d, 0xa1, 0x4f, 0xc1, 0xe2, 0x89, 0xd3, 0x36, 0x71, 0x8b, 0x27, 0xfe, 0x11, 0x0c,
	0xbf, 0xc4, 0xfa, 0x1b, 0x2f, 0xb5, 0xe2, 0x93, 0xf9, 0xa2, 0xf3, 0x55, 0x73, 0x11, 0xce, 0xe6,
	0x58, 0x6a, 0xfa, 0x11, 0xda, 0x19, 0x17, 0xa9, 0x34, 0x1d, 0x3e, 0x09, 0xdf, 0x04, 0x3b, 0x27,
	0x0d, 0xb6, 0xe7, 0x8a, 0x96, 0x2c, 0x3f, 0x85, 0xd7, 0x63, 0xa6, 0xe3, 0xec, 0x0e, 0x95, 0xcf,
	0xd0, 0x31, 0xf8, 0xd2, 0x21, 0x9e, 0xbd, 0x8f, 0x4c, 0x45, 0xf3, 0xff, 0x36, 0x0c, 0x52, 0x16,
	0x52, 0x20, 0x0d, 0xa1, 0x1b, 0xcb, 0x3c, 0x97, 0x42, 0xa1, 0xae, 0x86, 0x79, 0x51, 0xa9, 0x7c,
	0x35, 0xf1, 0x08, 0xb5, 0x29, 0xb9, 0x81, 0xf9, 0x6f, 0xe1, 0xe5, 0x77, 0xd4, 0xff, 0x4a, 0x54,
	0x37, 0x44, 0x71, 0x76, 0xdb, 0xb6, 0x85, 0xb3, 0xfd, 0x5a, 0x70, 0x59, 0x1c, 0xa2, 0xbd, 0x59,
	0xbc, 0x75, 0xc8, 0xe2, 0xc3, 0x2b, 0x1b, 0xdc, 0xdf, 0x2b, 0xec, 0xaf, 0x35, 0xf6, 0x0f, 0xaa,
	0x13, 0x26, 0x34, 0xbd, 0x20, 0xd0, 0xdf, 0xb1, 0x30, 0xfa, 0xa1, 0x41, 0xaa, 0xd9, 0x47, 0xf7,
	0x20, 0xea, 0xd2, 0x9f, 0x4b, 0x02, 0xaf, 0x9a, 0x4e, 0x85, 0x7e, 0x6a, 0xa8, 0x7d, 0x8f, 0x1b,
	0x7b, 0x48, 0x6f, 0x67, 0xf0, 0xbc, 0xc6, 0x5a, 0xfa, 0xae, 0xa1, 0x62, 0xfd, 0xdd, 0xb8, 0xe1,
	0xbe, 0x94, 0xb2, 0x18, 0x3f, 0xfa, 0xdf, 0x36, 0xa4, 0x49, 0xc7, 0xbc, 0x21, 0xef, 0xaf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xef, 0x60, 0x80, 0x84, 0x89, 0x04, 0x00, 0x00,
}
