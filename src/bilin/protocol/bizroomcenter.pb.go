// Code generated by protoc-gen-tars. DO NOT EDIT.
// source: bizroomcenter.proto

package bilin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"
	"code.yy.com/yytars/goframework/tars/servant"
	"code.yy.com/yytars/goframework/tars/servant/model"
	"code.yy.com/yytars/goframework/jce/taf"
	"errors"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BizRoomInfo struct {
	Roomid     uint64 `protobuf:"varint,1,opt,name=roomid" json:"roomid,omitempty"`
	Lockstatus uint32 `protobuf:"varint,2,opt,name=lockstatus" json:"lockstatus,omitempty"`
	Roompwd    string `protobuf:"bytes,3,opt,name=roompwd" json:"roompwd,omitempty"`
}

func (m *BizRoomInfo) Reset()                    { *m = BizRoomInfo{} }
func (m *BizRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*BizRoomInfo) ProtoMessage()               {}
func (*BizRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *BizRoomInfo) GetRoomid() uint64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

func (m *BizRoomInfo) GetLockstatus() uint32 {
	if m != nil {
		return m.Lockstatus
	}
	return 0
}

func (m *BizRoomInfo) GetRoompwd() string {
	if m != nil {
		return m.Roompwd
	}
	return ""
}

type GetBizRoomInfoReq struct {
	Roomid uint64 `protobuf:"varint,1,opt,name=roomid" json:"roomid,omitempty"`
}

func (m *GetBizRoomInfoReq) Reset()                    { *m = GetBizRoomInfoReq{} }
func (m *GetBizRoomInfoReq) String() string            { return proto.CompactTextString(m) }
func (*GetBizRoomInfoReq) ProtoMessage()               {}
func (*GetBizRoomInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *GetBizRoomInfoReq) GetRoomid() uint64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

type GetBizRoomInfoResp struct {
	Commonret   *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Bizroominfo *BizRoomInfo   `protobuf:"bytes,2,opt,name=bizroominfo" json:"bizroominfo,omitempty"`
}

func (m *GetBizRoomInfoResp) Reset()                    { *m = GetBizRoomInfoResp{} }
func (m *GetBizRoomInfoResp) String() string            { return proto.CompactTextString(m) }
func (*GetBizRoomInfoResp) ProtoMessage()               {}
func (*GetBizRoomInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *GetBizRoomInfoResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *GetBizRoomInfoResp) GetBizroominfo() *BizRoomInfo {
	if m != nil {
		return m.Bizroominfo
	}
	return nil
}

type BatchGetBizRoomInfoReq struct {
	Roomids []uint64 `protobuf:"varint,1,rep,packed,name=roomids" json:"roomids,omitempty"`
}

func (m *BatchGetBizRoomInfoReq) Reset()                    { *m = BatchGetBizRoomInfoReq{} }
func (m *BatchGetBizRoomInfoReq) String() string            { return proto.CompactTextString(m) }
func (*BatchGetBizRoomInfoReq) ProtoMessage()               {}
func (*BatchGetBizRoomInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *BatchGetBizRoomInfoReq) GetRoomids() []uint64 {
	if m != nil {
		return m.Roomids
	}
	return nil
}

type BatchGetBizRoomInfoResp struct {
	Commonret    *CommonRetInfo          `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Bizroominfos map[uint64]*BizRoomInfo `protobuf:"bytes,2,rep,name=bizroominfos" json:"bizroominfos,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BatchGetBizRoomInfoResp) Reset()                    { *m = BatchGetBizRoomInfoResp{} }
func (m *BatchGetBizRoomInfoResp) String() string            { return proto.CompactTextString(m) }
func (*BatchGetBizRoomInfoResp) ProtoMessage()               {}
func (*BatchGetBizRoomInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *BatchGetBizRoomInfoResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *BatchGetBizRoomInfoResp) GetBizroominfos() map[uint64]*BizRoomInfo {
	if m != nil {
		return m.Bizroominfos
	}
	return nil
}

type SetRoomPasswordReq struct {
	Roomid   uint64 `protobuf:"varint,1,opt,name=roomid" json:"roomid,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *SetRoomPasswordReq) Reset()                    { *m = SetRoomPasswordReq{} }
func (m *SetRoomPasswordReq) String() string            { return proto.CompactTextString(m) }
func (*SetRoomPasswordReq) ProtoMessage()               {}
func (*SetRoomPasswordReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *SetRoomPasswordReq) GetRoomid() uint64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

func (m *SetRoomPasswordReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SetRoomPasswordResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *SetRoomPasswordResp) Reset()                    { *m = SetRoomPasswordResp{} }
func (m *SetRoomPasswordResp) String() string            { return proto.CompactTextString(m) }
func (*SetRoomPasswordResp) ProtoMessage()               {}
func (*SetRoomPasswordResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *SetRoomPasswordResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

type RemoveRoomPasswordReq struct {
	Roomid uint64 `protobuf:"varint,1,opt,name=roomid" json:"roomid,omitempty"`
}

func (m *RemoveRoomPasswordReq) Reset()                    { *m = RemoveRoomPasswordReq{} }
func (m *RemoveRoomPasswordReq) String() string            { return proto.CompactTextString(m) }
func (*RemoveRoomPasswordReq) ProtoMessage()               {}
func (*RemoveRoomPasswordReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *RemoveRoomPasswordReq) GetRoomid() uint64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

type RemoveRoomPasswordResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
}

func (m *RemoveRoomPasswordResp) Reset()                    { *m = RemoveRoomPasswordResp{} }
func (m *RemoveRoomPasswordResp) String() string            { return proto.CompactTextString(m) }
func (*RemoveRoomPasswordResp) ProtoMessage()               {}
func (*RemoveRoomPasswordResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *RemoveRoomPasswordResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

// 获取房间锁定状态
type GetBizRoomLockStatusReq struct {
	Roomid uint64 `protobuf:"varint,1,opt,name=roomid" json:"roomid,omitempty"`
}

func (m *GetBizRoomLockStatusReq) Reset()                    { *m = GetBizRoomLockStatusReq{} }
func (m *GetBizRoomLockStatusReq) String() string            { return proto.CompactTextString(m) }
func (*GetBizRoomLockStatusReq) ProtoMessage()               {}
func (*GetBizRoomLockStatusReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *GetBizRoomLockStatusReq) GetRoomid() uint64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

type GetBizRoomLockStatusResp struct {
	Commonret  *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Lockstatus uint32         `protobuf:"varint,2,opt,name=lockstatus" json:"lockstatus,omitempty"`
}

func (m *GetBizRoomLockStatusResp) Reset()                    { *m = GetBizRoomLockStatusResp{} }
func (m *GetBizRoomLockStatusResp) String() string            { return proto.CompactTextString(m) }
func (*GetBizRoomLockStatusResp) ProtoMessage()               {}
func (*GetBizRoomLockStatusResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *GetBizRoomLockStatusResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *GetBizRoomLockStatusResp) GetLockstatus() uint32 {
	if m != nil {
		return m.Lockstatus
	}
	return 0
}

type BatchGetBizRoomLockStatusReq struct {
	Roomids []uint64 `protobuf:"varint,1,rep,packed,name=roomids" json:"roomids,omitempty"`
}

func (m *BatchGetBizRoomLockStatusReq) Reset()                    { *m = BatchGetBizRoomLockStatusReq{} }
func (m *BatchGetBizRoomLockStatusReq) String() string            { return proto.CompactTextString(m) }
func (*BatchGetBizRoomLockStatusReq) ProtoMessage()               {}
func (*BatchGetBizRoomLockStatusReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *BatchGetBizRoomLockStatusReq) GetRoomids() []uint64 {
	if m != nil {
		return m.Roomids
	}
	return nil
}

type BatchGetBizRoomLockStatusResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Roomids   []uint64       `protobuf:"varint,2,rep,packed,name=roomids" json:"roomids,omitempty"`
}

func (m *BatchGetBizRoomLockStatusResp) Reset()                    { *m = BatchGetBizRoomLockStatusResp{} }
func (m *BatchGetBizRoomLockStatusResp) String() string            { return proto.CompactTextString(m) }
func (*BatchGetBizRoomLockStatusResp) ProtoMessage()               {}
func (*BatchGetBizRoomLockStatusResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *BatchGetBizRoomLockStatusResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *BatchGetBizRoomLockStatusResp) GetRoomids() []uint64 {
	if m != nil {
		return m.Roomids
	}
	return nil
}

// 获取所有锁定的房间列表
type GetAllLockedRoomsReq struct {
}

func (m *GetAllLockedRoomsReq) Reset()                    { *m = GetAllLockedRoomsReq{} }
func (m *GetAllLockedRoomsReq) String() string            { return proto.CompactTextString(m) }
func (*GetAllLockedRoomsReq) ProtoMessage()               {}
func (*GetAllLockedRoomsReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

type GetAllLockedRoomsResp struct {
	Commonret *CommonRetInfo `protobuf:"bytes,1,opt,name=commonret" json:"commonret,omitempty"`
	Roomids   []uint64       `protobuf:"varint,2,rep,packed,name=roomids" json:"roomids,omitempty"`
}

func (m *GetAllLockedRoomsResp) Reset()                    { *m = GetAllLockedRoomsResp{} }
func (m *GetAllLockedRoomsResp) String() string            { return proto.CompactTextString(m) }
func (*GetAllLockedRoomsResp) ProtoMessage()               {}
func (*GetAllLockedRoomsResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *GetAllLockedRoomsResp) GetCommonret() *CommonRetInfo {
	if m != nil {
		return m.Commonret
	}
	return nil
}

func (m *GetAllLockedRoomsResp) GetRoomids() []uint64 {
	if m != nil {
		return m.Roomids
	}
	return nil
}

func init() {
	proto.RegisterType((*BizRoomInfo)(nil), "bilin.bizroomcenter.BizRoomInfo")
	proto.RegisterType((*GetBizRoomInfoReq)(nil), "bilin.bizroomcenter.GetBizRoomInfoReq")
	proto.RegisterType((*GetBizRoomInfoResp)(nil), "bilin.bizroomcenter.GetBizRoomInfoResp")
	proto.RegisterType((*BatchGetBizRoomInfoReq)(nil), "bilin.bizroomcenter.BatchGetBizRoomInfoReq")
	proto.RegisterType((*BatchGetBizRoomInfoResp)(nil), "bilin.bizroomcenter.BatchGetBizRoomInfoResp")
	proto.RegisterType((*SetRoomPasswordReq)(nil), "bilin.bizroomcenter.SetRoomPasswordReq")
	proto.RegisterType((*SetRoomPasswordResp)(nil), "bilin.bizroomcenter.SetRoomPasswordResp")
	proto.RegisterType((*RemoveRoomPasswordReq)(nil), "bilin.bizroomcenter.RemoveRoomPasswordReq")
	proto.RegisterType((*RemoveRoomPasswordResp)(nil), "bilin.bizroomcenter.RemoveRoomPasswordResp")
	proto.RegisterType((*GetBizRoomLockStatusReq)(nil), "bilin.bizroomcenter.GetBizRoomLockStatusReq")
	proto.RegisterType((*GetBizRoomLockStatusResp)(nil), "bilin.bizroomcenter.GetBizRoomLockStatusResp")
	proto.RegisterType((*BatchGetBizRoomLockStatusReq)(nil), "bilin.bizroomcenter.BatchGetBizRoomLockStatusReq")
	proto.RegisterType((*BatchGetBizRoomLockStatusResp)(nil), "bilin.bizroomcenter.BatchGetBizRoomLockStatusResp")
	proto.RegisterType((*GetAllLockedRoomsReq)(nil), "bilin.bizroomcenter.GetAllLockedRoomsReq")
	proto.RegisterType((*GetAllLockedRoomsResp)(nil), "bilin.bizroomcenter.GetAllLockedRoomsResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for BizRoomCenterServant service

type BizRoomCenterServantClient interface {
	// 获取房间的基本业务信息
	GetBizRoomInfo(ctx context.Context, in *GetBizRoomInfoReq, opts ...map[string]string) (*GetBizRoomInfoResp, error)
	BatchGetBizRoomInfo(ctx context.Context, in *BatchGetBizRoomInfoReq, opts ...map[string]string) (*BatchGetBizRoomInfoResp, error)
	// 设置房间密码
	SetRoomPassword(ctx context.Context, in *SetRoomPasswordReq, opts ...map[string]string) (*SetRoomPasswordResp, error)
	RemoveRoomPassword(ctx context.Context, in *RemoveRoomPasswordReq, opts ...map[string]string) (*RemoveRoomPasswordResp, error)
	// 获取房间锁定状态
	GetBizRoomLockStatus(ctx context.Context, in *GetBizRoomLockStatusReq, opts ...map[string]string) (*GetBizRoomLockStatusResp, error)
	BatchGetBizRoomLockStatus(ctx context.Context, in *BatchGetBizRoomLockStatusReq, opts ...map[string]string) (*BatchGetBizRoomLockStatusResp, error)
	// 获取所有锁定的房间列表
	GetAllLockedRooms(ctx context.Context, in *GetAllLockedRoomsReq, opts ...map[string]string) (*GetAllLockedRoomsResp, error)
}

type bizRoomCenterServantClient struct {
	s model.Servant
}

func NewBizRoomCenterServantClient(objname string, comm servant.ICommunicator) BizRoomCenterServantClient {
	if comm == nil || objname == "" {
		return nil
	}
	return &bizRoomCenterServantClient{s: comm.GetServantProxy(objname)}
}

func (c *bizRoomCenterServantClient) GetBizRoomInfo(ctx context.Context, in *GetBizRoomInfoReq, opts ...map[string]string) (*GetBizRoomInfoResp, error) {
	var (
		reply GetBizRoomInfoResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetBizRoomInfo", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bizRoomCenterServantClient) BatchGetBizRoomInfo(ctx context.Context, in *BatchGetBizRoomInfoReq, opts ...map[string]string) (*BatchGetBizRoomInfoResp, error) {
	var (
		reply BatchGetBizRoomInfoResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "BatchGetBizRoomInfo", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bizRoomCenterServantClient) SetRoomPassword(ctx context.Context, in *SetRoomPasswordReq, opts ...map[string]string) (*SetRoomPasswordResp, error) {
	var (
		reply SetRoomPasswordResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "SetRoomPassword", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bizRoomCenterServantClient) RemoveRoomPassword(ctx context.Context, in *RemoveRoomPasswordReq, opts ...map[string]string) (*RemoveRoomPasswordResp, error) {
	var (
		reply RemoveRoomPasswordResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "RemoveRoomPassword", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bizRoomCenterServantClient) GetBizRoomLockStatus(ctx context.Context, in *GetBizRoomLockStatusReq, opts ...map[string]string) (*GetBizRoomLockStatusResp, error) {
	var (
		reply GetBizRoomLockStatusResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetBizRoomLockStatus", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bizRoomCenterServantClient) BatchGetBizRoomLockStatus(ctx context.Context, in *BatchGetBizRoomLockStatusReq, opts ...map[string]string) (*BatchGetBizRoomLockStatusResp, error) {
	var (
		reply BatchGetBizRoomLockStatusResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "BatchGetBizRoomLockStatus", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *bizRoomCenterServantClient) GetAllLockedRooms(ctx context.Context, in *GetAllLockedRoomsReq, opts ...map[string]string) (*GetAllLockedRoomsResp, error) {
	var (
		reply GetAllLockedRoomsResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetAllLockedRooms", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}

// Server API for BizRoomCenterServant service

type BizRoomCenterServantServer interface {
	// 获取房间的基本业务信息
	GetBizRoomInfo(context.Context, *GetBizRoomInfoReq) (*GetBizRoomInfoResp, error)
	BatchGetBizRoomInfo(context.Context, *BatchGetBizRoomInfoReq) (*BatchGetBizRoomInfoResp, error)
	// 设置房间密码
	SetRoomPassword(context.Context, *SetRoomPasswordReq) (*SetRoomPasswordResp, error)
	RemoveRoomPassword(context.Context, *RemoveRoomPasswordReq) (*RemoveRoomPasswordResp, error)
	// 获取房间锁定状态
	GetBizRoomLockStatus(context.Context, *GetBizRoomLockStatusReq) (*GetBizRoomLockStatusResp, error)
	BatchGetBizRoomLockStatus(context.Context, *BatchGetBizRoomLockStatusReq) (*BatchGetBizRoomLockStatusResp, error)
	// 获取所有锁定的房间列表
	GetAllLockedRooms(context.Context, *GetAllLockedRoomsReq) (*GetAllLockedRoomsResp, error)
}

type bizRoomCenterServantDispatcher struct {
}

func NewBizRoomCenterServantDispatcher() servant.Dispatcher {
	return &bizRoomCenterServantDispatcher{}
}

func (_obj *bizRoomCenterServantDispatcher) Dispatch(ctx context.Context, _val interface{}, req *taf.RequestPacket) (*taf.ResponsePacket, error) {
	var pbbuf []byte
	_imp := _val.(BizRoomCenterServantServer)
	switch req.SFuncName {
	case "GetBizRoomInfo":
		var req_ GetBizRoomInfoReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetBizRoomInfo(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "BatchGetBizRoomInfo":
		var req_ BatchGetBizRoomInfoReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.BatchGetBizRoomInfo(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "SetRoomPassword":
		var req_ SetRoomPasswordReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.SetRoomPassword(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "RemoveRoomPassword":
		var req_ RemoveRoomPasswordReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.RemoveRoomPassword(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetBizRoomLockStatus":
		var req_ GetBizRoomLockStatusReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetBizRoomLockStatus(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "BatchGetBizRoomLockStatus":
		var req_ BatchGetBizRoomLockStatusReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.BatchGetBizRoomLockStatus(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetAllLockedRooms":
		var req_ GetAllLockedRoomsReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetAllLockedRooms(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	default:
		return nil, errors.New("unknow func")
	}
	return &taf.ResponsePacket{
		IVersion:   1,
		IRequestId: req.IRequestId,
		SBuffer:    pbbuf,
		Context:    req.Context,
	}, nil
}

func init() { proto.RegisterFile("bizroomcenter.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4f, 0x6f, 0xd3, 0x3e,
	0x18, 0x56, 0xda, 0xfd, 0xf9, 0xf5, 0xed, 0x7e, 0xc0, 0xde, 0x76, 0x5d, 0x88, 0x00, 0x55, 0x3e,
	0x40, 0x58, 0x47, 0xd1, 0x82, 0x84, 0x26, 0x0e, 0x48, 0x74, 0x42, 0x63, 0xd2, 0x0e, 0x28, 0xbd,
	0x71, 0x41, 0x69, 0xe3, 0x69, 0xa1, 0x4d, 0xec, 0xc5, 0x5e, 0xa7, 0xed, 0xc8, 0x99, 0x23, 0x9f,
	0x81, 0xcf, 0x89, 0xe2, 0xa5, 0x5b, 0xd2, 0xb8, 0x5d, 0x5a, 0x71, 0xab, 0xed, 0xe7, 0xf5, 0xf3,
	0x3c, 0xf6, 0xfb, 0xb8, 0x81, 0xc6, 0x20, 0xb8, 0x89, 0x19, 0x0b, 0x87, 0x34, 0x92, 0x34, 0xee,
	0xf2, 0x98, 0x49, 0x86, 0x8d, 0x41, 0x30, 0x0e, 0xa2, 0x6e, 0x6e, 0xc9, 0xda, 0x3a, 0xa7, 0x9e,
	0x3f, 0x85, 0x90, 0xef, 0x50, 0xef, 0x05, 0x37, 0x2e, 0x63, 0xe1, 0x49, 0x74, 0xc6, 0xb0, 0x05,
	0x1b, 0x09, 0x34, 0xf0, 0x4d, 0xa3, 0x6d, 0xd8, 0x6b, 0x6e, 0x3a, 0xc2, 0x17, 0x00, 0x63, 0x36,
	0x1c, 0x09, 0xe9, 0xc9, 0x4b, 0x61, 0x56, 0xda, 0x86, 0xfd, 0xbf, 0x9b, 0x99, 0x41, 0x13, 0x36,
	0x13, 0x24, 0xbf, 0xf2, 0xcd, 0x6a, 0xdb, 0xb0, 0x6b, 0xee, 0x74, 0x48, 0x3a, 0xb0, 0x7d, 0x4c,
	0x65, 0x86, 0xc3, 0xa5, 0x17, 0xf3, 0x68, 0xc8, 0x2f, 0x03, 0x70, 0x16, 0x2d, 0x38, 0x3a, 0x50,
	0x1b, 0xb2, 0x30, 0x64, 0x51, 0x4c, 0xa5, 0xaa, 0xa8, 0x3b, 0xcd, 0xee, 0xad, 0xb7, 0x23, 0x35,
	0xef, 0x52, 0xa9, 0xc0, 0xf7, 0x30, 0xec, 0x41, 0x3d, 0xf5, 0x1d, 0x44, 0x67, 0x4c, 0x49, 0xae,
	0x3b, 0xed, 0xae, 0xe6, 0x44, 0xba, 0x59, 0xba, 0x6c, 0x11, 0x71, 0xa0, 0xd5, 0xf3, 0xe4, 0xf0,
	0xbc, 0x68, 0x20, 0xf5, 0x1b, 0xf8, 0xc2, 0x34, 0xda, 0x55, 0x7b, 0xcd, 0x9d, 0x0e, 0xc9, 0xef,
	0x0a, 0xec, 0x6a, 0x8b, 0x56, 0xf4, 0x31, 0x80, 0xad, 0x8c, 0xa4, 0xe4, 0xec, 0xab, 0x76, 0xdd,
	0xf9, 0xa8, 0x37, 0xa2, 0xe7, 0x4d, 0x0c, 0xde, 0x6d, 0xf0, 0x39, 0x92, 0xf1, 0xb5, 0x9b, 0xdb,
	0xd3, 0xf2, 0x60, 0xbb, 0x00, 0xc1, 0x27, 0x50, 0x1d, 0xd1, 0xeb, 0xf4, 0x82, 0x92, 0x9f, 0xf8,
	0x1e, 0xd6, 0x27, 0xde, 0xf8, 0x92, 0x96, 0x3e, 0xcc, 0x5b, 0xf8, 0x87, 0xca, 0xa1, 0x41, 0xbe,
	0x00, 0xf6, 0xa9, 0x4c, 0x56, 0xbe, 0x7a, 0x42, 0x5c, 0xb1, 0xd8, 0x5f, 0xd0, 0x07, 0x68, 0xc1,
	0x7f, 0x3c, 0x85, 0x29, 0xb2, 0x9a, 0x7b, 0x37, 0x26, 0x27, 0xd0, 0x28, 0xec, 0xb4, 0xda, 0xd9,
	0x92, 0xb7, 0xb0, 0xe3, 0xd2, 0x90, 0x4d, 0x68, 0x49, 0x5d, 0xe4, 0x14, 0x5a, 0xba, 0x82, 0x15,
	0xe9, 0x0f, 0x60, 0xf7, 0xfe, 0xb2, 0x4e, 0xd9, 0x70, 0xd4, 0x57, 0x61, 0x5a, 0x24, 0x20, 0x02,
	0x53, 0x5f, 0xb2, 0x62, 0x77, 0x3d, 0x90, 0x6b, 0x72, 0x08, 0xcf, 0x66, 0x9a, 0x2a, 0xaf, 0x73,
	0x7e, 0x0e, 0x42, 0x78, 0xbe, 0xa0, 0x72, 0x45, 0xb9, 0x19, 0xba, 0x4a, 0x9e, 0xae, 0x05, 0xcd,
	0x63, 0x2a, 0x3f, 0x8d, 0xc7, 0x09, 0x0b, 0xf5, 0x13, 0xbe, 0x44, 0x20, 0xa1, 0xb0, 0xa3, 0x99,
	0xff, 0xd7, 0xf4, 0xce, 0x9f, 0x0d, 0x68, 0xa6, 0x36, 0x8f, 0x54, 0x0e, 0xfa, 0x34, 0x9e, 0x78,
	0x91, 0x44, 0x0f, 0x1e, 0xe5, 0x03, 0x89, 0x2f, 0xb5, 0xb1, 0x29, 0x3c, 0x31, 0xd6, 0xab, 0x52,
	0x38, 0xc1, 0x91, 0x43, 0x43, 0x13, 0x7c, 0xec, 0x94, 0x7f, 0x22, 0x2e, 0xac, 0xfd, 0x65, 0xde,
	0x13, 0xf4, 0xe1, 0xf1, 0x4c, 0x04, 0x51, 0xaf, 0xb6, 0x18, 0x79, 0xcb, 0x2e, 0x07, 0x14, 0x1c,
	0x43, 0xc0, 0x62, 0xd8, 0x70, 0x4f, 0x5b, 0xaf, 0x8d, 0xb1, 0xd5, 0x29, 0x8d, 0x15, 0x1c, 0x85,
	0xea, 0xa0, 0x42, 0xaf, 0xe2, 0xfe, 0x03, 0xf7, 0x90, 0x0b, 0x84, 0xf5, 0x66, 0x09, 0xb4, 0xe0,
	0xf8, 0xd3, 0x80, 0xa7, 0x73, 0x63, 0x82, 0x07, 0x65, 0x6e, 0x25, 0xcf, 0xef, 0x2c, 0x5b, 0x22,
	0x38, 0xfe, 0x50, 0x7f, 0xd1, 0xf9, 0x8c, 0xe0, 0xeb, 0x79, 0x46, 0x0a, 0x19, 0xb3, 0xf6, 0xca,
	0x42, 0x05, 0xef, 0x6d, 0x7e, 0x5b, 0x57, 0xe0, 0xc1, 0x86, 0xfa, 0xfe, 0x78, 0xf7, 0x37, 0x00,
	0x00, 0xff, 0xff, 0xcf, 0xe9, 0xbd, 0x63, 0xb9, 0x08, 0x00, 0x00,
}
