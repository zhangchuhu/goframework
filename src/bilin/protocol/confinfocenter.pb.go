// Code generated by protoc-gen-tars. DO NOT EDIT.
// source: confinfocenter.proto

package bilin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"
	"code.yy.com/yytars/goframework/tars/servant"
	"code.yy.com/yytars/goframework/tars/servant/model"
	"code.yy.com/yytars/goframework/jce/taf"
	"errors"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GuildInfoReq struct {
	Roomid uint64 `protobuf:"varint,1,opt,name=roomid" json:"roomid,omitempty"`
}

func (m *GuildInfoReq) Reset()                    { *m = GuildInfoReq{} }
func (m *GuildInfoReq) String() string            { return proto.CompactTextString(m) }
func (*GuildInfoReq) ProtoMessage()               {}
func (*GuildInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *GuildInfoReq) GetRoomid() uint64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

type GuildInfoResp struct {
	GuildID uint64 `protobuf:"varint,1,opt,name=guildID" json:"guildID,omitempty"`
}

func (m *GuildInfoResp) Reset()                    { *m = GuildInfoResp{} }
func (m *GuildInfoResp) String() string            { return proto.CompactTextString(m) }
func (*GuildInfoResp) ProtoMessage()               {}
func (*GuildInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *GuildInfoResp) GetGuildID() uint64 {
	if m != nil {
		return m.GuildID
	}
	return 0
}

type LivingCategoryInfo struct {
	Typeid         int64  `protobuf:"varint,1,opt,name=typeid" json:"typeid,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Color          string `protobuf:"bytes,3,opt,name=color" json:"color,omitempty"`
	Backgroudimage string `protobuf:"bytes,4,opt,name=backgroudimage" json:"backgroudimage,omitempty"`
	Sort           int64  `protobuf:"varint,5,opt,name=sort" json:"sort,omitempty"`
}

func (m *LivingCategoryInfo) Reset()                    { *m = LivingCategoryInfo{} }
func (m *LivingCategoryInfo) String() string            { return proto.CompactTextString(m) }
func (*LivingCategoryInfo) ProtoMessage()               {}
func (*LivingCategoryInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *LivingCategoryInfo) GetTypeid() int64 {
	if m != nil {
		return m.Typeid
	}
	return 0
}

func (m *LivingCategoryInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LivingCategoryInfo) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *LivingCategoryInfo) GetBackgroudimage() string {
	if m != nil {
		return m.Backgroudimage
	}
	return ""
}

func (m *LivingCategoryInfo) GetSort() int64 {
	if m != nil {
		return m.Sort
	}
	return 0
}

type LivingCategorysReq struct {
}

func (m *LivingCategorysReq) Reset()                    { *m = LivingCategorysReq{} }
func (m *LivingCategorysReq) String() string            { return proto.CompactTextString(m) }
func (*LivingCategorysReq) ProtoMessage()               {}
func (*LivingCategorysReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

type LivingCategorysResp struct {
	Livingcategorys []*LivingCategoryInfo `protobuf:"bytes,1,rep,name=livingcategorys" json:"livingcategorys,omitempty"`
}

func (m *LivingCategorysResp) Reset()                    { *m = LivingCategorysResp{} }
func (m *LivingCategorysResp) String() string            { return proto.CompactTextString(m) }
func (*LivingCategorysResp) ProtoMessage()               {}
func (*LivingCategorysResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *LivingCategorysResp) GetLivingcategorys() []*LivingCategoryInfo {
	if m != nil {
		return m.Livingcategorys
	}
	return nil
}

type CarouselInfo struct {
	Id           int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BackgroudURL string `protobuf:"bytes,2,opt,name=backgroudURL" json:"backgroudURL,omitempty"`
	TargetType   int32  `protobuf:"varint,3,opt,name=targetType" json:"targetType,omitempty"`
	TargetURL    string `protobuf:"bytes,4,opt,name=targetURL" json:"targetURL,omitempty"`
	StartTime    int64  `protobuf:"varint,5,opt,name=startTime" json:"startTime,omitempty"`
	EndTime      int64  `protobuf:"varint,6,opt,name=endTime" json:"endTime,omitempty"`
	Channel      string `protobuf:"bytes,7,opt,name=channel" json:"channel,omitempty"`
	Version      string `protobuf:"bytes,8,opt,name=version" json:"version,omitempty"`
	ForUserType  int32  `protobuf:"varint,9,opt,name=forUserType" json:"forUserType,omitempty"`
	Width        int32  `protobuf:"varint,10,opt,name=width" json:"width,omitempty"`
	Height       int32  `protobuf:"varint,11,opt,name=height" json:"height,omitempty"`
	Position     int32  `protobuf:"varint,12,opt,name=position" json:"position,omitempty"`
	Hotlinetype  string `protobuf:"bytes,13,opt,name=hotlinetype" json:"hotlinetype,omitempty"`
}

func (m *CarouselInfo) Reset()                    { *m = CarouselInfo{} }
func (m *CarouselInfo) String() string            { return proto.CompactTextString(m) }
func (*CarouselInfo) ProtoMessage()               {}
func (*CarouselInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *CarouselInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CarouselInfo) GetBackgroudURL() string {
	if m != nil {
		return m.BackgroudURL
	}
	return ""
}

func (m *CarouselInfo) GetTargetType() int32 {
	if m != nil {
		return m.TargetType
	}
	return 0
}

func (m *CarouselInfo) GetTargetURL() string {
	if m != nil {
		return m.TargetURL
	}
	return ""
}

func (m *CarouselInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CarouselInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *CarouselInfo) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *CarouselInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CarouselInfo) GetForUserType() int32 {
	if m != nil {
		return m.ForUserType
	}
	return 0
}

func (m *CarouselInfo) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *CarouselInfo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *CarouselInfo) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *CarouselInfo) GetHotlinetype() string {
	if m != nil {
		return m.Hotlinetype
	}
	return ""
}

type CarouselReq struct {
}

func (m *CarouselReq) Reset()                    { *m = CarouselReq{} }
func (m *CarouselReq) String() string            { return proto.CompactTextString(m) }
func (*CarouselReq) ProtoMessage()               {}
func (*CarouselReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

type CarouselResp struct {
	Carousel []*CarouselInfo `protobuf:"bytes,1,rep,name=carousel" json:"carousel,omitempty"`
}

func (m *CarouselResp) Reset()                    { *m = CarouselResp{} }
func (m *CarouselResp) String() string            { return proto.CompactTextString(m) }
func (*CarouselResp) ProtoMessage()               {}
func (*CarouselResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{7} }

func (m *CarouselResp) GetCarousel() []*CarouselInfo {
	if m != nil {
		return m.Carousel
	}
	return nil
}

type BannerReq struct {
	Typid int64 `protobuf:"varint,1,opt,name=typid" json:"typid,omitempty"`
}

func (m *BannerReq) Reset()                    { *m = BannerReq{} }
func (m *BannerReq) String() string            { return proto.CompactTextString(m) }
func (*BannerReq) ProtoMessage()               {}
func (*BannerReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{8} }

func (m *BannerReq) GetTypid() int64 {
	if m != nil {
		return m.Typid
	}
	return 0
}

type BannerResp struct {
	Carousel []*CarouselInfo `protobuf:"bytes,1,rep,name=carousel" json:"carousel,omitempty"`
}

func (m *BannerResp) Reset()                    { *m = BannerResp{} }
func (m *BannerResp) String() string            { return proto.CompactTextString(m) }
func (*BannerResp) ProtoMessage()               {}
func (*BannerResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{9} }

func (m *BannerResp) GetCarousel() []*CarouselInfo {
	if m != nil {
		return m.Carousel
	}
	return nil
}

type CategoryStickieInfo struct {
	Typeid    int64  `protobuf:"varint,1,opt,name=typeid" json:"typeid,omitempty"`
	Sort      int64  `protobuf:"varint,2,opt,name=sort" json:"sort,omitempty"`
	Roomid    uint64 `protobuf:"varint,3,opt,name=roomid" json:"roomid,omitempty"`
	Starttime int64  `protobuf:"varint,4,opt,name=starttime" json:"starttime,omitempty"`
	Endtime   int64  `protobuf:"varint,5,opt,name=endtime" json:"endtime,omitempty"`
	Id        int64  `protobuf:"varint,6,opt,name=id" json:"id,omitempty"`
}

func (m *CategoryStickieInfo) Reset()                    { *m = CategoryStickieInfo{} }
func (m *CategoryStickieInfo) String() string            { return proto.CompactTextString(m) }
func (*CategoryStickieInfo) ProtoMessage()               {}
func (*CategoryStickieInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{10} }

func (m *CategoryStickieInfo) GetTypeid() int64 {
	if m != nil {
		return m.Typeid
	}
	return 0
}

func (m *CategoryStickieInfo) GetSort() int64 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *CategoryStickieInfo) GetRoomid() uint64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

func (m *CategoryStickieInfo) GetStarttime() int64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *CategoryStickieInfo) GetEndtime() int64 {
	if m != nil {
		return m.Endtime
	}
	return 0
}

func (m *CategoryStickieInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CategoryStickieReq struct {
}

func (m *CategoryStickieReq) Reset()                    { *m = CategoryStickieReq{} }
func (m *CategoryStickieReq) String() string            { return proto.CompactTextString(m) }
func (*CategoryStickieReq) ProtoMessage()               {}
func (*CategoryStickieReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{11} }

type CategoryStickieResp struct {
	Categoryinfo map[uint64]*CategoryStickieInfo `protobuf:"bytes,1,rep,name=categoryinfo" json:"categoryinfo,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CategoryStickieResp) Reset()                    { *m = CategoryStickieResp{} }
func (m *CategoryStickieResp) String() string            { return proto.CompactTextString(m) }
func (*CategoryStickieResp) ProtoMessage()               {}
func (*CategoryStickieResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{12} }

func (m *CategoryStickieResp) GetCategoryinfo() map[uint64]*CategoryStickieInfo {
	if m != nil {
		return m.Categoryinfo
	}
	return nil
}

type CreateCategoryStickieReq struct {
	Info *CategoryStickieInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *CreateCategoryStickieReq) Reset()                    { *m = CreateCategoryStickieReq{} }
func (m *CreateCategoryStickieReq) String() string            { return proto.CompactTextString(m) }
func (*CreateCategoryStickieReq) ProtoMessage()               {}
func (*CreateCategoryStickieReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{13} }

func (m *CreateCategoryStickieReq) GetInfo() *CategoryStickieInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type CreateCategoryStickieResp struct {
}

func (m *CreateCategoryStickieResp) Reset()                    { *m = CreateCategoryStickieResp{} }
func (m *CreateCategoryStickieResp) String() string            { return proto.CompactTextString(m) }
func (*CreateCategoryStickieResp) ProtoMessage()               {}
func (*CreateCategoryStickieResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{14} }

type UpdateCategoryStickieReq struct {
	Info *CategoryStickieInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *UpdateCategoryStickieReq) Reset()                    { *m = UpdateCategoryStickieReq{} }
func (m *UpdateCategoryStickieReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateCategoryStickieReq) ProtoMessage()               {}
func (*UpdateCategoryStickieReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{15} }

func (m *UpdateCategoryStickieReq) GetInfo() *CategoryStickieInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type UpdateCategoryStickieResp struct {
}

func (m *UpdateCategoryStickieResp) Reset()                    { *m = UpdateCategoryStickieResp{} }
func (m *UpdateCategoryStickieResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateCategoryStickieResp) ProtoMessage()               {}
func (*UpdateCategoryStickieResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{16} }

type DelCategoryStickieReq struct {
	Info *CategoryStickieInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *DelCategoryStickieReq) Reset()                    { *m = DelCategoryStickieReq{} }
func (m *DelCategoryStickieReq) String() string            { return proto.CompactTextString(m) }
func (*DelCategoryStickieReq) ProtoMessage()               {}
func (*DelCategoryStickieReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{17} }

func (m *DelCategoryStickieReq) GetInfo() *CategoryStickieInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type DelCategoryStickieResp struct {
}

func (m *DelCategoryStickieResp) Reset()                    { *m = DelCategoryStickieResp{} }
func (m *DelCategoryStickieResp) String() string            { return proto.CompactTextString(m) }
func (*DelCategoryStickieResp) ProtoMessage()               {}
func (*DelCategoryStickieResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{18} }

type AvailableCategoryStickieReq struct {
}

func (m *AvailableCategoryStickieReq) Reset()                    { *m = AvailableCategoryStickieReq{} }
func (m *AvailableCategoryStickieReq) String() string            { return proto.CompactTextString(m) }
func (*AvailableCategoryStickieReq) ProtoMessage()               {}
func (*AvailableCategoryStickieReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{19} }

type AvailableCategoryStickieResp struct {
	Infos []*CategoryStickieInfo `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
}

func (m *AvailableCategoryStickieResp) Reset()                    { *m = AvailableCategoryStickieResp{} }
func (m *AvailableCategoryStickieResp) String() string            { return proto.CompactTextString(m) }
func (*AvailableCategoryStickieResp) ProtoMessage()               {}
func (*AvailableCategoryStickieResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{20} }

func (m *AvailableCategoryStickieResp) GetInfos() []*CategoryStickieInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type CategoryHostRecInfo struct {
	Hostid uint64 `protobuf:"varint,1,opt,name=hostid" json:"hostid,omitempty"`
	Typeid uint64 `protobuf:"varint,2,opt,name=typeid" json:"typeid,omitempty"`
	Id     int64  `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
}

func (m *CategoryHostRecInfo) Reset()                    { *m = CategoryHostRecInfo{} }
func (m *CategoryHostRecInfo) String() string            { return proto.CompactTextString(m) }
func (*CategoryHostRecInfo) ProtoMessage()               {}
func (*CategoryHostRecInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{21} }

func (m *CategoryHostRecInfo) GetHostid() uint64 {
	if m != nil {
		return m.Hostid
	}
	return 0
}

func (m *CategoryHostRecInfo) GetTypeid() uint64 {
	if m != nil {
		return m.Typeid
	}
	return 0
}

func (m *CategoryHostRecInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CategoryHostRecReq struct {
}

func (m *CategoryHostRecReq) Reset()                    { *m = CategoryHostRecReq{} }
func (m *CategoryHostRecReq) String() string            { return proto.CompactTextString(m) }
func (*CategoryHostRecReq) ProtoMessage()               {}
func (*CategoryHostRecReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{22} }

type CategoryHostRecResp struct {
	Cateogryinfos []*CategoryHostRecInfo `protobuf:"bytes,1,rep,name=cateogryinfos" json:"cateogryinfos,omitempty"`
}

func (m *CategoryHostRecResp) Reset()                    { *m = CategoryHostRecResp{} }
func (m *CategoryHostRecResp) String() string            { return proto.CompactTextString(m) }
func (*CategoryHostRecResp) ProtoMessage()               {}
func (*CategoryHostRecResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{23} }

func (m *CategoryHostRecResp) GetCateogryinfos() []*CategoryHostRecInfo {
	if m != nil {
		return m.Cateogryinfos
	}
	return nil
}

type CreateCategoryHostRecReq struct {
	Info *CategoryHostRecInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *CreateCategoryHostRecReq) Reset()                    { *m = CreateCategoryHostRecReq{} }
func (m *CreateCategoryHostRecReq) String() string            { return proto.CompactTextString(m) }
func (*CreateCategoryHostRecReq) ProtoMessage()               {}
func (*CreateCategoryHostRecReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{24} }

func (m *CreateCategoryHostRecReq) GetInfo() *CategoryHostRecInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type CreateCategoryHostRecResp struct {
}

func (m *CreateCategoryHostRecResp) Reset()                    { *m = CreateCategoryHostRecResp{} }
func (m *CreateCategoryHostRecResp) String() string            { return proto.CompactTextString(m) }
func (*CreateCategoryHostRecResp) ProtoMessage()               {}
func (*CreateCategoryHostRecResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{25} }

type UpdateCategoryHostRecReq struct {
	Info *CategoryHostRecInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *UpdateCategoryHostRecReq) Reset()                    { *m = UpdateCategoryHostRecReq{} }
func (m *UpdateCategoryHostRecReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateCategoryHostRecReq) ProtoMessage()               {}
func (*UpdateCategoryHostRecReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{26} }

func (m *UpdateCategoryHostRecReq) GetInfo() *CategoryHostRecInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type UpdateCategoryHostRecResp struct {
}

func (m *UpdateCategoryHostRecResp) Reset()                    { *m = UpdateCategoryHostRecResp{} }
func (m *UpdateCategoryHostRecResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateCategoryHostRecResp) ProtoMessage()               {}
func (*UpdateCategoryHostRecResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{27} }

type DelCategoryHostRecReq struct {
	Info *CategoryHostRecInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *DelCategoryHostRecReq) Reset()                    { *m = DelCategoryHostRecReq{} }
func (m *DelCategoryHostRecReq) String() string            { return proto.CompactTextString(m) }
func (*DelCategoryHostRecReq) ProtoMessage()               {}
func (*DelCategoryHostRecReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{28} }

func (m *DelCategoryHostRecReq) GetInfo() *CategoryHostRecInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type DelCategoryHostRecResp struct {
}

func (m *DelCategoryHostRecResp) Reset()                    { *m = DelCategoryHostRecResp{} }
func (m *DelCategoryHostRecResp) String() string            { return proto.CompactTextString(m) }
func (*DelCategoryHostRecResp) ProtoMessage()               {}
func (*DelCategoryHostRecResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{29} }

type CategoryGuildRecInfo struct {
	Roomid uint64 `protobuf:"varint,1,opt,name=roomid" json:"roomid,omitempty"`
	Typeid uint64 `protobuf:"varint,2,opt,name=typeid" json:"typeid,omitempty"`
	Id     uint64 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
}

func (m *CategoryGuildRecInfo) Reset()                    { *m = CategoryGuildRecInfo{} }
func (m *CategoryGuildRecInfo) String() string            { return proto.CompactTextString(m) }
func (*CategoryGuildRecInfo) ProtoMessage()               {}
func (*CategoryGuildRecInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{30} }

func (m *CategoryGuildRecInfo) GetRoomid() uint64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

func (m *CategoryGuildRecInfo) GetTypeid() uint64 {
	if m != nil {
		return m.Typeid
	}
	return 0
}

func (m *CategoryGuildRecInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CategoryGuildRecReq struct {
}

func (m *CategoryGuildRecReq) Reset()                    { *m = CategoryGuildRecReq{} }
func (m *CategoryGuildRecReq) String() string            { return proto.CompactTextString(m) }
func (*CategoryGuildRecReq) ProtoMessage()               {}
func (*CategoryGuildRecReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{31} }

type CategoryGuildRecResp struct {
	Cateogryguildinfos []*CategoryGuildRecInfo `protobuf:"bytes,1,rep,name=cateogryguildinfos" json:"cateogryguildinfos,omitempty"`
}

func (m *CategoryGuildRecResp) Reset()                    { *m = CategoryGuildRecResp{} }
func (m *CategoryGuildRecResp) String() string            { return proto.CompactTextString(m) }
func (*CategoryGuildRecResp) ProtoMessage()               {}
func (*CategoryGuildRecResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{32} }

func (m *CategoryGuildRecResp) GetCateogryguildinfos() []*CategoryGuildRecInfo {
	if m != nil {
		return m.Cateogryguildinfos
	}
	return nil
}

type UpdateCategoryGuildRecReq struct {
	Info *CategoryGuildRecInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *UpdateCategoryGuildRecReq) Reset()                    { *m = UpdateCategoryGuildRecReq{} }
func (m *UpdateCategoryGuildRecReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateCategoryGuildRecReq) ProtoMessage()               {}
func (*UpdateCategoryGuildRecReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{33} }

func (m *UpdateCategoryGuildRecReq) GetInfo() *CategoryGuildRecInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type UpdateCategoryGuildRecResp struct {
	Info *CategoryGuildRecInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *UpdateCategoryGuildRecResp) Reset()                    { *m = UpdateCategoryGuildRecResp{} }
func (m *UpdateCategoryGuildRecResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateCategoryGuildRecResp) ProtoMessage()               {}
func (*UpdateCategoryGuildRecResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{34} }

func (m *UpdateCategoryGuildRecResp) GetInfo() *CategoryGuildRecInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type CreateCategoryGuildRecReq struct {
	Info *CategoryGuildRecInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *CreateCategoryGuildRecReq) Reset()                    { *m = CreateCategoryGuildRecReq{} }
func (m *CreateCategoryGuildRecReq) String() string            { return proto.CompactTextString(m) }
func (*CreateCategoryGuildRecReq) ProtoMessage()               {}
func (*CreateCategoryGuildRecReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{35} }

func (m *CreateCategoryGuildRecReq) GetInfo() *CategoryGuildRecInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type CreateCategoryGuildRecResp struct {
}

func (m *CreateCategoryGuildRecResp) Reset()                    { *m = CreateCategoryGuildRecResp{} }
func (m *CreateCategoryGuildRecResp) String() string            { return proto.CompactTextString(m) }
func (*CreateCategoryGuildRecResp) ProtoMessage()               {}
func (*CreateCategoryGuildRecResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{36} }

type DelCategoryGuildRecReq struct {
	Info *CategoryGuildRecInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *DelCategoryGuildRecReq) Reset()                    { *m = DelCategoryGuildRecReq{} }
func (m *DelCategoryGuildRecReq) String() string            { return proto.CompactTextString(m) }
func (*DelCategoryGuildRecReq) ProtoMessage()               {}
func (*DelCategoryGuildRecReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{37} }

func (m *DelCategoryGuildRecReq) GetInfo() *CategoryGuildRecInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type DelCategoryGuildRecResp struct {
}

func (m *DelCategoryGuildRecResp) Reset()                    { *m = DelCategoryGuildRecResp{} }
func (m *DelCategoryGuildRecResp) String() string            { return proto.CompactTextString(m) }
func (*DelCategoryGuildRecResp) ProtoMessage()               {}
func (*DelCategoryGuildRecResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{38} }

type GuildRoomInfo struct {
	Id      int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Guildid int64 `protobuf:"varint,2,opt,name=guildid" json:"guildid,omitempty"`
	Roomid  int64 `protobuf:"varint,3,opt,name=roomid" json:"roomid,omitempty"`
}

func (m *GuildRoomInfo) Reset()                    { *m = GuildRoomInfo{} }
func (m *GuildRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*GuildRoomInfo) ProtoMessage()               {}
func (*GuildRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{39} }

func (m *GuildRoomInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GuildRoomInfo) GetGuildid() int64 {
	if m != nil {
		return m.Guildid
	}
	return 0
}

func (m *GuildRoomInfo) GetRoomid() int64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

type GuildRoomSReq struct {
	Info *GuildRoomInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *GuildRoomSReq) Reset()                    { *m = GuildRoomSReq{} }
func (m *GuildRoomSReq) String() string            { return proto.CompactTextString(m) }
func (*GuildRoomSReq) ProtoMessage()               {}
func (*GuildRoomSReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{40} }

func (m *GuildRoomSReq) GetInfo() *GuildRoomInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type GuildRoomSResp struct {
	Info []*GuildRoomInfo `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
}

func (m *GuildRoomSResp) Reset()                    { *m = GuildRoomSResp{} }
func (m *GuildRoomSResp) String() string            { return proto.CompactTextString(m) }
func (*GuildRoomSResp) ProtoMessage()               {}
func (*GuildRoomSResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{41} }

func (m *GuildRoomSResp) GetInfo() []*GuildRoomInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type DelGuildRoomReq struct {
	Info *GuildRoomInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *DelGuildRoomReq) Reset()                    { *m = DelGuildRoomReq{} }
func (m *DelGuildRoomReq) String() string            { return proto.CompactTextString(m) }
func (*DelGuildRoomReq) ProtoMessage()               {}
func (*DelGuildRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{42} }

func (m *DelGuildRoomReq) GetInfo() *GuildRoomInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type DelGuildRoomResp struct {
}

func (m *DelGuildRoomResp) Reset()                    { *m = DelGuildRoomResp{} }
func (m *DelGuildRoomResp) String() string            { return proto.CompactTextString(m) }
func (*DelGuildRoomResp) ProtoMessage()               {}
func (*DelGuildRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{43} }

type CreateGuildRoomReq struct {
	Info *GuildRoomInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *CreateGuildRoomReq) Reset()                    { *m = CreateGuildRoomReq{} }
func (m *CreateGuildRoomReq) String() string            { return proto.CompactTextString(m) }
func (*CreateGuildRoomReq) ProtoMessage()               {}
func (*CreateGuildRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{44} }

func (m *CreateGuildRoomReq) GetInfo() *GuildRoomInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type CreateGuildRoomResp struct {
}

func (m *CreateGuildRoomResp) Reset()                    { *m = CreateGuildRoomResp{} }
func (m *CreateGuildRoomResp) String() string            { return proto.CompactTextString(m) }
func (*CreateGuildRoomResp) ProtoMessage()               {}
func (*CreateGuildRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{45} }

type UserBabgeInfo struct {
	Userid uint64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (m *UserBabgeInfo) Reset()                    { *m = UserBabgeInfo{} }
func (m *UserBabgeInfo) String() string            { return proto.CompactTextString(m) }
func (*UserBabgeInfo) ProtoMessage()               {}
func (*UserBabgeInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{46} }

func (m *UserBabgeInfo) GetUserid() uint64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *UserBabgeInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type UserBabgeReq struct {
}

func (m *UserBabgeReq) Reset()                    { *m = UserBabgeReq{} }
func (m *UserBabgeReq) String() string            { return proto.CompactTextString(m) }
func (*UserBabgeReq) ProtoMessage()               {}
func (*UserBabgeReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{47} }

type UserBabgeResp struct {
	Userbabgeinfo []*UserBabgeInfo `protobuf:"bytes,1,rep,name=userbabgeinfo" json:"userbabgeinfo,omitempty"`
}

func (m *UserBabgeResp) Reset()                    { *m = UserBabgeResp{} }
func (m *UserBabgeResp) String() string            { return proto.CompactTextString(m) }
func (*UserBabgeResp) ProtoMessage()               {}
func (*UserBabgeResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{48} }

func (m *UserBabgeResp) GetUserbabgeinfo() []*UserBabgeInfo {
	if m != nil {
		return m.Userbabgeinfo
	}
	return nil
}

type AppleAuditWordsReq struct {
}

func (m *AppleAuditWordsReq) Reset()                    { *m = AppleAuditWordsReq{} }
func (m *AppleAuditWordsReq) String() string            { return proto.CompactTextString(m) }
func (*AppleAuditWordsReq) ProtoMessage()               {}
func (*AppleAuditWordsReq) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{49} }

type AppleAuditWordsResp struct {
	Auditwords []string `protobuf:"bytes,1,rep,name=auditwords" json:"auditwords,omitempty"`
}

func (m *AppleAuditWordsResp) Reset()                    { *m = AppleAuditWordsResp{} }
func (m *AppleAuditWordsResp) String() string            { return proto.CompactTextString(m) }
func (*AppleAuditWordsResp) ProtoMessage()               {}
func (*AppleAuditWordsResp) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{50} }

func (m *AppleAuditWordsResp) GetAuditwords() []string {
	if m != nil {
		return m.Auditwords
	}
	return nil
}

func init() {
	proto.RegisterType((*GuildInfoReq)(nil), "bilin.confinfocenter.GuildInfoReq")
	proto.RegisterType((*GuildInfoResp)(nil), "bilin.confinfocenter.GuildInfoResp")
	proto.RegisterType((*LivingCategoryInfo)(nil), "bilin.confinfocenter.LivingCategoryInfo")
	proto.RegisterType((*LivingCategorysReq)(nil), "bilin.confinfocenter.LivingCategorysReq")
	proto.RegisterType((*LivingCategorysResp)(nil), "bilin.confinfocenter.LivingCategorysResp")
	proto.RegisterType((*CarouselInfo)(nil), "bilin.confinfocenter.CarouselInfo")
	proto.RegisterType((*CarouselReq)(nil), "bilin.confinfocenter.CarouselReq")
	proto.RegisterType((*CarouselResp)(nil), "bilin.confinfocenter.CarouselResp")
	proto.RegisterType((*BannerReq)(nil), "bilin.confinfocenter.BannerReq")
	proto.RegisterType((*BannerResp)(nil), "bilin.confinfocenter.BannerResp")
	proto.RegisterType((*CategoryStickieInfo)(nil), "bilin.confinfocenter.CategoryStickieInfo")
	proto.RegisterType((*CategoryStickieReq)(nil), "bilin.confinfocenter.CategoryStickieReq")
	proto.RegisterType((*CategoryStickieResp)(nil), "bilin.confinfocenter.CategoryStickieResp")
	proto.RegisterType((*CreateCategoryStickieReq)(nil), "bilin.confinfocenter.CreateCategoryStickieReq")
	proto.RegisterType((*CreateCategoryStickieResp)(nil), "bilin.confinfocenter.CreateCategoryStickieResp")
	proto.RegisterType((*UpdateCategoryStickieReq)(nil), "bilin.confinfocenter.UpdateCategoryStickieReq")
	proto.RegisterType((*UpdateCategoryStickieResp)(nil), "bilin.confinfocenter.UpdateCategoryStickieResp")
	proto.RegisterType((*DelCategoryStickieReq)(nil), "bilin.confinfocenter.DelCategoryStickieReq")
	proto.RegisterType((*DelCategoryStickieResp)(nil), "bilin.confinfocenter.DelCategoryStickieResp")
	proto.RegisterType((*AvailableCategoryStickieReq)(nil), "bilin.confinfocenter.AvailableCategoryStickieReq")
	proto.RegisterType((*AvailableCategoryStickieResp)(nil), "bilin.confinfocenter.AvailableCategoryStickieResp")
	proto.RegisterType((*CategoryHostRecInfo)(nil), "bilin.confinfocenter.CategoryHostRecInfo")
	proto.RegisterType((*CategoryHostRecReq)(nil), "bilin.confinfocenter.CategoryHostRecReq")
	proto.RegisterType((*CategoryHostRecResp)(nil), "bilin.confinfocenter.CategoryHostRecResp")
	proto.RegisterType((*CreateCategoryHostRecReq)(nil), "bilin.confinfocenter.CreateCategoryHostRecReq")
	proto.RegisterType((*CreateCategoryHostRecResp)(nil), "bilin.confinfocenter.CreateCategoryHostRecResp")
	proto.RegisterType((*UpdateCategoryHostRecReq)(nil), "bilin.confinfocenter.UpdateCategoryHostRecReq")
	proto.RegisterType((*UpdateCategoryHostRecResp)(nil), "bilin.confinfocenter.UpdateCategoryHostRecResp")
	proto.RegisterType((*DelCategoryHostRecReq)(nil), "bilin.confinfocenter.DelCategoryHostRecReq")
	proto.RegisterType((*DelCategoryHostRecResp)(nil), "bilin.confinfocenter.DelCategoryHostRecResp")
	proto.RegisterType((*CategoryGuildRecInfo)(nil), "bilin.confinfocenter.CategoryGuildRecInfo")
	proto.RegisterType((*CategoryGuildRecReq)(nil), "bilin.confinfocenter.CategoryGuildRecReq")
	proto.RegisterType((*CategoryGuildRecResp)(nil), "bilin.confinfocenter.CategoryGuildRecResp")
	proto.RegisterType((*UpdateCategoryGuildRecReq)(nil), "bilin.confinfocenter.UpdateCategoryGuildRecReq")
	proto.RegisterType((*UpdateCategoryGuildRecResp)(nil), "bilin.confinfocenter.UpdateCategoryGuildRecResp")
	proto.RegisterType((*CreateCategoryGuildRecReq)(nil), "bilin.confinfocenter.CreateCategoryGuildRecReq")
	proto.RegisterType((*CreateCategoryGuildRecResp)(nil), "bilin.confinfocenter.CreateCategoryGuildRecResp")
	proto.RegisterType((*DelCategoryGuildRecReq)(nil), "bilin.confinfocenter.DelCategoryGuildRecReq")
	proto.RegisterType((*DelCategoryGuildRecResp)(nil), "bilin.confinfocenter.DelCategoryGuildRecResp")
	proto.RegisterType((*GuildRoomInfo)(nil), "bilin.confinfocenter.GuildRoomInfo")
	proto.RegisterType((*GuildRoomSReq)(nil), "bilin.confinfocenter.GuildRoomSReq")
	proto.RegisterType((*GuildRoomSResp)(nil), "bilin.confinfocenter.GuildRoomSResp")
	proto.RegisterType((*DelGuildRoomReq)(nil), "bilin.confinfocenter.DelGuildRoomReq")
	proto.RegisterType((*DelGuildRoomResp)(nil), "bilin.confinfocenter.DelGuildRoomResp")
	proto.RegisterType((*CreateGuildRoomReq)(nil), "bilin.confinfocenter.CreateGuildRoomReq")
	proto.RegisterType((*CreateGuildRoomResp)(nil), "bilin.confinfocenter.CreateGuildRoomResp")
	proto.RegisterType((*UserBabgeInfo)(nil), "bilin.confinfocenter.UserBabgeInfo")
	proto.RegisterType((*UserBabgeReq)(nil), "bilin.confinfocenter.UserBabgeReq")
	proto.RegisterType((*UserBabgeResp)(nil), "bilin.confinfocenter.UserBabgeResp")
	proto.RegisterType((*AppleAuditWordsReq)(nil), "bilin.confinfocenter.AppleAuditWordsReq")
	proto.RegisterType((*AppleAuditWordsResp)(nil), "bilin.confinfocenter.AppleAuditWordsResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for ConfInfoServant service

type ConfInfoServantClient interface {
	//
	// 获取直播间分类信息配置
	LivingCategorys(ctx context.Context, in *LivingCategorysReq, opts ...map[string]string) (*LivingCategorysResp, error)
	//
	// 获取直播的轮播区配置信息
	GetCarousel(ctx context.Context, in *CarouselReq, opts ...map[string]string) (*CarouselResp, error)
	//
	// Banner配置信息的通用接口
	Banner(ctx context.Context, in *BannerReq, opts ...map[string]string) (*BannerResp, error)
	// Deprecated: Use AvailableCategoryStickie instead
	CategoryStickie(ctx context.Context, in *CategoryStickieReq, opts ...map[string]string) (*CategoryStickieResp, error)
	// 创建品类运营置顶区
	CreateCategoryStickie(ctx context.Context, in *CreateCategoryStickieReq, opts ...map[string]string) (*CreateCategoryStickieResp, error)
	// 更新品类运营置顶区
	UpdateCategoryStickie(ctx context.Context, in *UpdateCategoryStickieReq, opts ...map[string]string) (*UpdateCategoryStickieResp, error)
	// 删除品类运营置顶区
	DelCategoryStickie(ctx context.Context, in *DelCategoryStickieReq, opts ...map[string]string) (*DelCategoryStickieResp, error)
	// 返回所有可用的置顶信息
	AvailableCategoryStickie(ctx context.Context, in *AvailableCategoryStickieReq, opts ...map[string]string) (*AvailableCategoryStickieResp, error)
	//
	// 主播品类推荐
	CategoryHostRec(ctx context.Context, in *CategoryHostRecReq, opts ...map[string]string) (*CategoryHostRecResp, error)
	CreateCategoryHostRec(ctx context.Context, in *CreateCategoryHostRecReq, opts ...map[string]string) (*CreateCategoryHostRecResp, error)
	UpdateCategoryHostRec(ctx context.Context, in *UpdateCategoryHostRecReq, opts ...map[string]string) (*UpdateCategoryHostRecResp, error)
	DelCategoryHostRec(ctx context.Context, in *DelCategoryHostRecReq, opts ...map[string]string) (*DelCategoryHostRecResp, error)
	//
	// 工会品类推荐
	CategoryGuildRec(ctx context.Context, in *CategoryGuildRecReq, opts ...map[string]string) (*CategoryGuildRecResp, error)
	UpdateCategoryGuildRec(ctx context.Context, in *UpdateCategoryGuildRecReq, opts ...map[string]string) (*UpdateCategoryGuildRecResp, error)
	CreateCategoryGuildRec(ctx context.Context, in *CreateCategoryGuildRecReq, opts ...map[string]string) (*CreateCategoryGuildRecResp, error)
	//
	// 根据id来软删除，id不能为0，防止删除所有
	DelCategoryGuildRec(ctx context.Context, in *DelCategoryGuildRecReq, opts ...map[string]string) (*DelCategoryGuildRecResp, error)
	// Deprecated: Use guildtars service instead
	GuildRoomS(ctx context.Context, in *GuildRoomSReq, opts ...map[string]string) (*GuildRoomSResp, error)
	DelGuildRoom(ctx context.Context, in *DelGuildRoomReq, opts ...map[string]string) (*DelGuildRoomResp, error)
	CreateGuildRoom(ctx context.Context, in *CreateGuildRoomReq, opts ...map[string]string) (*CreateGuildRoomResp, error)
	//
	// 用户图标icon
	BatchUserBabge(ctx context.Context, in *UserBabgeReq, opts ...map[string]string) (*UserBabgeResp, error)
	//
	// 审核过滤关键字
	AppleAuditWords(ctx context.Context, in *AppleAuditWordsReq, opts ...map[string]string) (*AppleAuditWordsResp, error)
}

type confInfoServantClient struct {
	s model.Servant
}

func NewConfInfoServantClient(objname string, comm servant.ICommunicator) ConfInfoServantClient {
	if comm == nil || objname == "" {
		return nil
	}
	return &confInfoServantClient{s: comm.GetServantProxy(objname)}
}

func (c *confInfoServantClient) LivingCategorys(ctx context.Context, in *LivingCategorysReq, opts ...map[string]string) (*LivingCategorysResp, error) {
	var (
		reply LivingCategorysResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "LivingCategorys", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) GetCarousel(ctx context.Context, in *CarouselReq, opts ...map[string]string) (*CarouselResp, error) {
	var (
		reply CarouselResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GetCarousel", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) Banner(ctx context.Context, in *BannerReq, opts ...map[string]string) (*BannerResp, error) {
	var (
		reply BannerResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "Banner", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) CategoryStickie(ctx context.Context, in *CategoryStickieReq, opts ...map[string]string) (*CategoryStickieResp, error) {
	var (
		reply CategoryStickieResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CategoryStickie", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) CreateCategoryStickie(ctx context.Context, in *CreateCategoryStickieReq, opts ...map[string]string) (*CreateCategoryStickieResp, error) {
	var (
		reply CreateCategoryStickieResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CreateCategoryStickie", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) UpdateCategoryStickie(ctx context.Context, in *UpdateCategoryStickieReq, opts ...map[string]string) (*UpdateCategoryStickieResp, error) {
	var (
		reply UpdateCategoryStickieResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "UpdateCategoryStickie", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) DelCategoryStickie(ctx context.Context, in *DelCategoryStickieReq, opts ...map[string]string) (*DelCategoryStickieResp, error) {
	var (
		reply DelCategoryStickieResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "DelCategoryStickie", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) AvailableCategoryStickie(ctx context.Context, in *AvailableCategoryStickieReq, opts ...map[string]string) (*AvailableCategoryStickieResp, error) {
	var (
		reply AvailableCategoryStickieResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "AvailableCategoryStickie", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) CategoryHostRec(ctx context.Context, in *CategoryHostRecReq, opts ...map[string]string) (*CategoryHostRecResp, error) {
	var (
		reply CategoryHostRecResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CategoryHostRec", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) CreateCategoryHostRec(ctx context.Context, in *CreateCategoryHostRecReq, opts ...map[string]string) (*CreateCategoryHostRecResp, error) {
	var (
		reply CreateCategoryHostRecResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CreateCategoryHostRec", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) UpdateCategoryHostRec(ctx context.Context, in *UpdateCategoryHostRecReq, opts ...map[string]string) (*UpdateCategoryHostRecResp, error) {
	var (
		reply UpdateCategoryHostRecResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "UpdateCategoryHostRec", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) DelCategoryHostRec(ctx context.Context, in *DelCategoryHostRecReq, opts ...map[string]string) (*DelCategoryHostRecResp, error) {
	var (
		reply DelCategoryHostRecResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "DelCategoryHostRec", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) CategoryGuildRec(ctx context.Context, in *CategoryGuildRecReq, opts ...map[string]string) (*CategoryGuildRecResp, error) {
	var (
		reply CategoryGuildRecResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CategoryGuildRec", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) UpdateCategoryGuildRec(ctx context.Context, in *UpdateCategoryGuildRecReq, opts ...map[string]string) (*UpdateCategoryGuildRecResp, error) {
	var (
		reply UpdateCategoryGuildRecResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "UpdateCategoryGuildRec", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) CreateCategoryGuildRec(ctx context.Context, in *CreateCategoryGuildRecReq, opts ...map[string]string) (*CreateCategoryGuildRecResp, error) {
	var (
		reply CreateCategoryGuildRecResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CreateCategoryGuildRec", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) DelCategoryGuildRec(ctx context.Context, in *DelCategoryGuildRecReq, opts ...map[string]string) (*DelCategoryGuildRecResp, error) {
	var (
		reply DelCategoryGuildRecResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "DelCategoryGuildRec", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) GuildRoomS(ctx context.Context, in *GuildRoomSReq, opts ...map[string]string) (*GuildRoomSResp, error) {
	var (
		reply GuildRoomSResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "GuildRoomS", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) DelGuildRoom(ctx context.Context, in *DelGuildRoomReq, opts ...map[string]string) (*DelGuildRoomResp, error) {
	var (
		reply DelGuildRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "DelGuildRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) CreateGuildRoom(ctx context.Context, in *CreateGuildRoomReq, opts ...map[string]string) (*CreateGuildRoomResp, error) {
	var (
		reply CreateGuildRoomResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "CreateGuildRoom", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) BatchUserBabge(ctx context.Context, in *UserBabgeReq, opts ...map[string]string) (*UserBabgeResp, error) {
	var (
		reply UserBabgeResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "BatchUserBabge", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}
func (c *confInfoServantClient) AppleAuditWords(ctx context.Context, in *AppleAuditWordsReq, opts ...map[string]string) (*AppleAuditWordsResp, error) {
	var (
		reply AppleAuditWordsResp
	)

	pbbuf, err := proto.Marshal(in)
	if err != nil {
		return nil, err
	}

	_resp, err := c.s.Taf_invoke(ctx, 0, "AppleAuditWords", pbbuf)
	if err != nil {
		return nil, err
	}

	if err = proto.Unmarshal(_resp.SBuffer, &reply); err != nil {
		return nil, err
	}
	return &reply, nil
}

// Server API for ConfInfoServant service

type ConfInfoServantServer interface {
	//
	// 获取直播间分类信息配置
	LivingCategorys(context.Context, *LivingCategorysReq) (*LivingCategorysResp, error)
	//
	// 获取直播的轮播区配置信息
	GetCarousel(context.Context, *CarouselReq) (*CarouselResp, error)
	//
	// Banner配置信息的通用接口
	Banner(context.Context, *BannerReq) (*BannerResp, error)
	// Deprecated: Use AvailableCategoryStickie instead
	CategoryStickie(context.Context, *CategoryStickieReq) (*CategoryStickieResp, error)
	// 创建品类运营置顶区
	CreateCategoryStickie(context.Context, *CreateCategoryStickieReq) (*CreateCategoryStickieResp, error)
	// 更新品类运营置顶区
	UpdateCategoryStickie(context.Context, *UpdateCategoryStickieReq) (*UpdateCategoryStickieResp, error)
	// 删除品类运营置顶区
	DelCategoryStickie(context.Context, *DelCategoryStickieReq) (*DelCategoryStickieResp, error)
	// 返回所有可用的置顶信息
	AvailableCategoryStickie(context.Context, *AvailableCategoryStickieReq) (*AvailableCategoryStickieResp, error)
	//
	// 主播品类推荐
	CategoryHostRec(context.Context, *CategoryHostRecReq) (*CategoryHostRecResp, error)
	CreateCategoryHostRec(context.Context, *CreateCategoryHostRecReq) (*CreateCategoryHostRecResp, error)
	UpdateCategoryHostRec(context.Context, *UpdateCategoryHostRecReq) (*UpdateCategoryHostRecResp, error)
	DelCategoryHostRec(context.Context, *DelCategoryHostRecReq) (*DelCategoryHostRecResp, error)
	//
	// 工会品类推荐
	CategoryGuildRec(context.Context, *CategoryGuildRecReq) (*CategoryGuildRecResp, error)
	UpdateCategoryGuildRec(context.Context, *UpdateCategoryGuildRecReq) (*UpdateCategoryGuildRecResp, error)
	CreateCategoryGuildRec(context.Context, *CreateCategoryGuildRecReq) (*CreateCategoryGuildRecResp, error)
	//
	// 根据id来软删除，id不能为0，防止删除所有
	DelCategoryGuildRec(context.Context, *DelCategoryGuildRecReq) (*DelCategoryGuildRecResp, error)
	// Deprecated: Use guildtars service instead
	GuildRoomS(context.Context, *GuildRoomSReq) (*GuildRoomSResp, error)
	DelGuildRoom(context.Context, *DelGuildRoomReq) (*DelGuildRoomResp, error)
	CreateGuildRoom(context.Context, *CreateGuildRoomReq) (*CreateGuildRoomResp, error)
	//
	// 用户图标icon
	BatchUserBabge(context.Context, *UserBabgeReq) (*UserBabgeResp, error)
	//
	// 审核过滤关键字
	AppleAuditWords(context.Context, *AppleAuditWordsReq) (*AppleAuditWordsResp, error)
}

type confInfoServantDispatcher struct {
}

func NewConfInfoServantDispatcher() servant.Dispatcher {
	return &confInfoServantDispatcher{}
}

func (_obj *confInfoServantDispatcher) Dispatch(ctx context.Context, _val interface{}, req *taf.RequestPacket) (*taf.ResponsePacket, error) {
	var pbbuf []byte
	_imp := _val.(ConfInfoServantServer)
	switch req.SFuncName {
	case "LivingCategorys":
		var req_ LivingCategorysReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.LivingCategorys(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GetCarousel":
		var req_ CarouselReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GetCarousel(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "Banner":
		var req_ BannerReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.Banner(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CategoryStickie":
		var req_ CategoryStickieReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CategoryStickie(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CreateCategoryStickie":
		var req_ CreateCategoryStickieReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CreateCategoryStickie(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "UpdateCategoryStickie":
		var req_ UpdateCategoryStickieReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.UpdateCategoryStickie(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "DelCategoryStickie":
		var req_ DelCategoryStickieReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.DelCategoryStickie(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "AvailableCategoryStickie":
		var req_ AvailableCategoryStickieReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.AvailableCategoryStickie(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CategoryHostRec":
		var req_ CategoryHostRecReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CategoryHostRec(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CreateCategoryHostRec":
		var req_ CreateCategoryHostRecReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CreateCategoryHostRec(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "UpdateCategoryHostRec":
		var req_ UpdateCategoryHostRecReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.UpdateCategoryHostRec(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "DelCategoryHostRec":
		var req_ DelCategoryHostRecReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.DelCategoryHostRec(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CategoryGuildRec":
		var req_ CategoryGuildRecReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CategoryGuildRec(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "UpdateCategoryGuildRec":
		var req_ UpdateCategoryGuildRecReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.UpdateCategoryGuildRec(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CreateCategoryGuildRec":
		var req_ CreateCategoryGuildRecReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CreateCategoryGuildRec(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "DelCategoryGuildRec":
		var req_ DelCategoryGuildRecReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.DelCategoryGuildRec(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "GuildRoomS":
		var req_ GuildRoomSReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.GuildRoomS(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "DelGuildRoom":
		var req_ DelGuildRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.DelGuildRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "CreateGuildRoom":
		var req_ CreateGuildRoomReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.CreateGuildRoom(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "BatchUserBabge":
		var req_ UserBabgeReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.BatchUserBabge(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	case "AppleAuditWords":
		var req_ AppleAuditWordsReq
		if err := proto.Unmarshal(req.SBuffer, &req_); err != nil {
			return nil, err
		}

		_ret, err := _imp.AppleAuditWords(ctx, &req_)
		if err != nil {
			return nil, err
		}

		if pbbuf, err = proto.Marshal(_ret); err != nil {
			return nil, err
		}

	default:
		return nil, errors.New("unknow func")
	}
	return &taf.ResponsePacket{
		IVersion:   1,
		IRequestId: req.IRequestId,
		SBuffer:    pbbuf,
		Context:    req.Context,
	}, nil
}

func init() { proto.RegisterFile("confinfocenter.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 1402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xed, 0x92, 0x13, 0x45,
	0x17, 0xae, 0x7c, 0x2d, 0xec, 0x49, 0xb2, 0x0b, 0xbd, 0x81, 0x77, 0x18, 0x78, 0x75, 0x69, 0x94,
	0xda, 0x20, 0x2e, 0xba, 0x96, 0xe5, 0x57, 0x89, 0xc5, 0x2e, 0x16, 0xa0, 0xa8, 0xe5, 0xc0, 0x8a,
	0x80, 0x16, 0x35, 0x49, 0x3a, 0xc9, 0xb8, 0xb3, 0xd3, 0xcd, 0x74, 0x67, 0x31, 0xe5, 0x2f, 0x6f,
	0xc1, 0x3b, 0xf0, 0xd6, 0xbc, 0x08, 0x7f, 0xf8, 0xcb, 0xea, 0x9e, 0xaf, 0x9e, 0xaf, 0xcd, 0xa4,
	0x88, 0xff, 0x72, 0x4e, 0x9f, 0x3e, 0xcf, 0xe9, 0x73, 0x9e, 0x9e, 0x79, 0x26, 0xd0, 0x1b, 0x52,
	0x6f, 0xec, 0x78, 0x63, 0x3a, 0x24, 0x9e, 0x20, 0xfe, 0x2e, 0xf3, 0xa9, 0xa0, 0xa8, 0x37, 0x70,
	0x5c, 0xc7, 0xdb, 0x4d, 0xaf, 0xe1, 0xeb, 0xd0, 0xb9, 0x37, 0x73, 0xdc, 0xd1, 0x03, 0x6f, 0x4c,
	0x2d, 0xf2, 0x12, 0x5d, 0x84, 0x35, 0x9f, 0xd2, 0x63, 0x67, 0x64, 0xd4, 0xb6, 0x6b, 0x3b, 0x4d,
	0x2b, 0xb4, 0x70, 0x1f, 0xba, 0x5a, 0x1c, 0x67, 0xc8, 0x80, 0x33, 0x13, 0xe5, 0xb8, 0x1b, 0x46,
	0x46, 0x26, 0xfe, 0xa3, 0x06, 0xe8, 0xa1, 0x73, 0xe2, 0x78, 0x93, 0x03, 0x5b, 0x90, 0x09, 0xf5,
	0xe7, 0x72, 0x93, 0xcc, 0x2c, 0xe6, 0x8c, 0x84, 0x99, 0x1b, 0x56, 0x68, 0x21, 0x04, 0x4d, 0xcf,
	0x3e, 0x26, 0x46, 0x7d, 0xbb, 0xb6, 0xb3, 0x6e, 0xa9, 0xdf, 0xa8, 0x07, 0xad, 0x21, 0x75, 0xa9,
	0x6f, 0x34, 0x94, 0x33, 0x30, 0xd0, 0x75, 0xd8, 0x18, 0xd8, 0xc3, 0xa3, 0x89, 0x4f, 0x67, 0x23,
	0xe7, 0xd8, 0x9e, 0x10, 0xa3, 0xa9, 0x96, 0x33, 0x5e, 0x99, 0x91, 0x53, 0x5f, 0x18, 0x2d, 0x85,
	0xa3, 0x7e, 0xe3, 0x5e, 0xb6, 0x26, 0x6e, 0x91, 0x97, 0xd8, 0x81, 0xad, 0x9c, 0x97, 0x33, 0x64,
	0xc1, 0xa6, 0xab, 0xdc, 0xc3, 0xc8, 0x6d, 0xd4, 0xb6, 0x1b, 0x3b, 0xed, 0xbd, 0x9d, 0xdd, 0xa2,
	0x26, 0xee, 0xe6, 0x4f, 0x6b, 0x65, 0x13, 0xe0, 0x7f, 0xea, 0xd0, 0x39, 0xb0, 0x7d, 0x3a, 0xe3,
	0xc4, 0x55, 0xfd, 0xd8, 0x80, 0x7a, 0xdc, 0x8b, 0xba, 0x33, 0x42, 0x18, 0x3a, 0xf1, 0x39, 0x0e,
	0xad, 0x87, 0x61, 0x3f, 0x52, 0x3e, 0xf4, 0x06, 0x80, 0xb0, 0xfd, 0x09, 0x11, 0x8f, 0xe7, 0x8c,
	0xa8, 0xe6, 0xb4, 0x2c, 0xcd, 0x83, 0xae, 0xc0, 0x7a, 0x60, 0xc9, 0x04, 0x41, 0x73, 0x12, 0x87,
	0x5c, 0xe5, 0xc2, 0xf6, 0xc5, 0x63, 0xe7, 0x98, 0x84, 0xcd, 0x49, 0x1c, 0x72, 0xa0, 0xc4, 0x1b,
	0xa9, 0xb5, 0x35, 0xb5, 0x16, 0x99, 0x72, 0x65, 0x38, 0xb5, 0x3d, 0x8f, 0xb8, 0xc6, 0x19, 0x95,
	0x33, 0x32, 0xe5, 0xca, 0x09, 0xf1, 0xb9, 0x43, 0x3d, 0xe3, 0x6c, 0xb0, 0x12, 0x9a, 0x68, 0x1b,
	0xda, 0x63, 0xea, 0x1f, 0x72, 0xe2, 0xab, 0x52, 0xd7, 0x55, 0xa9, 0xba, 0x4b, 0xce, 0xf8, 0x95,
	0x33, 0x12, 0x53, 0x03, 0xd4, 0x5a, 0x60, 0x48, 0x96, 0x4c, 0x89, 0x33, 0x99, 0x0a, 0xa3, 0xad,
	0xdc, 0xa1, 0x85, 0x4c, 0x38, 0xcb, 0x28, 0x77, 0x84, 0x84, 0xea, 0xa8, 0x95, 0xd8, 0x96, 0x58,
	0x53, 0x2a, 0x5c, 0xc7, 0x23, 0x92, 0x52, 0x46, 0x57, 0x55, 0xa2, 0xbb, 0x70, 0x17, 0xda, 0x51,
	0xef, 0xe5, 0xd8, 0xbf, 0x4d, 0x46, 0xa1, 0xe6, 0x7d, 0x1b, 0xce, 0x0e, 0x43, 0x3b, 0x1c, 0x34,
	0x2e, 0x1e, 0xb4, 0x3e, 0x40, 0x2b, 0xde, 0x83, 0xaf, 0xc2, 0xfa, 0xbe, 0x6c, 0x88, 0x2f, 0x6f,
	0x50, 0x0f, 0x5a, 0x62, 0xce, 0xe2, 0xd1, 0x06, 0x06, 0x7e, 0x08, 0x10, 0x85, 0xac, 0x00, 0xf0,
	0xcf, 0x1a, 0x6c, 0x45, 0x74, 0x7b, 0x24, 0x9c, 0xe1, 0x91, 0x43, 0x16, 0xdd, 0x31, 0x75, 0x23,
	0xea, 0xc9, 0x8d, 0xd0, 0x6e, 0x7a, 0x43, 0xbf, 0xe9, 0x31, 0x4b, 0x84, 0x64, 0x42, 0x53, 0x63,
	0x89, 0x48, 0x58, 0x22, 0x12, 0x06, 0x45, 0x66, 0xc8, 0xe7, 0xb5, 0x88, 0xcf, 0xf2, 0xc6, 0x65,
	0x4a, 0x94, 0xad, 0xff, 0x2b, 0x5f, 0xb9, 0xea, 0xc8, 0x0b, 0xe8, 0x44, 0x77, 0x45, 0x1e, 0x3f,
	0xec, 0xca, 0x67, 0x65, 0x5d, 0xc9, 0x25, 0x88, 0x7d, 0x32, 0xec, 0x4b, 0x4f, 0xf8, 0x73, 0x2b,
	0x95, 0xd0, 0xfc, 0x05, 0xce, 0xe7, 0x42, 0xd0, 0x39, 0x68, 0x1c, 0x91, 0x79, 0xf8, 0x00, 0x93,
	0x3f, 0xd1, 0x17, 0xd0, 0x3a, 0xb1, 0xdd, 0x59, 0xf0, 0x38, 0x6a, 0xef, 0xf5, 0x2b, 0x15, 0xa0,
	0xa6, 0x13, 0xec, 0xfb, 0xb4, 0xfe, 0x71, 0x0d, 0x3f, 0x05, 0xe3, 0xc0, 0x27, 0xb6, 0x20, 0xf9,
	0x06, 0xa0, 0xcf, 0xa1, 0x19, 0x1e, 0x70, 0xc9, 0xfc, 0x6a, 0x1b, 0xbe, 0x0c, 0x97, 0x4a, 0x52,
	0x73, 0x26, 0x71, 0x0f, 0xd9, 0xe8, 0xbf, 0xc2, 0x2d, 0x49, 0xcd, 0x19, 0xfe, 0x01, 0x2e, 0xdc,
	0x25, 0xee, 0xea, 0x41, 0x0d, 0xb8, 0x58, 0x94, 0x97, 0x33, 0xfc, 0x7f, 0xb8, 0x7c, 0xe7, 0xc4,
	0x76, 0x5c, 0x7b, 0xe0, 0x16, 0x1c, 0x16, 0xbf, 0x80, 0x2b, 0xe5, 0xcb, 0x9c, 0xc9, 0x29, 0x4b,
	0x80, 0xe8, 0xb1, 0xbe, 0xcc, 0x94, 0xd5, 0x3e, 0x7c, 0x98, 0xb0, 0xf8, 0x3e, 0xe5, 0xc2, 0x22,
	0xc3, 0xe8, 0xfe, 0x4d, 0x29, 0x17, 0xc9, 0xdb, 0x33, 0xb0, 0xb4, 0x7b, 0x59, 0x0f, 0xfc, 0xe1,
	0xbd, 0x0c, 0xee, 0x4c, 0xa3, 0xe8, 0xce, 0x84, 0x69, 0xe5, 0x69, 0xc6, 0x39, 0x30, 0x75, 0x88,
	0xef, 0xa0, 0x2b, 0x19, 0x4e, 0x27, 0x01, 0xa3, 0x2b, 0x1e, 0x46, 0x2b, 0xd7, 0x4a, 0xef, 0xcf,
	0xd3, 0x36, 0xa9, 0x61, 0xb9, 0x49, 0xea, 0x18, 0x25, 0xb4, 0xd5, 0x0e, 0x92, 0xa7, 0xed, 0x4a,
	0x71, 0x4b, 0x52, 0xe7, 0x68, 0xbb, 0x3a, 0xd0, 0x34, 0x6d, 0xd3, 0x88, 0xbd, 0xc8, 0xad, 0xd4,
	0x94, 0xc6, 0x9b, 0x22, 0xd5, 0x55, 0x81, 0x37, 0x4d, 0xc5, 0x9b, 0x0b, 0x09, 0x43, 0xa2, 0xbc,
	0x92, 0x38, 0x7e, 0x1e, 0x4e, 0x31, 0xe7, 0x19, 0xa0, 0x68, 0xf2, 0x4a, 0xb4, 0xe9, 0xf4, 0xb9,
	0x71, 0xfa, 0x69, 0xf5, 0xb2, 0xad, 0x82, 0x2c, 0xf8, 0x79, 0xb6, 0xe3, 0x5a, 0x41, 0xe8, 0x76,
	0xaa, 0xb1, 0xcb, 0x40, 0x05, 0x9d, 0xfd, 0x09, 0xcc, 0xb2, 0xe4, 0xea, 0xad, 0xfa, 0x7a, 0xd9,
	0x9f, 0x67, 0x49, 0xba, 0xca, 0xd2, 0xaf, 0x80, 0x59, 0x96, 0x9c, 0x33, 0xfc, 0x63, 0x8a, 0x32,
	0xab, 0xc4, 0xbd, 0x04, 0xff, 0x2b, 0xcc, 0xcc, 0x19, 0xfe, 0x3e, 0xd4, 0xf4, 0x16, 0xa5, 0xc7,
	0x85, 0x92, 0x34, 0xd2, 0xf8, 0x21, 0xff, 0x1a, 0x56, 0x64, 0x66, 0xc4, 0x43, 0x23, 0xfe, 0x4c,
	0xb8, 0xaf, 0xa5, 0x7c, 0x24, 0xcb, 0xff, 0x28, 0x55, 0xfe, 0xb5, 0xe2, 0xf2, 0x53, 0x55, 0x84,
	0x75, 0x3f, 0x80, 0x0d, 0x3d, 0x13, 0x67, 0x5a, 0xaa, 0xc6, 0x72, 0xa9, 0xbe, 0x82, 0xcd, 0xbb,
	0xc4, 0x8d, 0x57, 0x5e, 0xab, 0x2c, 0x04, 0xe7, 0xd2, 0xb9, 0x38, 0xc3, 0xdf, 0x00, 0x0a, 0x46,
	0xbb, 0x1a, 0x08, 0x79, 0x99, 0xb3, 0xe9, 0x38, 0xc3, 0x9f, 0x40, 0x57, 0x6a, 0xe7, 0x7d, 0x7b,
	0x30, 0x89, 0xc5, 0xde, 0x8c, 0x13, 0x3f, 0x79, 0x68, 0x04, 0x96, 0x14, 0x35, 0x33, 0xdf, 0x0d,
	0xbf, 0x1f, 0xe4, 0x4f, 0xbc, 0x01, 0x9d, 0x78, 0xab, 0x7c, 0x2e, 0x3c, 0xd3, 0x52, 0xa9, 0xd6,
	0x3e, 0x80, 0xae, 0xdc, 0x3c, 0x90, 0x8e, 0xc5, 0x3d, 0x4e, 0x95, 0x61, 0xa5, 0x77, 0xca, 0x57,
	0xd8, 0x1d, 0xc6, 0x5c, 0x72, 0x67, 0x36, 0x72, 0xc4, 0x13, 0xea, 0x8f, 0xd4, 0x87, 0xd6, 0x87,
	0xb0, 0x95, 0xf3, 0x72, 0x26, 0xbf, 0x67, 0x6c, 0xe9, 0x79, 0x25, 0x3d, 0x0a, 0x74, 0xdd, 0xd2,
	0x3c, 0x7b, 0x7f, 0x9f, 0x87, 0xcd, 0x03, 0xea, 0x8d, 0x25, 0xd0, 0x23, 0xe2, 0x9f, 0xd8, 0x9e,
	0x40, 0x63, 0xd8, 0xcc, 0x7c, 0xb3, 0xa1, 0x4a, 0x9f, 0x65, 0xb2, 0x0e, 0xb3, 0x5f, 0x31, 0x92,
	0x33, 0xf4, 0x18, 0xda, 0xf7, 0x88, 0x88, 0x04, 0x38, 0xba, 0x7a, 0xba, 0x40, 0x97, 0xc9, 0xf1,
	0xa2, 0x10, 0xce, 0xd0, 0xd7, 0xb0, 0x16, 0x7c, 0x07, 0xa0, 0x37, 0x8b, 0xa3, 0xe3, 0x0f, 0x09,
	0x73, 0xfb, 0xf4, 0x00, 0xce, 0x64, 0x2b, 0x32, 0x1a, 0xa5, 0xac, 0x15, 0x79, 0x8d, 0x64, 0xf6,
	0x2b, 0x6b, 0x6b, 0xf4, 0x2b, 0x5c, 0x28, 0x14, 0x9d, 0x68, 0xb7, 0x24, 0x47, 0x89, 0xf8, 0x35,
	0x6f, 0x2d, 0x15, 0x1f, 0x20, 0x17, 0xca, 0xce, 0x32, 0xe4, 0x32, 0xf9, 0x5b, 0x86, 0x5c, 0xaa,
	0x69, 0x11, 0x05, 0x94, 0xd7, 0x9e, 0xe8, 0x9d, 0xe2, 0x34, 0x85, 0xea, 0xd7, 0xbc, 0x59, 0x3d,
	0x98, 0x33, 0xf4, 0x7b, 0x0d, 0x8c, 0x32, 0xd1, 0x8a, 0xde, 0x2f, 0x4e, 0x75, 0x8a, 0x06, 0x36,
	0xf7, 0x96, 0xdd, 0x92, 0x26, 0x54, 0x28, 0x5b, 0x16, 0x11, 0x2a, 0x51, 0x4d, 0x66, 0xbf, 0x62,
	0x64, 0x11, 0xa1, 0x22, 0xb4, 0x4a, 0x84, 0xd2, 0x30, 0x6f, 0x2d, 0x15, 0x5f, 0x44, 0xa8, 0x05,
	0xc8, 0x65, 0xc2, 0xb4, 0x1a, 0xa1, 0x74, 0xe4, 0x34, 0xa1, 0x22, 0xd8, 0xc5, 0x84, 0xd2, 0x30,
	0x6f, 0x56, 0x0f, 0xe6, 0x0c, 0x39, 0x70, 0x2e, 0xfb, 0xda, 0x47, 0xfd, 0x6a, 0xfa, 0x41, 0x82,
	0xdd, 0xa8, 0x1a, 0xca, 0x19, 0xfa, 0x0d, 0x2e, 0x16, 0xeb, 0x32, 0x54, 0xa9, 0x4d, 0x3a, 0xec,
	0x7b, 0xcb, 0x6d, 0x08, 0xc0, 0x8b, 0x95, 0x15, 0xaa, 0xc4, 0x8e, 0x0a, 0xe0, 0xe5, 0xc2, 0x0d,
	0xf9, 0xb0, 0x55, 0x20, 0xaf, 0xd0, 0xe2, 0x49, 0xe9, 0xb0, 0xef, 0x2e, 0x11, 0xcd, 0x19, 0x7a,
	0x02, 0x90, 0x48, 0x23, 0xb4, 0x48, 0x59, 0x48, 0x19, 0x66, 0xbe, 0xb5, 0x38, 0x88, 0x33, 0xf4,
	0x33, 0x74, 0x74, 0x71, 0x83, 0xde, 0x2e, 0xad, 0x4b, 0x57, 0x3a, 0xe6, 0xf5, 0x2a, 0x61, 0xe1,
	0xd3, 0x25, 0x2d, 0x6c, 0x4a, 0x9f, 0x2e, 0x39, 0x39, 0x55, 0xfa, 0x74, 0xc9, 0x2b, 0x25, 0xf4,
	0x14, 0x36, 0xf6, 0x6d, 0x31, 0x9c, 0xc6, 0x3a, 0x05, 0xe1, 0x05, 0x42, 0x46, 0x02, 0x5c, 0x5b,
	0x18, 0x13, 0x1c, 0x21, 0xa3, 0x63, 0xca, 0x8e, 0x90, 0x17, 0x41, 0x65, 0x47, 0x28, 0x10, 0x46,
	0xfb, 0x67, 0x9e, 0xb5, 0x54, 0xec, 0x60, 0x4d, 0xfd, 0x79, 0xff, 0xc1, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x25, 0x6c, 0xf7, 0x04, 0xd4, 0x17, 0x00, 0x00,
}
