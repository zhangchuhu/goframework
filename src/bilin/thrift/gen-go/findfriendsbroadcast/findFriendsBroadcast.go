// Autogenerated by Thrift Compiler (0.11.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package findfriendsbroadcast

import (
	"bytes"
	"reflect"
	"context"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
    "bilin/thrift/gen-go/common"

)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = context.Background
var _ = reflect.DeepEqual
var _ = bytes.Equal

var _ = common.GoUnusedProtection__
// Attributes:
//  - Result_
//  - ErrorMsg
type OfflineFindFriendsBroadcastRet struct {
  Result_ string `thrift:"result,1,required" db:"result" json:"result"`
  ErrorMsg *string `thrift:"errorMsg,2" db:"errorMsg" json:"errorMsg,omitempty"`
}

func NewOfflineFindFriendsBroadcastRet() *OfflineFindFriendsBroadcastRet {
  return &OfflineFindFriendsBroadcastRet{}
}


func (p *OfflineFindFriendsBroadcastRet) GetResult_() string {
  return p.Result_
}
var OfflineFindFriendsBroadcastRet_ErrorMsg_DEFAULT string
func (p *OfflineFindFriendsBroadcastRet) GetErrorMsg() string {
  if !p.IsSetErrorMsg() {
    return OfflineFindFriendsBroadcastRet_ErrorMsg_DEFAULT
  }
return *p.ErrorMsg
}
func (p *OfflineFindFriendsBroadcastRet) IsSetErrorMsg() bool {
  return p.ErrorMsg != nil
}

func (p *OfflineFindFriendsBroadcastRet) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }

  var issetResult_ bool = false;

  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
      issetResult_ = true
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  if !issetResult_{
    return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field Result_ is not set"));
  }
  return nil
}

func (p *OfflineFindFriendsBroadcastRet)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.Result_ = v
}
  return nil
}

func (p *OfflineFindFriendsBroadcastRet)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.ErrorMsg = &v
}
  return nil
}

func (p *OfflineFindFriendsBroadcastRet) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("OfflineFindFriendsBroadcastRet"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *OfflineFindFriendsBroadcastRet) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("result", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:result: ", p), err) }
  if err := oprot.WriteString(string(p.Result_)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.result (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:result: ", p), err) }
  return err
}

func (p *OfflineFindFriendsBroadcastRet) writeField2(oprot thrift.TProtocol) (err error) {
  if p.IsSetErrorMsg() {
    if err := oprot.WriteFieldBegin("errorMsg", thrift.STRING, 2); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:errorMsg: ", p), err) }
    if err := oprot.WriteString(string(*p.ErrorMsg)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.errorMsg (2) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 2:errorMsg: ", p), err) }
  }
  return err
}

func (p *OfflineFindFriendsBroadcastRet) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("OfflineFindFriendsBroadcastRet(%+v)", *p)
}

type FindFriendsBroadcastService interface {
  common.BaseService

  // Parameters:
  //  - UserIdList
  OfflineFindFriendsBroadcastByUserIdList(ctx context.Context, userIdList []int64) (r *OfflineFindFriendsBroadcastRet, err error)
}

type FindFriendsBroadcastServiceClient struct {
  c thrift.TClient
  *common.BaseServiceClient
}

// Deprecated: Use NewFindFriendsBroadcastService instead
func NewFindFriendsBroadcastServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *FindFriendsBroadcastServiceClient {
  return &FindFriendsBroadcastServiceClient{BaseServiceClient: common.NewBaseServiceClientFactory(t, f)}}

// Deprecated: Use NewFindFriendsBroadcastService instead
func NewFindFriendsBroadcastServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *FindFriendsBroadcastServiceClient {
  return &FindFriendsBroadcastServiceClient{BaseServiceClient: common.NewBaseServiceClientProtocol(t, iprot, oprot)}
}

func NewFindFriendsBroadcastServiceClient(c thrift.TClient) *FindFriendsBroadcastServiceClient {
  return &FindFriendsBroadcastServiceClient{
    c: c,
    BaseServiceClient: common.NewBaseServiceClient(c),
  }
}

// Parameters:
//  - UserIdList
func (p *FindFriendsBroadcastServiceClient) OfflineFindFriendsBroadcastByUserIdList(ctx context.Context, userIdList []int64) (r *OfflineFindFriendsBroadcastRet, err error) {
  var _args0 FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs
  _args0.UserIdList = userIdList
  var _result1 FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult
  if err = p.c.Call(ctx, "offlineFindFriendsBroadcastByUserIdList", &_args0, &_result1); err != nil {
    return
  }
  return _result1.GetSuccess(), nil
}

type FindFriendsBroadcastServiceProcessor struct {
  *common.BaseServiceProcessor
}

func NewFindFriendsBroadcastServiceProcessor(handler FindFriendsBroadcastService) *FindFriendsBroadcastServiceProcessor {
  self2 := &FindFriendsBroadcastServiceProcessor{common.NewBaseServiceProcessor(handler)}
  self2.AddToProcessorMap("offlineFindFriendsBroadcastByUserIdList", &findFriendsBroadcastServiceProcessorOfflineFindFriendsBroadcastByUserIdList{handler:handler})
  return self2
}

type findFriendsBroadcastServiceProcessorOfflineFindFriendsBroadcastByUserIdList struct {
  handler FindFriendsBroadcastService
}

func (p *findFriendsBroadcastServiceProcessorOfflineFindFriendsBroadcastByUserIdList) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("offlineFindFriendsBroadcastByUserIdList", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult{}
var retval *OfflineFindFriendsBroadcastRet
  var err2 error
  if retval, err2 = p.handler.OfflineFindFriendsBroadcastByUserIdList(ctx, args.UserIdList); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing offlineFindFriendsBroadcastByUserIdList: " + err2.Error())
    oprot.WriteMessageBegin("offlineFindFriendsBroadcastByUserIdList", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("offlineFindFriendsBroadcastByUserIdList", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}


// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - UserIdList
type FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs struct {
  UserIdList []int64 `thrift:"userIdList,1" db:"userIdList" json:"userIdList"`
}

func NewFindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs() *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs {
  return &FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs{}
}


func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs) GetUserIdList() []int64 {
  return p.UserIdList
}
func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.LIST {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs)  ReadField1(iprot thrift.TProtocol) error {
  _, size, err := iprot.ReadListBegin()
  if err != nil {
    return thrift.PrependError("error reading list begin: ", err)
  }
  tSlice := make([]int64, 0, size)
  p.UserIdList =  tSlice
  for i := 0; i < size; i ++ {
var _elem3 int64
    if v, err := iprot.ReadI64(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _elem3 = v
}
    p.UserIdList = append(p.UserIdList, _elem3)
  }
  if err := iprot.ReadListEnd(); err != nil {
    return thrift.PrependError("error reading list end: ", err)
  }
  return nil
}

func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("offlineFindFriendsBroadcastByUserIdList_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("userIdList", thrift.LIST, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:userIdList: ", p), err) }
  if err := oprot.WriteListBegin(thrift.I64, len(p.UserIdList)); err != nil {
    return thrift.PrependError("error writing list begin: ", err)
  }
  for _, v := range p.UserIdList {
    if err := oprot.WriteI64(int64(v)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
  }
  if err := oprot.WriteListEnd(); err != nil {
    return thrift.PrependError("error writing list end: ", err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:userIdList: ", p), err) }
  return err
}

func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListArgs(%+v)", *p)
}

// Attributes:
//  - Success
type FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult struct {
  Success *OfflineFindFriendsBroadcastRet `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewFindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult() *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult {
  return &FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult{}
}

var FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult_Success_DEFAULT *OfflineFindFriendsBroadcastRet
func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult) GetSuccess() *OfflineFindFriendsBroadcastRet {
  if !p.IsSetSuccess() {
    return FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult_Success_DEFAULT
  }
return p.Success
}
func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.STRUCT {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult)  ReadField0(iprot thrift.TProtocol) error {
  p.Success = &OfflineFindFriendsBroadcastRet{}
  if err := p.Success.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
  }
  return nil
}

func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("offlineFindFriendsBroadcastByUserIdList_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := p.Success.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("FindFriendsBroadcastServiceOfflineFindFriendsBroadcastByUserIdListResult(%+v)", *p)
}


