// Code generated by protoc-gen-go. DO NOT EDIT.
// source: header.proto

package pbtaf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RequestPacket_PacketType int32

const (
	RequestPacket_TARSNORMAL RequestPacket_PacketType = 0
	RequestPacket_TARSONEWAY RequestPacket_PacketType = 1
)

var RequestPacket_PacketType_name = map[int32]string{
	0: "TARSNORMAL",
	1: "TARSONEWAY",
}
var RequestPacket_PacketType_value = map[string]int32{
	"TARSNORMAL": 0,
	"TARSONEWAY": 1,
}

func (x RequestPacket_PacketType) String() string {
	return proto.EnumName(RequestPacket_PacketType_name, int32(x))
}
func (RequestPacket_PacketType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type ResponsePacket_PacketType int32

const (
	ResponsePacket_TARSNORMAL ResponsePacket_PacketType = 0
	ResponsePacket_TARSONEWAY ResponsePacket_PacketType = 1
)

var ResponsePacket_PacketType_name = map[int32]string{
	0: "TARSNORMAL",
	1: "TARSONEWAY",
}
var ResponsePacket_PacketType_value = map[string]int32{
	"TARSNORMAL": 0,
	"TARSONEWAY": 1,
}

func (x ResponsePacket_PacketType) String() string {
	return proto.EnumName(ResponsePacket_PacketType_name, int32(x))
}
func (ResponsePacket_PacketType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

type RequestPacket struct {
	IVersion     int32                    `protobuf:"varint,1,opt,name=IVersion" json:"IVersion,omitempty"`
	CPacketType  RequestPacket_PacketType `protobuf:"varint,2,opt,name=CPacketType,enum=pbtaf.RequestPacket_PacketType" json:"CPacketType,omitempty"`
	IMessageType int32                    `protobuf:"varint,3,opt,name=IMessageType" json:"IMessageType,omitempty"`
	IRequestId   int32                    `protobuf:"varint,4,opt,name=IRequestId" json:"IRequestId,omitempty"`
	SServantName string                   `protobuf:"bytes,5,opt,name=SServantName" json:"SServantName,omitempty"`
	SFuncName    string                   `protobuf:"bytes,6,opt,name=SFuncName" json:"SFuncName,omitempty"`
	SBuffer      []byte                   `protobuf:"bytes,7,opt,name=SBuffer,proto3" json:"SBuffer,omitempty"`
	ITimeout     int32                    `protobuf:"varint,8,opt,name=ITimeout" json:"ITimeout,omitempty"`
	Context      map[string]string        `protobuf:"bytes,9,rep,name=Context" json:"Context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status       map[string]string        `protobuf:"bytes,10,rep,name=Status" json:"Status,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RequestPacket) Reset()                    { *m = RequestPacket{} }
func (m *RequestPacket) String() string            { return proto.CompactTextString(m) }
func (*RequestPacket) ProtoMessage()               {}
func (*RequestPacket) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *RequestPacket) GetIVersion() int32 {
	if m != nil {
		return m.IVersion
	}
	return 0
}

func (m *RequestPacket) GetCPacketType() RequestPacket_PacketType {
	if m != nil {
		return m.CPacketType
	}
	return RequestPacket_TARSNORMAL
}

func (m *RequestPacket) GetIMessageType() int32 {
	if m != nil {
		return m.IMessageType
	}
	return 0
}

func (m *RequestPacket) GetIRequestId() int32 {
	if m != nil {
		return m.IRequestId
	}
	return 0
}

func (m *RequestPacket) GetSServantName() string {
	if m != nil {
		return m.SServantName
	}
	return ""
}

func (m *RequestPacket) GetSFuncName() string {
	if m != nil {
		return m.SFuncName
	}
	return ""
}

func (m *RequestPacket) GetSBuffer() []byte {
	if m != nil {
		return m.SBuffer
	}
	return nil
}

func (m *RequestPacket) GetITimeout() int32 {
	if m != nil {
		return m.ITimeout
	}
	return 0
}

func (m *RequestPacket) GetContext() map[string]string {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *RequestPacket) GetStatus() map[string]string {
	if m != nil {
		return m.Status
	}
	return nil
}

type ResponsePacket struct {
	IVersion     int32                     `protobuf:"varint,1,opt,name=IVersion" json:"IVersion,omitempty"`
	CPacketType  ResponsePacket_PacketType `protobuf:"varint,2,opt,name=CPacketType,enum=pbtaf.ResponsePacket_PacketType" json:"CPacketType,omitempty"`
	IRequestId   int32                     `protobuf:"varint,3,opt,name=IRequestId" json:"IRequestId,omitempty"`
	IMessageType int32                     `protobuf:"varint,4,opt,name=IMessageType" json:"IMessageType,omitempty"`
	IRet         int32                     `protobuf:"varint,5,opt,name=IRet" json:"IRet,omitempty"`
	SBuffer      []byte                    `protobuf:"bytes,6,opt,name=SBuffer,proto3" json:"SBuffer,omitempty"`
	Status       map[string]string         `protobuf:"bytes,7,rep,name=Status" json:"Status,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SResultDesc  string                    `protobuf:"bytes,8,opt,name=SResultDesc" json:"SResultDesc,omitempty"`
	Context      map[string]string         `protobuf:"bytes,9,rep,name=Context" json:"Context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ResponsePacket) Reset()                    { *m = ResponsePacket{} }
func (m *ResponsePacket) String() string            { return proto.CompactTextString(m) }
func (*ResponsePacket) ProtoMessage()               {}
func (*ResponsePacket) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ResponsePacket) GetIVersion() int32 {
	if m != nil {
		return m.IVersion
	}
	return 0
}

func (m *ResponsePacket) GetCPacketType() ResponsePacket_PacketType {
	if m != nil {
		return m.CPacketType
	}
	return ResponsePacket_TARSNORMAL
}

func (m *ResponsePacket) GetIRequestId() int32 {
	if m != nil {
		return m.IRequestId
	}
	return 0
}

func (m *ResponsePacket) GetIMessageType() int32 {
	if m != nil {
		return m.IMessageType
	}
	return 0
}

func (m *ResponsePacket) GetIRet() int32 {
	if m != nil {
		return m.IRet
	}
	return 0
}

func (m *ResponsePacket) GetSBuffer() []byte {
	if m != nil {
		return m.SBuffer
	}
	return nil
}

func (m *ResponsePacket) GetStatus() map[string]string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ResponsePacket) GetSResultDesc() string {
	if m != nil {
		return m.SResultDesc
	}
	return ""
}

func (m *ResponsePacket) GetContext() map[string]string {
	if m != nil {
		return m.Context
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestPacket)(nil), "pbtaf.RequestPacket")
	proto.RegisterType((*ResponsePacket)(nil), "pbtaf.ResponsePacket")
	proto.RegisterEnum("pbtaf.RequestPacket_PacketType", RequestPacket_PacketType_name, RequestPacket_PacketType_value)
	proto.RegisterEnum("pbtaf.ResponsePacket_PacketType", ResponsePacket_PacketType_name, ResponsePacket_PacketType_value)
}

func init() { proto.RegisterFile("header.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x14, 0x85, 0x71, 0xe3, 0x9f, 0xfa, 0xda, 0x44, 0xd1, 0x88, 0xc5, 0x28, 0x42, 0x60, 0xbc, 0xf2,
	0x02, 0x79, 0x51, 0x36, 0x6d, 0x61, 0xe3, 0x96, 0x22, 0x59, 0xa2, 0x29, 0x1a, 0x47, 0x20, 0x96,
	0xd3, 0xf4, 0x06, 0xaa, 0xb6, 0xb6, 0xf1, 0x8c, 0x2b, 0xf2, 0x3a, 0x3c, 0x0c, 0xcf, 0x85, 0x3a,
	0x76, 0x9a, 0x71, 0x35, 0x48, 0xad, 0xb2, 0x9b, 0x7b, 0x75, 0xce, 0xb1, 0xc7, 0xe7, 0x93, 0x21,
	0xfc, 0x89, 0xfc, 0x02, 0x9b, 0xb4, 0x6e, 0x2a, 0x59, 0x11, 0xa7, 0x3e, 0x97, 0x7c, 0x19, 0xff,
	0xb5, 0xe1, 0x39, 0xc3, 0x5f, 0x2d, 0x0a, 0xf9, 0x85, 0x2f, 0xae, 0x50, 0x92, 0x29, 0xec, 0xe6,
	0x5f, 0xb1, 0x11, 0x97, 0x55, 0x49, 0xad, 0xc8, 0x4a, 0x1c, 0x76, 0x3f, 0x93, 0x0c, 0x82, 0xe3,
	0x4e, 0x36, 0x5f, 0xd5, 0x48, 0x77, 0x22, 0x2b, 0x19, 0xef, 0xbd, 0x4e, 0x55, 0x54, 0x3a, 0x88,
	0x49, 0x37, 0x32, 0xa6, 0x7b, 0x48, 0x0c, 0x61, 0x7e, 0x8a, 0x42, 0xf0, 0x1f, 0xa8, 0x32, 0x46,
	0xea, 0x11, 0x83, 0x1d, 0x79, 0x05, 0x90, 0xf7, 0x69, 0xf9, 0x05, 0xb5, 0x95, 0x42, 0xdb, 0xdc,
	0x65, 0x14, 0x05, 0x36, 0xb7, 0xbc, 0x94, 0x33, 0x7e, 0x83, 0xd4, 0x89, 0xac, 0xc4, 0x67, 0x83,
	0x1d, 0x79, 0x09, 0x7e, 0xf1, 0xa9, 0x2d, 0x17, 0x4a, 0xe0, 0x2a, 0xc1, 0x66, 0x41, 0x28, 0x78,
	0xc5, 0x51, 0xbb, 0x5c, 0x62, 0x43, 0xbd, 0xc8, 0x4a, 0x42, 0xb6, 0x1e, 0xd5, 0xf5, 0xe7, 0x97,
	0x37, 0x58, 0xb5, 0x92, 0xee, 0xf6, 0xd7, 0xef, 0x67, 0xf2, 0x1e, 0xbc, 0xe3, 0xaa, 0x94, 0xf8,
	0x5b, 0x52, 0x3f, 0x1a, 0x25, 0xc1, 0xde, 0x1b, 0xe3, 0xd5, 0x7b, 0xcd, 0x49, 0x29, 0x9b, 0x15,
	0x5b, 0x3b, 0xc8, 0x3e, 0xb8, 0x85, 0xe4, 0xb2, 0x15, 0x14, 0x94, 0x37, 0x32, 0x7a, 0x3b, 0x49,
	0x67, 0xed, 0xf5, 0xd3, 0x43, 0x08, 0xf5, 0x48, 0x32, 0x81, 0xd1, 0x15, 0xae, 0x54, 0x39, 0x3e,
	0xbb, 0x3b, 0x92, 0x17, 0xe0, 0xdc, 0xf2, 0xeb, 0xb6, 0x6b, 0xc4, 0x67, 0xdd, 0x70, 0xb8, 0xb3,
	0x6f, 0x4d, 0x0f, 0x20, 0xd0, 0x22, 0x9f, 0x62, 0x8d, 0xdf, 0x02, 0x68, 0xbd, 0x8d, 0x01, 0xe6,
	0x19, 0x2b, 0x66, 0x67, 0xec, 0x34, 0xfb, 0x3c, 0x79, 0xb6, 0x9e, 0xcf, 0x66, 0x27, 0xdf, 0xb2,
	0xef, 0x13, 0x2b, 0xfe, 0x63, 0xc3, 0x98, 0xa1, 0xa8, 0xab, 0x52, 0xe0, 0x23, 0x48, 0x3a, 0x32,
	0x91, 0xb4, 0xf9, 0x24, 0x7a, 0xce, 0x7f, 0x51, 0x1a, 0x62, 0x32, 0x32, 0x61, 0x32, 0x40, 0xcd,
	0x36, 0xa0, 0x46, 0xc0, 0xce, 0x19, 0x4a, 0x85, 0x90, 0xc3, 0xd4, 0x59, 0x87, 0xc3, 0x1d, 0xc2,
	0x71, 0x70, 0xdf, 0xa1, 0xf7, 0xa0, 0xff, 0xc1, 0x0b, 0x1b, 0x4a, 0x24, 0x11, 0x04, 0x05, 0x43,
	0xd1, 0x5e, 0xcb, 0x8f, 0x28, 0x16, 0x0a, 0x2d, 0x9f, 0xe9, 0x2b, 0xf2, 0xe1, 0x21, 0x5d, 0xb1,
	0x39, 0xdd, 0x88, 0xd7, 0x16, 0x45, 0x6f, 0xc3, 0xd7, 0xd3, 0x20, 0x39, 0x77, 0xd5, 0xbf, 0xe7,
	0xdd, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xfa, 0x1a, 0x8c, 0x8b, 0x04, 0x00, 0x00,
}
