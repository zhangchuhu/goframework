// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.6.0 by WSRD Tencent.
// Generated from `EndpointF.jce'
// **********************************************************************

package taf
import "reflect"
import "code.yy.com/yytars/goframework/jce_parser/gojce"

type EndpointF struct {
    Host string
    Port int32
    Timeout int32
    Istcp int32
    Grid int32
    Groupworkid int32
    Grouprealid int32
    SetId string
    Qos int32
    BakFlag int32
    GridFlag int32
    Weight int32
    WeightType int32
    Cpuload int32
    Sampletime int64
    ContainerName string
    GrayFlag int32
    BenchmarkType int32
    AuthType int32
}

func (_obj *EndpointF) resetDefault() {
    _obj.Host = ""
    _obj.Port = 0
    _obj.Timeout = 0
    _obj.Istcp = 0
    _obj.Grid = 0
    _obj.Groupworkid = 0
    _obj.Grouprealid = 0
    _obj.SetId = ""
    _obj.Qos = 0
    _obj.BakFlag = 0
    _obj.GridFlag = 0
    _obj.Weight = 0
    _obj.WeightType = 0
    _obj.Cpuload = 0
    _obj.Sampletime = 0
    _obj.ContainerName = ""
    _obj.GrayFlag = 0
    _obj.BenchmarkType = 0
    _obj.AuthType = 0
}

func (_obj *EndpointF) WriteTo(_os gojce.JceOutputStream) error {
    var _err error
    if _err = _os.Write(reflect.ValueOf(&_obj.Host), 0); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Port), 1); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Timeout), 2); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Istcp), 3); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Grid), 4); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Groupworkid), 5); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Grouprealid), 6); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.SetId), 7); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Qos), 8); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.BakFlag), 9); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.GridFlag), 10); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Weight), 11); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.WeightType), 12); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Cpuload), 13); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Sampletime), 14); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.ContainerName), 15); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.GrayFlag), 16); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.BenchmarkType), 17); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.AuthType), 19); _err != nil {
        return _err
    }
    return nil
}

func (_obj *EndpointF) ReadFrom(_is gojce.JceInputStream) error {
    var _err error
    var _i interface{}
    _obj.resetDefault()
    _i, _err = _is.Read(reflect.TypeOf(_obj.Host), 0, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Host = _i.(string)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Port), 1, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Port = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Timeout), 2, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Timeout = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Istcp), 3, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Istcp = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Grid), 4, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Grid = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Groupworkid), 5, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Groupworkid = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Grouprealid), 6, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Grouprealid = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.SetId), 7, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.SetId = _i.(string)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Qos), 8, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Qos = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.BakFlag), 9, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.BakFlag = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.GridFlag), 10, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.GridFlag = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Weight), 11, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Weight = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.WeightType), 12, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.WeightType = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Cpuload), 13, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Cpuload = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Sampletime), 14, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Sampletime = _i.(int64)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.ContainerName), 15, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.ContainerName = _i.(string)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.GrayFlag), 16, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.GrayFlag = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.BenchmarkType), 17, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.BenchmarkType = _i.(int32)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.AuthType), 19, false)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.AuthType = _i.(int32)
    }
    return nil
}

func (_obj *EndpointF) Display(_ds gojce.JceDisplayer) {
    _ds.Display(reflect.ValueOf(&_obj.Host), "host")
    _ds.Display(reflect.ValueOf(&_obj.Port), "port")
    _ds.Display(reflect.ValueOf(&_obj.Timeout), "timeout")
    _ds.Display(reflect.ValueOf(&_obj.Istcp), "istcp")
    _ds.Display(reflect.ValueOf(&_obj.Grid), "grid")
    _ds.Display(reflect.ValueOf(&_obj.Groupworkid), "groupworkid")
    _ds.Display(reflect.ValueOf(&_obj.Grouprealid), "grouprealid")
    _ds.Display(reflect.ValueOf(&_obj.SetId), "setId")
    _ds.Display(reflect.ValueOf(&_obj.Qos), "qos")
    _ds.Display(reflect.ValueOf(&_obj.BakFlag), "bakFlag")
    _ds.Display(reflect.ValueOf(&_obj.GridFlag), "gridFlag")
    _ds.Display(reflect.ValueOf(&_obj.Weight), "weight")
    _ds.Display(reflect.ValueOf(&_obj.WeightType), "weightType")
    _ds.Display(reflect.ValueOf(&_obj.Cpuload), "cpuload")
    _ds.Display(reflect.ValueOf(&_obj.Sampletime), "sampletime")
    _ds.Display(reflect.ValueOf(&_obj.ContainerName), "containerName")
    _ds.Display(reflect.ValueOf(&_obj.GrayFlag), "grayFlag")
    _ds.Display(reflect.ValueOf(&_obj.BenchmarkType), "benchmarkType")
    _ds.Display(reflect.ValueOf(&_obj.AuthType), "authType")
}

func (_obj *EndpointF) WriteJson(_en gojce.JceJsonEncoder) ([]byte, error) {
    var _err error
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Host), "host")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Port), "port")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Timeout), "timeout")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Istcp), "istcp")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Grid), "grid")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Groupworkid), "groupworkid")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Grouprealid), "grouprealid")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.SetId), "setId")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Qos), "qos")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.BakFlag), "bakFlag")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.GridFlag), "gridFlag")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Weight), "weight")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.WeightType), "weightType")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Cpuload), "cpuload")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Sampletime), "sampletime")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.ContainerName), "containerName")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.GrayFlag), "grayFlag")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.BenchmarkType), "benchmarkType")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.AuthType), "authType")
    if _err != nil {
        return nil, _err
    }
    return _en.ToBytes(), nil
}

func (_obj *EndpointF) ReadJson(_de gojce.JceJsonDecoder) error {
    return _de.DecodeJSON(reflect.ValueOf(_obj))
}

