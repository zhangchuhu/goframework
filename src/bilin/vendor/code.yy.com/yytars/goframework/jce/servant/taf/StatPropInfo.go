// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 1.6.0 by WSRD Tencent.
// Generated from `PropertyF.jce'
// **********************************************************************

package taf
import "reflect"
import "code.yy.com/yytars/goframework/jce_parser/gojce"

type StatPropInfo struct {
    Policy string
    Value string
}

func (_obj *StatPropInfo) resetDefault() {
    _obj.Policy = ""
    _obj.Value = ""
}

func (_obj *StatPropInfo) WriteTo(_os gojce.JceOutputStream) error {
    var _err error
    if _err = _os.Write(reflect.ValueOf(&_obj.Policy), 0); _err != nil {
        return _err
    }
    if _err = _os.Write(reflect.ValueOf(&_obj.Value), 1); _err != nil {
        return _err
    }
    return nil
}

func (_obj *StatPropInfo) ReadFrom(_is gojce.JceInputStream) error {
    var _err error
    var _i interface{}
    _obj.resetDefault()
    _i, _err = _is.Read(reflect.TypeOf(_obj.Policy), 0, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Policy = _i.(string)
    }
    _i, _err = _is.Read(reflect.TypeOf(_obj.Value), 1, true)
    if _err != nil {
        return _err
    }
    if _i != nil {
        _obj.Value = _i.(string)
    }
    return nil
}

func (_obj *StatPropInfo) Display(_ds gojce.JceDisplayer) {
    _ds.Display(reflect.ValueOf(&_obj.Policy), "policy")
    _ds.Display(reflect.ValueOf(&_obj.Value), "value")
}

func (_obj *StatPropInfo) WriteJson(_en gojce.JceJsonEncoder) ([]byte, error) {
    var _err error
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Policy), "policy")
    if _err != nil {
        return nil, _err
    }
    _err = _en.EncodeJSON(reflect.ValueOf(&_obj.Value), "value")
    if _err != nil {
        return nil, _err
    }
    return _en.ToBytes(), nil
}

func (_obj *StatPropInfo) ReadJson(_de gojce.JceJsonDecoder) error {
    return _de.DecodeJSON(reflect.ValueOf(_obj))
}

